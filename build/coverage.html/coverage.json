{"/home/travis/build/npmtest/node-npmtest-tern/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_tern */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-tern/lib.npmtest_tern.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/lib.npmtest_tern.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":55}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_tern */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_tern = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_tern = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-tern/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":48}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":62},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-tern && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_tern */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_tern","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_tern.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_tern.rollup.js'] =","            local.assetsDict['/assets.npmtest_tern.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_tern.__dirname + '/lib.npmtest_tern.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/tern.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/tern.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":9,"10":1,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":1,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":1,"275":0,"276":0,"277":0,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":1,"291":0,"292":0,"293":1,"294":0,"295":0,"296":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":1,"351":0,"352":0,"353":0,"354":0,"355":1,"356":0,"357":0,"358":0,"359":0,"360":0,"361":1,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":1,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":1,"379":0,"380":1,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":1,"407":1,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":1,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":1,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":1,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":1,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":1,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":1,"472":0,"473":0,"474":0,"475":0,"476":1,"477":0,"478":0,"479":1,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":1,"488":0,"489":1,"490":0,"491":0,"492":0,"493":0,"494":1,"495":1,"496":1,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":1,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":1,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":1,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":1,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":1,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":1,"637":0,"638":0,"639":0,"640":0,"641":1,"642":0,"643":0,"644":0,"645":1,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":1,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":1,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":1,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":1,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":1,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":1,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":1,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":1,"768":0,"769":0,"770":0,"771":0,"772":0,"773":1,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":1,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":1,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":1,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":1,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":1,"856":0,"857":0,"858":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0,0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0,0,0],"161":[0,0],"162":[0,0],"163":[0,0,0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0,0],"173":[0,0],"174":[0,0,0],"175":[0,0],"176":[0,0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0,0,0],"187":[0,0],"188":[0,0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0,0],"195":[0,0],"196":[0,0],"197":[0,0,0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0,0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0,0,0,0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0,0,0,0,0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0]},"f":{"1":1,"2":1,"3":9,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":1},"end":{"line":7,"column":21}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":9},"end":{"line":14,"column":55}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":48}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":29}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":23},"end":{"line":24,"column":38}}},"6":{"name":"(anonymous_6)","line":71,"loc":{"start":{"line":71,"column":28},"end":{"line":71,"column":49}}},"7":{"name":"File","line":73,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":30}}},"8":{"name":"(anonymous_8)","line":78,"loc":{"start":{"line":78,"column":30},"end":{"line":78,"column":44}}},"9":{"name":"parseFile","line":80,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":32}}},"10":{"name":"updateText","line":96,"loc":{"start":{"line":96,"column":2},"end":{"line":96,"column":39}}},"11":{"name":"(anonymous_11)","line":99,"loc":{"start":{"line":99,"column":30},"end":{"line":99,"column":41}}},"12":{"name":"(anonymous_12)","line":105,"loc":{"start":{"line":105,"column":32},"end":{"line":105,"column":50}}},"13":{"name":"(anonymous_13)","line":133,"loc":{"start":{"line":133,"column":13},"end":{"line":133,"column":55}}},"14":{"name":"(anonymous_14)","line":140,"loc":{"start":{"line":140,"column":13},"end":{"line":140,"column":28}}},"15":{"name":"(anonymous_15)","line":151,"loc":{"start":{"line":151,"column":11},"end":{"line":151,"column":22}}},"16":{"name":"(anonymous_16)","line":166,"loc":{"start":{"line":166,"column":13},"end":{"line":166,"column":30}}},"17":{"name":"(anonymous_17)","line":171,"loc":{"start":{"line":171,"column":27},"end":{"line":171,"column":47}}},"18":{"name":"(anonymous_18)","line":175,"loc":{"start":{"line":175,"column":33},"end":{"line":175,"column":43}}},"19":{"name":"(anonymous_19)","line":180,"loc":{"start":{"line":180,"column":14},"end":{"line":180,"column":29}}},"20":{"name":"(anonymous_20)","line":184,"loc":{"start":{"line":184,"column":11},"end":{"line":184,"column":23}}},"21":{"name":"(anonymous_21)","line":186,"loc":{"start":{"line":186,"column":29},"end":{"line":186,"column":43}}},"22":{"name":"(anonymous_22)","line":192,"loc":{"start":{"line":192,"column":22},"end":{"line":192,"column":33}}},"23":{"name":"(anonymous_23)","line":195,"loc":{"start":{"line":195,"column":23},"end":{"line":195,"column":37}}},"24":{"name":"(anonymous_24)","line":200,"loc":{"start":{"line":200,"column":13},"end":{"line":200,"column":37}}},"25":{"name":"(anonymous_25)","line":207,"loc":{"start":{"line":207,"column":16},"end":{"line":207,"column":31}}},"26":{"name":"(anonymous_26)","line":215,"loc":{"start":{"line":215,"column":16},"end":{"line":215,"column":40}}},"27":{"name":"(anonymous_27)","line":228,"loc":{"start":{"line":228,"column":23},"end":{"line":228,"column":38}}},"28":{"name":"doRequest","line":235,"loc":{"start":{"line":235,"column":2},"end":{"line":235,"column":34}}},"29":{"name":"(anonymous_29)","line":256,"loc":{"start":{"line":256,"column":34},"end":{"line":256,"column":44}}},"30":{"name":"(anonymous_30)","line":266,"loc":{"start":{"line":266,"column":32},"end":{"line":266,"column":46}}},"31":{"name":"(anonymous_31)","line":273,"loc":{"start":{"line":273,"column":32},"end":{"line":273,"column":43}}},"32":{"name":"(anonymous_32)","line":274,"loc":{"start":{"line":274,"column":26},"end":{"line":274,"column":37}}},"33":{"name":"analyzeFile","line":287,"loc":{"start":{"line":287,"column":2},"end":{"line":287,"column":34}}},"34":{"name":"(anonymous_34)","line":288,"loc":{"start":{"line":288,"column":30},"end":{"line":288,"column":41}}},"35":{"name":"ensureFile","line":297,"loc":{"start":{"line":297,"column":2},"end":{"line":297,"column":47}}},"36":{"name":"(anonymous_36)","line":322,"loc":{"start":{"line":322,"column":32},"end":{"line":322,"column":52}}},"37":{"name":"fetchAll","line":331,"loc":{"start":{"line":331,"column":2},"end":{"line":331,"column":28}}},"38":{"name":"(anonymous_38)","line":333,"loc":{"start":{"line":333,"column":22},"end":{"line":333,"column":37}}},"39":{"name":"(anonymous_39)","line":337,"loc":{"start":{"line":337,"column":39},"end":{"line":337,"column":59}}},"40":{"name":"waitOnFetch","line":351,"loc":{"start":{"line":351,"column":2},"end":{"line":351,"column":43}}},"41":{"name":"(anonymous_41)","line":352,"loc":{"start":{"line":352,"column":15},"end":{"line":352,"column":26}}},"42":{"name":"analyzeAll","line":361,"loc":{"start":{"line":361,"column":2},"end":{"line":361,"column":42}}},"43":{"name":"(anonymous_43)","line":367,"loc":{"start":{"line":367,"column":61},"end":{"line":367,"column":72}}},"44":{"name":"(anonymous_44)","line":382,"loc":{"start":{"line":382,"column":21},"end":{"line":382,"column":36}}},"45":{"name":"(anonymous_45)","line":392,"loc":{"start":{"line":392,"column":45},"end":{"line":392,"column":56}}},"46":{"name":"firstLine","line":407,"loc":{"start":{"line":407,"column":2},"end":{"line":407,"column":26}}},"47":{"name":"findMatchingPosition","line":413,"loc":{"start":{"line":413,"column":2},"end":{"line":413,"column":50}}},"48":{"name":"scopeDepth","line":425,"loc":{"start":{"line":425,"column":2},"end":{"line":425,"column":25}}},"49":{"name":"ternError","line":430,"loc":{"start":{"line":430,"column":2},"end":{"line":430,"column":26}}},"50":{"name":"resolveFile","line":436,"loc":{"start":{"line":436,"column":2},"end":{"line":436,"column":46}}},"51":{"name":"(anonymous_51)","line":453,"loc":{"start":{"line":453,"column":30},"end":{"line":453,"column":41}}},"52":{"name":"astSize","line":501,"loc":{"start":{"line":501,"column":2},"end":{"line":501,"column":25}}},"53":{"name":"(anonymous_53)","line":503,"loc":{"start":{"line":503,"column":35},"end":{"line":503,"column":46}}},"54":{"name":"parentDepth","line":507,"loc":{"start":{"line":507,"column":2},"end":{"line":507,"column":36}}},"55":{"name":"budgetName","line":516,"loc":{"start":{"line":516,"column":2},"end":{"line":516,"column":33}}},"56":{"name":"chargeOnBudget","line":525,"loc":{"start":{"line":525,"column":2},"end":{"line":525,"column":37}}},"57":{"name":"isPosition","line":538,"loc":{"start":{"line":538,"column":2},"end":{"line":538,"column":27}}},"58":{"name":"invalidDoc","line":544,"loc":{"start":{"line":544,"column":2},"end":{"line":544,"column":27}}},"59":{"name":"forwardCharacters","line":568,"loc":{"start":{"line":568,"column":2},"end":{"line":568,"column":49}}},"60":{"name":"findLineStart","line":577,"loc":{"start":{"line":577,"column":2},"end":{"line":577,"column":37}}},"61":{"name":"(anonymous_61)","line":592,"loc":{"start":{"line":592,"column":40},"end":{"line":592,"column":70}}},"62":{"name":"charDistanceBetween","line":611,"loc":{"start":{"line":611,"column":2},"end":{"line":611,"column":49}}},"63":{"name":"asLineChar","line":620,"loc":{"start":{"line":620,"column":2},"end":{"line":620,"column":33}}},"64":{"name":"(anonymous_64)","line":637,"loc":{"start":{"line":637,"column":38},"end":{"line":637,"column":65}}},"65":{"name":"clean","line":649,"loc":{"start":{"line":649,"column":2},"end":{"line":649,"column":22}}},"66":{"name":"maybeSet","line":653,"loc":{"start":{"line":653,"column":2},"end":{"line":653,"column":36}}},"67":{"name":"compareCompletions","line":659,"loc":{"start":{"line":659,"column":2},"end":{"line":659,"column":36}}},"68":{"name":"isStringAround","line":666,"loc":{"start":{"line":666,"column":2},"end":{"line":666,"column":44}}},"69":{"name":"pointInProp","line":671,"loc":{"start":{"line":671,"column":2},"end":{"line":671,"column":39}}},"70":{"name":"(anonymous_70)","line":684,"loc":{"start":{"line":684,"column":46},"end":{"line":684,"column":94}}},"71":{"name":"findCompletions","line":712,"loc":{"start":{"line":712,"column":2},"end":{"line":712,"column":45}}},"72":{"name":"gather","line":724,"loc":{"start":{"line":724,"column":4},"end":{"line":724,"column":47}}},"73":{"name":"(anonymous_73)","line":797,"loc":{"start":{"line":797,"column":32},"end":{"line":797,"column":50}}},"74":{"name":"(anonymous_74)","line":804,"loc":{"start":{"line":804,"column":76},"end":{"line":804,"column":89}}},"75":{"name":"(anonymous_75)","line":805,"loc":{"start":{"line":805,"column":30},"end":{"line":805,"column":44}}},"76":{"name":"findProperties","line":822,"loc":{"start":{"line":822,"column":2},"end":{"line":822,"column":38}}},"77":{"name":"inBody","line":830,"loc":{"start":{"line":830,"column":2},"end":{"line":830,"column":29}}},"78":{"name":"(anonymous_78)","line":843,"loc":{"start":{"line":843,"column":41},"end":{"line":843,"column":69}}},"79":{"name":"findExprOrThrow","line":864,"loc":{"start":{"line":864,"column":2},"end":{"line":864,"column":46}}},"80":{"name":"ensureObj","line":870,"loc":{"start":{"line":870,"column":2},"end":{"line":870,"column":25}}},"81":{"name":"findExprType","line":875,"loc":{"start":{"line":875,"column":2},"end":{"line":875,"column":48}}},"82":{"name":"findTypeAt","line":905,"loc":{"start":{"line":905,"column":2},"end":{"line":905,"column":40}}},"83":{"name":"parseDoc","line":936,"loc":{"start":{"line":936,"column":2},"end":{"line":936,"column":32}}},"84":{"name":"findDocs","line":950,"loc":{"start":{"line":950,"column":2},"end":{"line":950,"column":38}}},"85":{"name":"storeTypeDocs","line":959,"loc":{"start":{"line":959,"column":2},"end":{"line":959,"column":43}}},"86":{"name":"(anonymous_86)","line":971,"loc":{"start":{"line":971,"column":34},"end":{"line":971,"column":48}}},"87":{"name":"(anonymous_87)","line":981,"loc":{"start":{"line":981,"column":38},"end":{"line":981,"column":73}}},"88":{"name":"findDef","line":994,"loc":{"start":{"line":994,"column":2},"end":{"line":994,"column":37}}},"89":{"name":"findRefsToVariable","line":1023,"loc":{"start":{"line":1023,"column":2},"end":{"line":1023,"column":64}}},"90":{"name":"storeRef","line":1030,"loc":{"start":{"line":1030,"column":4},"end":{"line":1030,"column":28}}},"91":{"name":"(anonymous_91)","line":1031,"loc":{"start":{"line":1031,"column":13},"end":{"line":1031,"column":50}}},"92":{"name":"(anonymous_92)","line":1056,"loc":{"start":{"line":1056,"column":74},"end":{"line":1056,"column":89}}},"93":{"name":"findRefsToProperty","line":1077,"loc":{"start":{"line":1077,"column":2},"end":{"line":1077,"column":66}}},"94":{"name":"storeRef","line":1086,"loc":{"start":{"line":1086,"column":4},"end":{"line":1086,"column":28}}},"95":{"name":"(anonymous_95)","line":1087,"loc":{"start":{"line":1087,"column":13},"end":{"line":1087,"column":28}}},"96":{"name":"findRefs","line":1106,"loc":{"start":{"line":1106,"column":2},"end":{"line":1106,"column":38}}},"97":{"name":"buildRename","line":1128,"loc":{"start":{"line":1128,"column":2},"end":{"line":1128,"column":41}}},"98":{"name":"(anonymous_98)","line":1135,"loc":{"start":{"line":1135,"column":31},"end":{"line":1135,"column":42}}},"99":{"name":"listFiles","line":1148,"loc":{"start":{"line":1148,"column":2},"end":{"line":1148,"column":26}}},"100":{"name":"(anonymous_100)","line":1149,"loc":{"start":{"line":1149,"column":33},"end":{"line":1149,"column":44}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":1153,"column":3}},"2":{"start":{"line":8,"column":2},"end":{"line":10,"column":61}},"3":{"start":{"line":9,"column":4},"end":{"line":10,"column":61}},"4":{"start":{"line":11,"column":2},"end":{"line":12,"column":98}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":98}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":75}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":36}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":74}},"9":{"start":{"line":18,"column":50},"end":{"line":18,"column":71}},"10":{"start":{"line":20,"column":2},"end":{"line":34,"column":4}},"11":{"start":{"line":23,"column":31},"end":{"line":23,"column":61}},"12":{"start":{"line":23,"column":47},"end":{"line":23,"column":61}},"13":{"start":{"line":24,"column":40},"end":{"line":24,"column":52}},"14":{"start":{"line":36,"column":2},"end":{"line":69,"column":4}},"15":{"start":{"line":71,"column":2},"end":{"line":71,"column":78}},"16":{"start":{"line":71,"column":51},"end":{"line":71,"column":75}},"17":{"start":{"line":73,"column":2},"end":{"line":77,"column":3}},"18":{"start":{"line":74,"column":4},"end":{"line":74,"column":21}},"19":{"start":{"line":75,"column":4},"end":{"line":75,"column":25}},"20":{"start":{"line":76,"column":4},"end":{"line":76,"column":64}},"21":{"start":{"line":78,"column":2},"end":{"line":78,"column":78}},"22":{"start":{"line":78,"column":46},"end":{"line":78,"column":75}},"23":{"start":{"line":80,"column":2},"end":{"line":92,"column":3}},"24":{"start":{"line":81,"column":4},"end":{"line":87,"column":5}},"25":{"start":{"line":88,"column":4},"end":{"line":88,"column":81}},"26":{"start":{"line":89,"column":4},"end":{"line":89,"column":40}},"27":{"start":{"line":90,"column":4},"end":{"line":90,"column":38}},"28":{"start":{"line":91,"column":4},"end":{"line":91,"column":14}},"29":{"start":{"line":94,"column":2},"end":{"line":94,"column":33}},"30":{"start":{"line":96,"column":2},"end":{"line":103,"column":3}},"31":{"start":{"line":97,"column":4},"end":{"line":97,"column":74}},"32":{"start":{"line":98,"column":4},"end":{"line":98,"column":43}},"33":{"start":{"line":99,"column":4},"end":{"line":101,"column":7}},"34":{"start":{"line":100,"column":6},"end":{"line":100,"column":37}},"35":{"start":{"line":102,"column":4},"end":{"line":102,"column":28}},"36":{"start":{"line":105,"column":2},"end":{"line":131,"column":4}},"37":{"start":{"line":106,"column":4},"end":{"line":106,"column":19}},"38":{"start":{"line":107,"column":4},"end":{"line":107,"column":33}},"39":{"start":{"line":108,"column":4},"end":{"line":109,"column":37}},"40":{"start":{"line":108,"column":34},"end":{"line":109,"column":37}},"41":{"start":{"line":109,"column":6},"end":{"line":109,"column":37}},"42":{"start":{"line":111,"column":4},"end":{"line":111,"column":60}},"43":{"start":{"line":112,"column":4},"end":{"line":112,"column":60}},"44":{"start":{"line":112,"column":38},"end":{"line":112,"column":60}},"45":{"start":{"line":114,"column":4},"end":{"line":114,"column":33}},"46":{"start":{"line":115,"column":4},"end":{"line":115,"column":40}},"47":{"start":{"line":116,"column":4},"end":{"line":116,"column":20}},"48":{"start":{"line":117,"column":4},"end":{"line":117,"column":39}},"49":{"start":{"line":118,"column":4},"end":{"line":118,"column":25}},"50":{"start":{"line":119,"column":4},"end":{"line":119,"column":39}},"51":{"start":{"line":120,"column":4},"end":{"line":120,"column":18}},"52":{"start":{"line":121,"column":4},"end":{"line":121,"column":21}},"53":{"start":{"line":122,"column":4},"end":{"line":122,"column":27}},"54":{"start":{"line":123,"column":4},"end":{"line":123,"column":17}},"55":{"start":{"line":125,"column":4},"end":{"line":125,"column":37}},"56":{"start":{"line":126,"column":4},"end":{"line":126,"column":38}},"57":{"start":{"line":127,"column":4},"end":{"line":128,"column":54}},"58":{"start":{"line":127,"column":40},"end":{"line":128,"column":54}},"59":{"start":{"line":128,"column":6},"end":{"line":128,"column":54}},"60":{"start":{"line":130,"column":4},"end":{"line":130,"column":17}},"61":{"start":{"line":132,"column":2},"end":{"line":233,"column":5}},"62":{"start":{"line":135,"column":6},"end":{"line":135,"column":61}},"63":{"start":{"line":135,"column":47},"end":{"line":135,"column":61}},"64":{"start":{"line":136,"column":6},"end":{"line":137,"column":43}},"65":{"start":{"line":137,"column":8},"end":{"line":137,"column":43}},"66":{"start":{"line":138,"column":6},"end":{"line":138,"column":43}},"67":{"start":{"line":141,"column":6},"end":{"line":141,"column":37}},"68":{"start":{"line":142,"column":6},"end":{"line":149,"column":7}},"69":{"start":{"line":143,"column":8},"end":{"line":143,"column":40}},"70":{"start":{"line":144,"column":8},"end":{"line":147,"column":9}},"71":{"start":{"line":145,"column":10},"end":{"line":146,"column":77}},"72":{"start":{"line":145,"column":37},"end":{"line":145,"column":63}},"73":{"start":{"line":146,"column":15},"end":{"line":146,"column":77}},"74":{"start":{"line":146,"column":49},"end":{"line":146,"column":77}},"75":{"start":{"line":148,"column":8},"end":{"line":148,"column":39}},"76":{"start":{"line":152,"column":6},"end":{"line":152,"column":27}},"77":{"start":{"line":153,"column":6},"end":{"line":153,"column":51}},"78":{"start":{"line":154,"column":6},"end":{"line":154,"column":20}},"79":{"start":{"line":155,"column":6},"end":{"line":155,"column":41}},"80":{"start":{"line":156,"column":6},"end":{"line":162,"column":7}},"81":{"start":{"line":157,"column":8},"end":{"line":157,"column":33}},"82":{"start":{"line":158,"column":8},"end":{"line":161,"column":9}},"83":{"start":{"line":159,"column":10},"end":{"line":159,"column":38}},"84":{"start":{"line":160,"column":10},"end":{"line":160,"column":28}},"85":{"start":{"line":163,"column":6},"end":{"line":163,"column":31}},"86":{"start":{"line":167,"column":6},"end":{"line":167,"column":32}},"87":{"start":{"line":168,"column":6},"end":{"line":168,"column":29}},"88":{"start":{"line":168,"column":15},"end":{"line":168,"column":29}},"89":{"start":{"line":170,"column":6},"end":{"line":170,"column":22}},"90":{"start":{"line":171,"column":6},"end":{"line":177,"column":9}},"91":{"start":{"line":172,"column":8},"end":{"line":172,"column":21}},"92":{"start":{"line":173,"column":8},"end":{"line":176,"column":9}},"93":{"start":{"line":174,"column":10},"end":{"line":174,"column":23}},"94":{"start":{"line":175,"column":10},"end":{"line":175,"column":47}},"95":{"start":{"line":181,"column":6},"end":{"line":181,"column":56}},"96":{"start":{"line":185,"column":6},"end":{"line":185,"column":23}},"97":{"start":{"line":186,"column":6},"end":{"line":189,"column":9}},"98":{"start":{"line":187,"column":8},"end":{"line":187,"column":31}},"99":{"start":{"line":187,"column":17},"end":{"line":187,"column":31}},"100":{"start":{"line":188,"column":8},"end":{"line":188,"column":33}},"101":{"start":{"line":193,"column":6},"end":{"line":193,"column":21}},"102":{"start":{"line":196,"column":6},"end":{"line":196,"column":37}},"103":{"start":{"line":196,"column":15},"end":{"line":196,"column":37}},"104":{"start":{"line":197,"column":6},"end":{"line":197,"column":65}},"105":{"start":{"line":197,"column":32},"end":{"line":197,"column":65}},"106":{"start":{"line":201,"column":6},"end":{"line":202,"column":31}},"107":{"start":{"line":201,"column":19},"end":{"line":201,"column":42}},"108":{"start":{"line":202,"column":11},"end":{"line":202,"column":31}},"109":{"start":{"line":204,"column":6},"end":{"line":204,"column":31}},"110":{"start":{"line":204,"column":19},"end":{"line":204,"column":31}},"111":{"start":{"line":208,"column":6},"end":{"line":212,"column":7}},"112":{"start":{"line":208,"column":49},"end":{"line":212,"column":7}},"113":{"start":{"line":209,"column":8},"end":{"line":209,"column":31}},"114":{"start":{"line":210,"column":8},"end":{"line":210,"column":34}},"115":{"start":{"line":210,"column":21},"end":{"line":210,"column":34}},"116":{"start":{"line":211,"column":8},"end":{"line":211,"column":15}},"117":{"start":{"line":216,"column":6},"end":{"line":216,"column":77}},"118":{"start":{"line":216,"column":33},"end":{"line":216,"column":77}},"119":{"start":{"line":217,"column":6},"end":{"line":217,"column":72}},"120":{"start":{"line":217,"column":66},"end":{"line":217,"column":72}},"121":{"start":{"line":218,"column":6},"end":{"line":218,"column":31}},"122":{"start":{"line":219,"column":6},"end":{"line":219,"column":45}},"123":{"start":{"line":222,"column":6},"end":{"line":222,"column":23}},"124":{"start":{"line":222,"column":17},"end":{"line":222,"column":23}},"125":{"start":{"line":223,"column":6},"end":{"line":223,"column":60}},"126":{"start":{"line":223,"column":21},"end":{"line":223,"column":60}},"127":{"start":{"line":224,"column":6},"end":{"line":225,"column":40}},"128":{"start":{"line":224,"column":23},"end":{"line":225,"column":40}},"129":{"start":{"line":224,"column":53},"end":{"line":225,"column":40}},"130":{"start":{"line":225,"column":8},"end":{"line":225,"column":40}},"131":{"start":{"line":229,"column":6},"end":{"line":229,"column":73}},"132":{"start":{"line":230,"column":6},"end":{"line":230,"column":87}},"133":{"start":{"line":230,"column":46},"end":{"line":230,"column":87}},"134":{"start":{"line":231,"column":6},"end":{"line":231,"column":17}},"135":{"start":{"line":235,"column":2},"end":{"line":285,"column":3}},"136":{"start":{"line":236,"column":4},"end":{"line":237,"column":65}},"137":{"start":{"line":237,"column":6},"end":{"line":237,"column":65}},"138":{"start":{"line":239,"column":4},"end":{"line":239,"column":26}},"139":{"start":{"line":241,"column":4},"end":{"line":241,"column":28}},"140":{"start":{"line":241,"column":16},"end":{"line":241,"column":28}},"141":{"start":{"line":243,"column":4},"end":{"line":243,"column":32}},"142":{"start":{"line":244,"column":4},"end":{"line":244,"column":33}},"143":{"start":{"line":244,"column":22},"end":{"line":244,"column":33}},"144":{"start":{"line":245,"column":4},"end":{"line":252,"column":5}},"145":{"start":{"line":246,"column":6},"end":{"line":246,"column":26}},"146":{"start":{"line":247,"column":6},"end":{"line":247,"column":50}},"147":{"start":{"line":248,"column":6},"end":{"line":251,"column":81}},"148":{"start":{"line":249,"column":8},"end":{"line":249,"column":31}},"149":{"start":{"line":251,"column":8},"end":{"line":251,"column":81}},"150":{"start":{"line":254,"column":4},"end":{"line":254,"column":75}},"151":{"start":{"line":255,"column":4},"end":{"line":258,"column":5}},"152":{"start":{"line":256,"column":6},"end":{"line":256,"column":48}},"153":{"start":{"line":257,"column":6},"end":{"line":257,"column":13}},"154":{"start":{"line":260,"column":4},"end":{"line":260,"column":43}},"155":{"start":{"line":261,"column":4},"end":{"line":264,"column":5}},"156":{"start":{"line":262,"column":6},"end":{"line":262,"column":82}},"157":{"start":{"line":262,"column":41},"end":{"line":262,"column":82}},"158":{"start":{"line":263,"column":6},"end":{"line":263,"column":68}},"159":{"start":{"line":263,"column":34},"end":{"line":263,"column":68}},"160":{"start":{"line":266,"column":4},"end":{"line":284,"column":7}},"161":{"start":{"line":267,"column":6},"end":{"line":267,"column":29}},"162":{"start":{"line":267,"column":15},"end":{"line":267,"column":29}},"163":{"start":{"line":268,"column":6},"end":{"line":268,"column":76}},"164":{"start":{"line":269,"column":6},"end":{"line":270,"column":76}},"165":{"start":{"line":270,"column":8},"end":{"line":270,"column":76}},"166":{"start":{"line":272,"column":6},"end":{"line":272,"column":27}},"167":{"start":{"line":273,"column":6},"end":{"line":283,"column":9}},"168":{"start":{"line":274,"column":8},"end":{"line":274,"column":83}},"169":{"start":{"line":274,"column":39},"end":{"line":274,"column":80}},"170":{"start":{"line":275,"column":8},"end":{"line":281,"column":9}},"171":{"start":{"line":276,"column":10},"end":{"line":277,"column":21}},"172":{"start":{"line":276,"column":26},"end":{"line":276,"column":64}},"173":{"start":{"line":277,"column":15},"end":{"line":277,"column":21}},"174":{"start":{"line":279,"column":10},"end":{"line":279,"column":81}},"175":{"start":{"line":279,"column":58},"end":{"line":279,"column":81}},"176":{"start":{"line":280,"column":10},"end":{"line":280,"column":22}},"177":{"start":{"line":282,"column":8},"end":{"line":282,"column":24}},"178":{"start":{"line":287,"column":2},"end":{"line":295,"column":3}},"179":{"start":{"line":288,"column":4},"end":{"line":293,"column":7}},"180":{"start":{"line":289,"column":6},"end":{"line":289,"column":35}},"181":{"start":{"line":290,"column":6},"end":{"line":290,"column":37}},"182":{"start":{"line":291,"column":6},"end":{"line":291,"column":53}},"183":{"start":{"line":292,"column":6},"end":{"line":292,"column":36}},"184":{"start":{"line":294,"column":4},"end":{"line":294,"column":16}},"185":{"start":{"line":297,"column":2},"end":{"line":329,"column":3}},"186":{"start":{"line":298,"column":4},"end":{"line":298,"column":35}},"187":{"start":{"line":299,"column":4},"end":{"line":313,"column":5}},"188":{"start":{"line":300,"column":6},"end":{"line":307,"column":7}},"189":{"start":{"line":301,"column":8},"end":{"line":305,"column":9}},"190":{"start":{"line":302,"column":10},"end":{"line":302,"column":36}},"191":{"start":{"line":303,"column":10},"end":{"line":303,"column":39}},"192":{"start":{"line":304,"column":10},"end":{"line":304,"column":29}},"193":{"start":{"line":306,"column":8},"end":{"line":306,"column":37}},"194":{"start":{"line":308,"column":6},"end":{"line":311,"column":7}},"195":{"start":{"line":309,"column":8},"end":{"line":309,"column":30}},"196":{"start":{"line":310,"column":8},"end":{"line":310,"column":50}},"197":{"start":{"line":310,"column":28},"end":{"line":310,"column":50}},"198":{"start":{"line":312,"column":6},"end":{"line":312,"column":13}},"199":{"start":{"line":315,"column":4},"end":{"line":315,"column":38}},"200":{"start":{"line":316,"column":4},"end":{"line":316,"column":25}},"201":{"start":{"line":317,"column":4},"end":{"line":317,"column":29}},"202":{"start":{"line":318,"column":4},"end":{"line":328,"column":5}},"203":{"start":{"line":319,"column":6},"end":{"line":319,"column":34}},"204":{"start":{"line":320,"column":11},"end":{"line":328,"column":5}},"205":{"start":{"line":321,"column":6},"end":{"line":321,"column":29}},"206":{"start":{"line":322,"column":6},"end":{"line":325,"column":9}},"207":{"start":{"line":323,"column":8},"end":{"line":323,"column":42}},"208":{"start":{"line":324,"column":8},"end":{"line":324,"column":35}},"209":{"start":{"line":327,"column":6},"end":{"line":327,"column":61}},"210":{"start":{"line":331,"column":2},"end":{"line":349,"column":3}},"211":{"start":{"line":332,"column":4},"end":{"line":332,"column":38}},"212":{"start":{"line":333,"column":4},"end":{"line":347,"column":7}},"213":{"start":{"line":334,"column":6},"end":{"line":334,"column":36}},"214":{"start":{"line":334,"column":29},"end":{"line":334,"column":36}},"215":{"start":{"line":335,"column":6},"end":{"line":346,"column":7}},"216":{"start":{"line":336,"column":8},"end":{"line":336,"column":21}},"217":{"start":{"line":337,"column":8},"end":{"line":341,"column":11}},"218":{"start":{"line":338,"column":10},"end":{"line":338,"column":67}},"219":{"start":{"line":338,"column":34},"end":{"line":338,"column":50}},"220":{"start":{"line":338,"column":51},"end":{"line":338,"column":65}},"221":{"start":{"line":339,"column":10},"end":{"line":339,"column":44}},"222":{"start":{"line":340,"column":10},"end":{"line":340,"column":27}},"223":{"start":{"line":343,"column":8},"end":{"line":345,"column":36}},"224":{"start":{"line":344,"column":10},"end":{"line":344,"column":70}},"225":{"start":{"line":345,"column":22},"end":{"line":345,"column":34}},"226":{"start":{"line":348,"column":4},"end":{"line":348,"column":18}},"227":{"start":{"line":348,"column":14},"end":{"line":348,"column":18}},"228":{"start":{"line":351,"column":2},"end":{"line":359,"column":3}},"229":{"start":{"line":352,"column":4},"end":{"line":356,"column":6}},"230":{"start":{"line":353,"column":6},"end":{"line":353,"column":41}},"231":{"start":{"line":354,"column":6},"end":{"line":354,"column":28}},"232":{"start":{"line":355,"column":6},"end":{"line":355,"column":37}},"233":{"start":{"line":357,"column":4},"end":{"line":357,"column":38}},"234":{"start":{"line":358,"column":4},"end":{"line":358,"column":61}},"235":{"start":{"line":361,"column":2},"end":{"line":405,"column":3}},"236":{"start":{"line":362,"column":4},"end":{"line":362,"column":60}},"237":{"start":{"line":362,"column":21},"end":{"line":362,"column":60}},"238":{"start":{"line":364,"column":4},"end":{"line":364,"column":27}},"239":{"start":{"line":365,"column":4},"end":{"line":365,"column":50}},"240":{"start":{"line":365,"column":13},"end":{"line":365,"column":35}},"241":{"start":{"line":365,"column":36},"end":{"line":365,"column":48}},"242":{"start":{"line":367,"column":4},"end":{"line":370,"column":7}},"243":{"start":{"line":367,"column":35},"end":{"line":370,"column":7}},"244":{"start":{"line":368,"column":6},"end":{"line":368,"column":34}},"245":{"start":{"line":369,"column":6},"end":{"line":369,"column":32}},"246":{"start":{"line":372,"column":4},"end":{"line":372,"column":20}},"247":{"start":{"line":375,"column":4},"end":{"line":402,"column":5}},"248":{"start":{"line":376,"column":6},"end":{"line":376,"column":25}},"249":{"start":{"line":377,"column":6},"end":{"line":381,"column":7}},"250":{"start":{"line":378,"column":8},"end":{"line":378,"column":32}},"251":{"start":{"line":379,"column":8},"end":{"line":380,"column":76}},"252":{"start":{"line":379,"column":31},"end":{"line":379,"column":44}},"253":{"start":{"line":380,"column":13},"end":{"line":380,"column":76}},"254":{"start":{"line":380,"column":55},"end":{"line":380,"column":76}},"255":{"start":{"line":382,"column":6},"end":{"line":384,"column":9}},"256":{"start":{"line":383,"column":8},"end":{"line":383,"column":71}},"257":{"start":{"line":385,"column":6},"end":{"line":401,"column":7}},"258":{"start":{"line":386,"column":8},"end":{"line":386,"column":32}},"259":{"start":{"line":387,"column":8},"end":{"line":400,"column":9}},"260":{"start":{"line":388,"column":10},"end":{"line":388,"column":31}},"261":{"start":{"line":389,"column":15},"end":{"line":400,"column":9}},"262":{"start":{"line":390,"column":10},"end":{"line":390,"column":36}},"263":{"start":{"line":391,"column":10},"end":{"line":396,"column":11}},"264":{"start":{"line":392,"column":12},"end":{"line":392,"column":85}},"265":{"start":{"line":392,"column":58},"end":{"line":392,"column":81}},"266":{"start":{"line":394,"column":12},"end":{"line":395,"column":24}},"267":{"start":{"line":394,"column":45},"end":{"line":394,"column":56}},"268":{"start":{"line":395,"column":17},"end":{"line":395,"column":24}},"269":{"start":{"line":397,"column":10},"end":{"line":397,"column":49}},"270":{"start":{"line":399,"column":10},"end":{"line":399,"column":33}},"271":{"start":{"line":403,"column":4},"end":{"line":404,"column":41}},"272":{"start":{"line":403,"column":14},"end":{"line":403,"column":18}},"273":{"start":{"line":404,"column":9},"end":{"line":404,"column":41}},"274":{"start":{"line":407,"column":2},"end":{"line":411,"column":3}},"275":{"start":{"line":408,"column":4},"end":{"line":408,"column":32}},"276":{"start":{"line":409,"column":4},"end":{"line":409,"column":28}},"277":{"start":{"line":409,"column":17},"end":{"line":409,"column":28}},"278":{"start":{"line":410,"column":4},"end":{"line":410,"column":29}},"279":{"start":{"line":413,"column":2},"end":{"line":423,"column":3}},"280":{"start":{"line":414,"column":4},"end":{"line":414,"column":54}},"281":{"start":{"line":415,"column":4},"end":{"line":421,"column":5}},"282":{"start":{"line":415,"column":29},"end":{"line":421,"column":5}},"283":{"start":{"line":416,"column":6},"end":{"line":416,"column":42}},"284":{"start":{"line":417,"column":6},"end":{"line":417,"column":49}},"285":{"start":{"line":417,"column":43},"end":{"line":417,"column":49}},"286":{"start":{"line":418,"column":6},"end":{"line":419,"column":24}},"287":{"start":{"line":419,"column":8},"end":{"line":419,"column":24}},"288":{"start":{"line":420,"column":6},"end":{"line":420,"column":32}},"289":{"start":{"line":422,"column":4},"end":{"line":422,"column":19}},"290":{"start":{"line":425,"column":2},"end":{"line":428,"column":3}},"291":{"start":{"line":426,"column":4},"end":{"line":426,"column":42}},"292":{"start":{"line":427,"column":4},"end":{"line":427,"column":13}},"293":{"start":{"line":430,"column":2},"end":{"line":434,"column":3}},"294":{"start":{"line":431,"column":4},"end":{"line":431,"column":29}},"295":{"start":{"line":432,"column":4},"end":{"line":432,"column":27}},"296":{"start":{"line":433,"column":4},"end":{"line":433,"column":15}},"297":{"start":{"line":436,"column":2},"end":{"line":497,"column":3}},"298":{"start":{"line":437,"column":4},"end":{"line":437,"column":39}},"299":{"start":{"line":438,"column":4},"end":{"line":438,"column":42}},"300":{"start":{"line":438,"column":16},"end":{"line":438,"column":42}},"301":{"start":{"line":440,"column":4},"end":{"line":440,"column":36}},"302":{"start":{"line":441,"column":4},"end":{"line":441,"column":93}},"303":{"start":{"line":441,"column":40},"end":{"line":441,"column":93}},"304":{"start":{"line":442,"column":4},"end":{"line":442,"column":59}},"305":{"start":{"line":442,"column":29},"end":{"line":442,"column":59}},"306":{"start":{"line":446,"column":4},"end":{"line":446,"column":57}},"307":{"start":{"line":447,"column":4},"end":{"line":447,"column":118}},"308":{"start":{"line":448,"column":4},"end":{"line":448,"column":36}},"309":{"start":{"line":449,"column":4},"end":{"line":449,"column":69}},"310":{"start":{"line":450,"column":4},"end":{"line":450,"column":97}},"311":{"start":{"line":451,"column":4},"end":{"line":451,"column":29}},"312":{"start":{"line":453,"column":4},"end":{"line":495,"column":7}},"313":{"start":{"line":454,"column":6},"end":{"line":454,"column":58}},"314":{"start":{"line":456,"column":6},"end":{"line":456,"column":30}},"315":{"start":{"line":457,"column":6},"end":{"line":461,"column":7}},"316":{"start":{"line":458,"column":8},"end":{"line":458,"column":85}},"317":{"start":{"line":459,"column":8},"end":{"line":460,"column":70}},"318":{"start":{"line":460,"column":10},"end":{"line":460,"column":70}},"319":{"start":{"line":462,"column":6},"end":{"line":467,"column":7}},"320":{"start":{"line":463,"column":8},"end":{"line":463,"column":42}},"321":{"start":{"line":464,"column":8},"end":{"line":464,"column":51}},"322":{"start":{"line":464,"column":38},"end":{"line":464,"column":51}},"323":{"start":{"line":465,"column":8},"end":{"line":465,"column":44}},"324":{"start":{"line":466,"column":8},"end":{"line":466,"column":26}},"325":{"start":{"line":469,"column":6},"end":{"line":469,"column":72}},"326":{"start":{"line":470,"column":6},"end":{"line":470,"column":84}},"327":{"start":{"line":471,"column":6},"end":{"line":471,"column":101}},"328":{"start":{"line":472,"column":6},"end":{"line":472,"column":37}},"329":{"start":{"line":473,"column":6},"end":{"line":473,"column":48}},"330":{"start":{"line":478,"column":6},"end":{"line":494,"column":7}},"331":{"start":{"line":478,"column":19},"end":{"line":494,"column":7}},"332":{"start":{"line":479,"column":8},"end":{"line":479,"column":72}},"333":{"start":{"line":480,"column":8},"end":{"line":480,"column":48}},"334":{"start":{"line":480,"column":30},"end":{"line":480,"column":48}},"335":{"start":{"line":481,"column":8},"end":{"line":493,"column":9}},"336":{"start":{"line":482,"column":10},"end":{"line":482,"column":58}},"337":{"start":{"line":483,"column":10},"end":{"line":483,"column":40}},"338":{"start":{"line":484,"column":15},"end":{"line":493,"column":9}},"339":{"start":{"line":485,"column":10},"end":{"line":485,"column":85}},"340":{"start":{"line":486,"column":10},"end":{"line":486,"column":70}},"341":{"start":{"line":486,"column":52},"end":{"line":486,"column":70}},"342":{"start":{"line":487,"column":10},"end":{"line":487,"column":58}},"343":{"start":{"line":488,"column":10},"end":{"line":488,"column":80}},"344":{"start":{"line":488,"column":62},"end":{"line":488,"column":80}},"345":{"start":{"line":489,"column":10},"end":{"line":490,"column":49}},"346":{"start":{"line":490,"column":12},"end":{"line":490,"column":49}},"347":{"start":{"line":491,"column":10},"end":{"line":491,"column":41}},"348":{"start":{"line":492,"column":10},"end":{"line":492,"column":45}},"349":{"start":{"line":496,"column":4},"end":{"line":496,"column":16}},"350":{"start":{"line":501,"column":2},"end":{"line":505,"column":3}},"351":{"start":{"line":502,"column":4},"end":{"line":502,"column":17}},"352":{"start":{"line":503,"column":4},"end":{"line":503,"column":60}},"353":{"start":{"line":503,"column":48},"end":{"line":503,"column":55}},"354":{"start":{"line":504,"column":4},"end":{"line":504,"column":16}},"355":{"start":{"line":507,"column":2},"end":{"line":514,"column":3}},"356":{"start":{"line":508,"column":4},"end":{"line":508,"column":18}},"357":{"start":{"line":509,"column":4},"end":{"line":512,"column":5}},"358":{"start":{"line":510,"column":6},"end":{"line":510,"column":42}},"359":{"start":{"line":511,"column":6},"end":{"line":511,"column":14}},"360":{"start":{"line":513,"column":4},"end":{"line":513,"column":17}},"361":{"start":{"line":516,"column":2},"end":{"line":523,"column":3}},"362":{"start":{"line":517,"column":4},"end":{"line":521,"column":5}},"363":{"start":{"line":518,"column":6},"end":{"line":518,"column":44}},"364":{"start":{"line":519,"column":6},"end":{"line":519,"column":32}},"365":{"start":{"line":519,"column":26},"end":{"line":519,"column":32}},"366":{"start":{"line":520,"column":6},"end":{"line":520,"column":20}},"367":{"start":{"line":522,"column":4},"end":{"line":522,"column":21}},"368":{"start":{"line":525,"column":2},"end":{"line":534,"column":3}},"369":{"start":{"line":526,"column":4},"end":{"line":526,"column":38}},"370":{"start":{"line":527,"column":4},"end":{"line":527,"column":33}},"371":{"start":{"line":528,"column":4},"end":{"line":528,"column":35}},"372":{"start":{"line":529,"column":4},"end":{"line":530,"column":64}},"373":{"start":{"line":530,"column":6},"end":{"line":530,"column":64}},"374":{"start":{"line":531,"column":4},"end":{"line":531,"column":35}},"375":{"start":{"line":531,"column":22},"end":{"line":531,"column":35}},"376":{"start":{"line":532,"column":4},"end":{"line":532,"column":38}},"377":{"start":{"line":533,"column":4},"end":{"line":533,"column":16}},"378":{"start":{"line":538,"column":2},"end":{"line":541,"column":3}},"379":{"start":{"line":539,"column":4},"end":{"line":540,"column":63}},"380":{"start":{"line":544,"column":2},"end":{"line":564,"column":3}},"381":{"start":{"line":545,"column":4},"end":{"line":549,"column":5}},"382":{"start":{"line":546,"column":6},"end":{"line":546,"column":83}},"383":{"start":{"line":546,"column":45},"end":{"line":546,"column":83}},"384":{"start":{"line":547,"column":6},"end":{"line":547,"column":100}},"385":{"start":{"line":547,"column":59},"end":{"line":547,"column":100}},"386":{"start":{"line":548,"column":6},"end":{"line":548,"column":94}},"387":{"start":{"line":548,"column":55},"end":{"line":548,"column":94}},"388":{"start":{"line":550,"column":4},"end":{"line":563,"column":5}},"389":{"start":{"line":551,"column":6},"end":{"line":551,"column":78}},"390":{"start":{"line":551,"column":37},"end":{"line":551,"column":78}},"391":{"start":{"line":552,"column":6},"end":{"line":562,"column":7}},"392":{"start":{"line":553,"column":8},"end":{"line":553,"column":32}},"393":{"start":{"line":554,"column":8},"end":{"line":561,"column":93}},"394":{"start":{"line":554,"column":37},"end":{"line":554,"column":72}},"395":{"start":{"line":555,"column":13},"end":{"line":561,"column":93}},"396":{"start":{"line":555,"column":47},"end":{"line":555,"column":88}},"397":{"start":{"line":556,"column":13},"end":{"line":561,"column":93}},"398":{"start":{"line":556,"column":40},"end":{"line":556,"column":49}},"399":{"start":{"line":557,"column":13},"end":{"line":561,"column":93}},"400":{"start":{"line":557,"column":47},"end":{"line":557,"column":88}},"401":{"start":{"line":558,"column":13},"end":{"line":561,"column":93}},"402":{"start":{"line":559,"column":10},"end":{"line":560,"column":57}},"403":{"start":{"line":560,"column":12},"end":{"line":560,"column":57}},"404":{"start":{"line":561,"column":15},"end":{"line":561,"column":93}},"405":{"start":{"line":561,"column":40},"end":{"line":561,"column":93}},"406":{"start":{"line":566,"column":2},"end":{"line":566,"column":27}},"407":{"start":{"line":568,"column":2},"end":{"line":575,"column":3}},"408":{"start":{"line":569,"column":4},"end":{"line":569,"column":30}},"409":{"start":{"line":570,"column":4},"end":{"line":573,"column":5}},"410":{"start":{"line":571,"column":6},"end":{"line":571,"column":30}},"411":{"start":{"line":572,"column":6},"end":{"line":572,"column":65}},"412":{"start":{"line":572,"column":60},"end":{"line":572,"column":65}},"413":{"start":{"line":574,"column":4},"end":{"line":574,"column":14}},"414":{"start":{"line":577,"column":2},"end":{"line":590,"column":3}},"415":{"start":{"line":578,"column":4},"end":{"line":578,"column":81}},"416":{"start":{"line":579,"column":4},"end":{"line":579,"column":29}},"417":{"start":{"line":580,"column":4},"end":{"line":580,"column":84}},"418":{"start":{"line":581,"column":4},"end":{"line":581,"column":70}},"419":{"start":{"line":583,"column":4},"end":{"line":588,"column":5}},"420":{"start":{"line":584,"column":6},"end":{"line":584,"column":16}},"421":{"start":{"line":585,"column":6},"end":{"line":585,"column":40}},"422":{"start":{"line":586,"column":6},"end":{"line":586,"column":33}},"423":{"start":{"line":586,"column":21},"end":{"line":586,"column":33}},"424":{"start":{"line":587,"column":6},"end":{"line":587,"column":61}},"425":{"start":{"line":587,"column":43},"end":{"line":587,"column":61}},"426":{"start":{"line":589,"column":4},"end":{"line":589,"column":15}},"427":{"start":{"line":592,"column":2},"end":{"line":609,"column":4}},"428":{"start":{"line":593,"column":4},"end":{"line":603,"column":5}},"429":{"start":{"line":594,"column":6},"end":{"line":594,"column":52}},"430":{"start":{"line":595,"column":6},"end":{"line":600,"column":7}},"431":{"start":{"line":596,"column":8},"end":{"line":597,"column":72}},"432":{"start":{"line":596,"column":22},"end":{"line":596,"column":45}},"433":{"start":{"line":597,"column":13},"end":{"line":597,"column":72}},"434":{"start":{"line":599,"column":8},"end":{"line":599,"column":57}},"435":{"start":{"line":602,"column":6},"end":{"line":602,"column":43}},"436":{"start":{"line":604,"column":4},"end":{"line":607,"column":5}},"437":{"start":{"line":605,"column":6},"end":{"line":606,"column":71}},"438":{"start":{"line":605,"column":20},"end":{"line":605,"column":43}},"439":{"start":{"line":606,"column":11},"end":{"line":606,"column":71}},"440":{"start":{"line":608,"column":4},"end":{"line":608,"column":15}},"441":{"start":{"line":611,"column":2},"end":{"line":618,"column":3}},"442":{"start":{"line":612,"column":4},"end":{"line":612,"column":29}},"443":{"start":{"line":613,"column":4},"end":{"line":616,"column":5}},"444":{"start":{"line":614,"column":6},"end":{"line":614,"column":30}},"445":{"start":{"line":615,"column":6},"end":{"line":615,"column":66}},"446":{"start":{"line":615,"column":60},"end":{"line":615,"column":66}},"447":{"start":{"line":617,"column":4},"end":{"line":617,"column":15}},"448":{"start":{"line":620,"column":2},"end":{"line":635,"column":3}},"449":{"start":{"line":621,"column":4},"end":{"line":621,"column":39}},"450":{"start":{"line":621,"column":15},"end":{"line":621,"column":39}},"451":{"start":{"line":622,"column":4},"end":{"line":622,"column":63}},"452":{"start":{"line":623,"column":4},"end":{"line":623,"column":42}},"453":{"start":{"line":624,"column":4},"end":{"line":627,"column":5}},"454":{"start":{"line":624,"column":50},"end":{"line":627,"column":5}},"455":{"start":{"line":625,"column":6},"end":{"line":625,"column":33}},"456":{"start":{"line":626,"column":6},"end":{"line":626,"column":29}},"457":{"start":{"line":628,"column":4},"end":{"line":633,"column":5}},"458":{"start":{"line":629,"column":6},"end":{"line":629,"column":46}},"459":{"start":{"line":630,"column":6},"end":{"line":630,"column":39}},"460":{"start":{"line":630,"column":33},"end":{"line":630,"column":39}},"461":{"start":{"line":631,"column":6},"end":{"line":631,"column":26}},"462":{"start":{"line":632,"column":6},"end":{"line":632,"column":13}},"463":{"start":{"line":634,"column":4},"end":{"line":634,"column":71}},"464":{"start":{"line":637,"column":2},"end":{"line":646,"column":4}},"465":{"start":{"line":638,"column":4},"end":{"line":645,"column":5}},"466":{"start":{"line":639,"column":6},"end":{"line":639,"column":38}},"467":{"start":{"line":640,"column":6},"end":{"line":641,"column":109}},"468":{"start":{"line":641,"column":8},"end":{"line":641,"column":109}},"469":{"start":{"line":642,"column":6},"end":{"line":642,"column":17}},"470":{"start":{"line":644,"column":6},"end":{"line":644,"column":89}},"471":{"start":{"line":649,"column":2},"end":{"line":652,"column":3}},"472":{"start":{"line":650,"column":4},"end":{"line":650,"column":66}},"473":{"start":{"line":650,"column":26},"end":{"line":650,"column":66}},"474":{"start":{"line":650,"column":49},"end":{"line":650,"column":66}},"475":{"start":{"line":651,"column":4},"end":{"line":651,"column":15}},"476":{"start":{"line":653,"column":2},"end":{"line":655,"column":3}},"477":{"start":{"line":654,"column":4},"end":{"line":654,"column":37}},"478":{"start":{"line":654,"column":21},"end":{"line":654,"column":37}},"479":{"start":{"line":659,"column":2},"end":{"line":664,"column":3}},"480":{"start":{"line":660,"column":4},"end":{"line":660,"column":57}},"481":{"start":{"line":660,"column":32},"end":{"line":660,"column":43}},"482":{"start":{"line":660,"column":44},"end":{"line":660,"column":55}},"483":{"start":{"line":661,"column":4},"end":{"line":661,"column":55}},"484":{"start":{"line":662,"column":4},"end":{"line":663,"column":29}},"485":{"start":{"line":662,"column":20},"end":{"line":662,"column":55}},"486":{"start":{"line":663,"column":9},"end":{"line":663,"column":29}},"487":{"start":{"line":666,"column":2},"end":{"line":669,"column":3}},"488":{"start":{"line":667,"column":4},"end":{"line":668,"column":53}},"489":{"start":{"line":671,"column":2},"end":{"line":677,"column":3}},"490":{"start":{"line":672,"column":4},"end":{"line":676,"column":5}},"491":{"start":{"line":673,"column":6},"end":{"line":673,"column":42}},"492":{"start":{"line":674,"column":6},"end":{"line":675,"column":23}},"493":{"start":{"line":675,"column":8},"end":{"line":675,"column":23}},"494":{"start":{"line":679,"column":2},"end":{"line":681,"column":68}},"495":{"start":{"line":682,"column":2},"end":{"line":682,"column":110}},"496":{"start":{"line":684,"column":2},"end":{"line":710,"column":4}},"497":{"start":{"line":685,"column":4},"end":{"line":685,"column":76}},"498":{"start":{"line":686,"column":4},"end":{"line":686,"column":46}},"499":{"start":{"line":688,"column":4},"end":{"line":691,"column":5}},"500":{"start":{"line":689,"column":6},"end":{"line":689,"column":29}},"501":{"start":{"line":690,"column":6},"end":{"line":690,"column":52}},"502":{"start":{"line":690,"column":45},"end":{"line":690,"column":52}},"503":{"start":{"line":692,"column":4},"end":{"line":692,"column":47}},"504":{"start":{"line":693,"column":4},"end":{"line":693,"column":26}},"505":{"start":{"line":695,"column":4},"end":{"line":707,"column":5}},"506":{"start":{"line":696,"column":6},"end":{"line":696,"column":28}},"507":{"start":{"line":697,"column":6},"end":{"line":697,"column":32}},"508":{"start":{"line":698,"column":6},"end":{"line":698,"column":35}},"509":{"start":{"line":699,"column":6},"end":{"line":700,"column":40}},"510":{"start":{"line":700,"column":8},"end":{"line":700,"column":40}},"511":{"start":{"line":701,"column":6},"end":{"line":702,"column":76}},"512":{"start":{"line":702,"column":8},"end":{"line":702,"column":76}},"513":{"start":{"line":703,"column":6},"end":{"line":704,"column":59}},"514":{"start":{"line":704,"column":8},"end":{"line":704,"column":59}},"515":{"start":{"line":705,"column":6},"end":{"line":706,"column":68}},"516":{"start":{"line":706,"column":8},"end":{"line":706,"column":68}},"517":{"start":{"line":708,"column":4},"end":{"line":708,"column":45}},"518":{"start":{"line":708,"column":22},"end":{"line":708,"column":45}},"519":{"start":{"line":709,"column":4},"end":{"line":709,"column":15}},"520":{"start":{"line":712,"column":2},"end":{"line":820,"column":3}},"521":{"start":{"line":713,"column":4},"end":{"line":713,"column":71}},"522":{"start":{"line":713,"column":27},"end":{"line":713,"column":71}},"523":{"start":{"line":714,"column":4},"end":{"line":714,"column":69}},"524":{"start":{"line":715,"column":4},"end":{"line":715,"column":37}},"525":{"start":{"line":715,"column":20},"end":{"line":715,"column":37}},"526":{"start":{"line":717,"column":4},"end":{"line":717,"column":87}},"527":{"start":{"line":718,"column":4},"end":{"line":718,"column":92}},"528":{"start":{"line":718,"column":80},"end":{"line":718,"column":92}},"529":{"start":{"line":719,"column":4},"end":{"line":720,"column":98}},"530":{"start":{"line":720,"column":6},"end":{"line":720,"column":98}},"531":{"start":{"line":720,"column":88},"end":{"line":720,"column":98}},"532":{"start":{"line":721,"column":4},"end":{"line":721,"column":75}},"533":{"start":{"line":722,"column":4},"end":{"line":722,"column":57}},"534":{"start":{"line":722,"column":31},"end":{"line":722,"column":57}},"535":{"start":{"line":724,"column":4},"end":{"line":733,"column":5}},"536":{"start":{"line":727,"column":6},"end":{"line":727,"column":106}},"537":{"start":{"line":727,"column":99},"end":{"line":727,"column":106}},"538":{"start":{"line":728,"column":6},"end":{"line":729,"column":90}},"539":{"start":{"line":729,"column":83},"end":{"line":729,"column":90}},"540":{"start":{"line":730,"column":6},"end":{"line":730,"column":53}},"541":{"start":{"line":730,"column":46},"end":{"line":730,"column":53}},"542":{"start":{"line":731,"column":6},"end":{"line":731,"column":90}},"543":{"start":{"line":732,"column":6},"end":{"line":732,"column":74}},"544":{"start":{"line":732,"column":58},"end":{"line":732,"column":74}},"545":{"start":{"line":735,"column":4},"end":{"line":735,"column":39}},"546":{"start":{"line":737,"column":4},"end":{"line":737,"column":83}},"547":{"start":{"line":738,"column":4},"end":{"line":738,"column":27}},"548":{"start":{"line":741,"column":4},"end":{"line":768,"column":5}},"549":{"start":{"line":742,"column":6},"end":{"line":742,"column":33}},"550":{"start":{"line":744,"column":6},"end":{"line":750,"column":10}},"551":{"start":{"line":746,"column":8},"end":{"line":750,"column":10}},"552":{"start":{"line":752,"column":6},"end":{"line":767,"column":7}},"553":{"start":{"line":753,"column":8},"end":{"line":753,"column":28}},"554":{"start":{"line":754,"column":13},"end":{"line":767,"column":7}},"555":{"start":{"line":755,"column":8},"end":{"line":755,"column":58}},"556":{"start":{"line":756,"column":8},"end":{"line":757,"column":59}},"557":{"start":{"line":757,"column":10},"end":{"line":757,"column":59}},"558":{"start":{"line":758,"column":13},"end":{"line":767,"column":7}},"559":{"start":{"line":759,"column":8},"end":{"line":759,"column":53}},"560":{"start":{"line":760,"column":8},"end":{"line":766,"column":9}},"561":{"start":{"line":761,"column":10},"end":{"line":761,"column":26}},"562":{"start":{"line":762,"column":10},"end":{"line":762,"column":42}},"563":{"start":{"line":763,"column":15},"end":{"line":766,"column":9}},"564":{"start":{"line":764,"column":10},"end":{"line":764,"column":26}},"565":{"start":{"line":765,"column":10},"end":{"line":765,"column":30}},"566":{"start":{"line":770,"column":4},"end":{"line":789,"column":5}},"567":{"start":{"line":774,"column":6},"end":{"line":774,"column":56}},"568":{"start":{"line":775,"column":6},"end":{"line":775,"column":38}},"569":{"start":{"line":776,"column":11},"end":{"line":789,"column":5}},"570":{"start":{"line":777,"column":6},"end":{"line":777,"column":38}},"571":{"start":{"line":778,"column":6},"end":{"line":778,"column":70}},"572":{"start":{"line":779,"column":6},"end":{"line":779,"column":47}},"573":{"start":{"line":780,"column":6},"end":{"line":780,"column":49}},"574":{"start":{"line":781,"column":11},"end":{"line":789,"column":5}},"575":{"start":{"line":782,"column":6},"end":{"line":782,"column":36}},"576":{"start":{"line":783,"column":6},"end":{"line":783,"column":133}},"577":{"start":{"line":783,"column":121},"end":{"line":783,"column":133}},"578":{"start":{"line":784,"column":6},"end":{"line":784,"column":54}},"579":{"start":{"line":785,"column":6},"end":{"line":788,"column":7}},"580":{"start":{"line":786,"column":8},"end":{"line":786,"column":69}},"581":{"start":{"line":787,"column":8},"end":{"line":787,"column":20}},"582":{"start":{"line":791,"column":4},"end":{"line":809,"column":5}},"583":{"start":{"line":792,"column":6},"end":{"line":792,"column":39}},"584":{"start":{"line":794,"column":6},"end":{"line":794,"column":61}},"585":{"start":{"line":794,"column":19},"end":{"line":794,"column":61}},"586":{"start":{"line":796,"column":6},"end":{"line":797,"column":97}},"587":{"start":{"line":797,"column":8},"end":{"line":797,"column":97}},"588":{"start":{"line":797,"column":51},"end":{"line":797,"column":94}},"589":{"start":{"line":797,"column":78},"end":{"line":797,"column":94}},"590":{"start":{"line":798,"column":6},"end":{"line":799,"column":78}},"591":{"start":{"line":799,"column":8},"end":{"line":799,"column":78}},"592":{"start":{"line":799,"column":39},"end":{"line":799,"column":78}},"593":{"start":{"line":800,"column":6},"end":{"line":800,"column":36}},"594":{"start":{"line":802,"column":6},"end":{"line":802,"column":68}},"595":{"start":{"line":803,"column":6},"end":{"line":807,"column":7}},"596":{"start":{"line":804,"column":8},"end":{"line":806,"column":11}},"597":{"start":{"line":805,"column":10},"end":{"line":805,"column":71}},"598":{"start":{"line":805,"column":46},"end":{"line":805,"column":67}},"599":{"start":{"line":808,"column":6},"end":{"line":808,"column":38}},"600":{"start":{"line":810,"column":4},"end":{"line":810,"column":58}},"601":{"start":{"line":812,"column":4},"end":{"line":812,"column":67}},"602":{"start":{"line":812,"column":30},"end":{"line":812,"column":67}},"603":{"start":{"line":813,"column":4},"end":{"line":813,"column":37}},"604":{"start":{"line":815,"column":4},"end":{"line":819,"column":38}},"605":{"start":{"line":822,"column":2},"end":{"line":828,"column":3}},"606":{"start":{"line":823,"column":4},"end":{"line":823,"column":42}},"607":{"start":{"line":824,"column":4},"end":{"line":825,"column":85}},"608":{"start":{"line":825,"column":6},"end":{"line":825,"column":85}},"609":{"start":{"line":825,"column":68},"end":{"line":825,"column":85}},"610":{"start":{"line":826,"column":4},"end":{"line":826,"column":61}},"611":{"start":{"line":826,"column":30},"end":{"line":826,"column":61}},"612":{"start":{"line":827,"column":4},"end":{"line":827,"column":32}},"613":{"start":{"line":830,"column":2},"end":{"line":841,"column":3}},"614":{"start":{"line":831,"column":4},"end":{"line":831,"column":36}},"615":{"start":{"line":832,"column":4},"end":{"line":832,"column":27}},"616":{"start":{"line":832,"column":15},"end":{"line":832,"column":27}},"617":{"start":{"line":833,"column":4},"end":{"line":839,"column":5}},"618":{"start":{"line":834,"column":6},"end":{"line":834,"column":27}},"619":{"start":{"line":835,"column":6},"end":{"line":835,"column":37}},"620":{"start":{"line":837,"column":6},"end":{"line":837,"column":24}},"621":{"start":{"line":838,"column":6},"end":{"line":838,"column":20}},"622":{"start":{"line":840,"column":4},"end":{"line":840,"column":37}},"623":{"start":{"line":843,"column":2},"end":{"line":862,"column":4}},"624":{"start":{"line":844,"column":4},"end":{"line":844,"column":71}},"625":{"start":{"line":844,"column":27},"end":{"line":844,"column":71}},"626":{"start":{"line":846,"column":4},"end":{"line":861,"column":5}},"627":{"start":{"line":847,"column":6},"end":{"line":847,"column":83}},"628":{"start":{"line":848,"column":6},"end":{"line":849,"column":28}},"629":{"start":{"line":851,"column":6},"end":{"line":851,"column":98}},"630":{"start":{"line":852,"column":6},"end":{"line":852,"column":74}},"631":{"start":{"line":853,"column":6},"end":{"line":859,"column":7}},"632":{"start":{"line":854,"column":8},"end":{"line":854,"column":82}},"633":{"start":{"line":855,"column":8},"end":{"line":858,"column":23}},"634":{"start":{"line":858,"column":10},"end":{"line":858,"column":23}},"635":{"start":{"line":860,"column":6},"end":{"line":860,"column":17}},"636":{"start":{"line":864,"column":2},"end":{"line":868,"column":3}},"637":{"start":{"line":865,"column":4},"end":{"line":865,"column":43}},"638":{"start":{"line":866,"column":4},"end":{"line":866,"column":26}},"639":{"start":{"line":866,"column":14},"end":{"line":866,"column":26}},"640":{"start":{"line":867,"column":4},"end":{"line":867,"column":60}},"641":{"start":{"line":870,"column":2},"end":{"line":873,"column":3}},"642":{"start":{"line":871,"column":4},"end":{"line":871,"column":79}},"643":{"start":{"line":871,"column":67},"end":{"line":871,"column":79}},"644":{"start":{"line":872,"column":4},"end":{"line":872,"column":14}},"645":{"start":{"line":875,"column":2},"end":{"line":903,"column":3}},"646":{"start":{"line":876,"column":4},"end":{"line":876,"column":13}},"647":{"start":{"line":877,"column":4},"end":{"line":880,"column":5}},"648":{"start":{"line":878,"column":6},"end":{"line":878,"column":28}},"649":{"start":{"line":879,"column":6},"end":{"line":879,"column":40}},"650":{"start":{"line":881,"column":4},"end":{"line":881,"column":47}},"651":{"start":{"line":882,"column":4},"end":{"line":886,"column":5}},"652":{"start":{"line":883,"column":6},"end":{"line":883,"column":43}},"653":{"start":{"line":884,"column":6},"end":{"line":885,"column":53}},"654":{"start":{"line":885,"column":8},"end":{"line":885,"column":53}},"655":{"start":{"line":887,"column":4},"end":{"line":887,"column":71}},"656":{"start":{"line":887,"column":15},"end":{"line":887,"column":71}},"657":{"start":{"line":889,"column":4},"end":{"line":889,"column":16}},"658":{"start":{"line":890,"column":4},"end":{"line":901,"column":5}},"659":{"start":{"line":892,"column":6},"end":{"line":892,"column":34}},"660":{"start":{"line":893,"column":6},"end":{"line":893,"column":68}},"661":{"start":{"line":894,"column":6},"end":{"line":900,"column":7}},"662":{"start":{"line":895,"column":8},"end":{"line":895,"column":36}},"663":{"start":{"line":897,"column":8},"end":{"line":897,"column":40}},"664":{"start":{"line":898,"column":8},"end":{"line":899,"column":41}},"665":{"start":{"line":899,"column":10},"end":{"line":899,"column":41}},"666":{"start":{"line":902,"column":4},"end":{"line":902,"column":16}},"667":{"start":{"line":905,"column":2},"end":{"line":934,"column":3}},"668":{"start":{"line":906,"column":4},"end":{"line":906,"column":47}},"669":{"start":{"line":907,"column":4},"end":{"line":907,"column":69}},"670":{"start":{"line":908,"column":4},"end":{"line":911,"column":28}},"671":{"start":{"line":909,"column":6},"end":{"line":909,"column":54}},"672":{"start":{"line":911,"column":6},"end":{"line":911,"column":28}},"673":{"start":{"line":913,"column":4},"end":{"line":920,"column":5}},"674":{"start":{"line":914,"column":6},"end":{"line":919,"column":37}},"675":{"start":{"line":915,"column":8},"end":{"line":915,"column":34}},"676":{"start":{"line":916,"column":11},"end":{"line":919,"column":37}},"677":{"start":{"line":917,"column":8},"end":{"line":917,"column":43}},"678":{"start":{"line":918,"column":11},"end":{"line":919,"column":37}},"679":{"start":{"line":919,"column":8},"end":{"line":919,"column":37}},"680":{"start":{"line":922,"column":4},"end":{"line":923,"column":55}},"681":{"start":{"line":923,"column":6},"end":{"line":923,"column":55}},"682":{"start":{"line":925,"column":4},"end":{"line":930,"column":37}},"683":{"start":{"line":931,"column":4},"end":{"line":931,"column":49}},"684":{"start":{"line":931,"column":14},"end":{"line":931,"column":49}},"685":{"start":{"line":933,"column":4},"end":{"line":933,"column":25}},"686":{"start":{"line":936,"column":2},"end":{"line":948,"column":3}},"687":{"start":{"line":937,"column":4},"end":{"line":937,"column":26}},"688":{"start":{"line":937,"column":14},"end":{"line":937,"column":26}},"689":{"start":{"line":938,"column":4},"end":{"line":938,"column":46}},"690":{"start":{"line":938,"column":35},"end":{"line":938,"column":46}},"691":{"start":{"line":939,"column":4},"end":{"line":939,"column":43}},"692":{"start":{"line":940,"column":4},"end":{"line":940,"column":59}},"693":{"start":{"line":940,"column":19},"end":{"line":940,"column":59}},"694":{"start":{"line":941,"column":4},"end":{"line":941,"column":37}},"695":{"start":{"line":942,"column":4},"end":{"line":942,"column":37}},"696":{"start":{"line":942,"column":26},"end":{"line":942,"column":37}},"697":{"start":{"line":943,"column":4},"end":{"line":943,"column":38}},"698":{"start":{"line":944,"column":4},"end":{"line":944,"column":31}},"699":{"start":{"line":945,"column":4},"end":{"line":945,"column":38}},"700":{"start":{"line":946,"column":4},"end":{"line":946,"column":51}},"701":{"start":{"line":946,"column":15},"end":{"line":946,"column":51}},"702":{"start":{"line":947,"column":4},"end":{"line":947,"column":15}},"703":{"start":{"line":950,"column":2},"end":{"line":957,"column":3}},"704":{"start":{"line":951,"column":4},"end":{"line":951,"column":37}},"705":{"start":{"line":952,"column":4},"end":{"line":952,"column":52}},"706":{"start":{"line":953,"column":4},"end":{"line":953,"column":93}},"707":{"start":{"line":954,"column":4},"end":{"line":954,"column":31}},"708":{"start":{"line":955,"column":4},"end":{"line":955,"column":51}},"709":{"start":{"line":955,"column":15},"end":{"line":955,"column":51}},"710":{"start":{"line":956,"column":4},"end":{"line":956,"column":25}},"711":{"start":{"line":959,"column":2},"end":{"line":969,"column":3}},"712":{"start":{"line":960,"column":4},"end":{"line":960,"column":37}},"713":{"start":{"line":960,"column":18},"end":{"line":960,"column":37}},"714":{"start":{"line":961,"column":4},"end":{"line":961,"column":54}},"715":{"start":{"line":961,"column":18},"end":{"line":961,"column":54}},"716":{"start":{"line":962,"column":4},"end":{"line":962,"column":46}},"717":{"start":{"line":962,"column":21},"end":{"line":962,"column":46}},"718":{"start":{"line":963,"column":4},"end":{"line":963,"column":41}},"719":{"start":{"line":964,"column":4},"end":{"line":968,"column":5}},"720":{"start":{"line":966,"column":6},"end":{"line":966,"column":25}},"721":{"start":{"line":967,"column":6},"end":{"line":967,"column":42}},"722":{"start":{"line":971,"column":2},"end":{"line":979,"column":4}},"723":{"start":{"line":972,"column":4},"end":{"line":972,"column":28}},"724":{"start":{"line":972,"column":21},"end":{"line":972,"column":28}},"725":{"start":{"line":973,"column":4},"end":{"line":977,"column":5}},"726":{"start":{"line":974,"column":6},"end":{"line":974,"column":32}},"727":{"start":{"line":975,"column":6},"end":{"line":975,"column":65}},"728":{"start":{"line":975,"column":50},"end":{"line":975,"column":65}},"729":{"start":{"line":976,"column":6},"end":{"line":976,"column":46}},"730":{"start":{"line":978,"column":4},"end":{"line":978,"column":62}},"731":{"start":{"line":978,"column":18},"end":{"line":978,"column":62}},"732":{"start":{"line":981,"column":2},"end":{"line":992,"column":4}},"733":{"start":{"line":982,"column":4},"end":{"line":982,"column":32}},"734":{"start":{"line":983,"column":4},"end":{"line":991,"column":5}},"735":{"start":{"line":984,"column":6},"end":{"line":984,"column":76}},"736":{"start":{"line":985,"column":6},"end":{"line":985,"column":101}},"737":{"start":{"line":986,"column":6},"end":{"line":986,"column":99}},"738":{"start":{"line":988,"column":6},"end":{"line":988,"column":42}},"739":{"start":{"line":989,"column":6},"end":{"line":989,"column":61}},"740":{"start":{"line":990,"column":6},"end":{"line":990,"column":57}},"741":{"start":{"line":994,"column":2},"end":{"line":1021,"column":3}},"742":{"start":{"line":995,"column":4},"end":{"line":995,"column":37}},"743":{"start":{"line":996,"column":4},"end":{"line":996,"column":52}},"744":{"start":{"line":997,"column":4},"end":{"line":997,"column":36}},"745":{"start":{"line":997,"column":26},"end":{"line":997,"column":36}},"746":{"start":{"line":999,"column":4},"end":{"line":999,"column":29}},"747":{"start":{"line":1000,"column":4},"end":{"line":1000,"column":86}},"748":{"start":{"line":1002,"column":4},"end":{"line":1006,"column":5}},"749":{"start":{"line":1002,"column":20},"end":{"line":1006,"column":5}},"750":{"start":{"line":1003,"column":6},"end":{"line":1003,"column":29}},"751":{"start":{"line":1004,"column":6},"end":{"line":1004,"column":39}},"752":{"start":{"line":1005,"column":6},"end":{"line":1005,"column":36}},"753":{"start":{"line":1005,"column":17},"end":{"line":1005,"column":36}},"754":{"start":{"line":1008,"column":4},"end":{"line":1019,"column":5}},"755":{"start":{"line":1009,"column":6},"end":{"line":1009,"column":70}},"756":{"start":{"line":1010,"column":6},"end":{"line":1010,"column":111}},"757":{"start":{"line":1011,"column":6},"end":{"line":1011,"column":27}},"758":{"start":{"line":1011,"column":28},"end":{"line":1011,"column":45}},"759":{"start":{"line":1012,"column":6},"end":{"line":1012,"column":32}},"760":{"start":{"line":1013,"column":6},"end":{"line":1013,"column":54}},"761":{"start":{"line":1014,"column":6},"end":{"line":1014,"column":55}},"762":{"start":{"line":1015,"column":6},"end":{"line":1015,"column":66}},"763":{"start":{"line":1016,"column":11},"end":{"line":1019,"column":5}},"764":{"start":{"line":1017,"column":6},"end":{"line":1017,"column":32}},"765":{"start":{"line":1018,"column":6},"end":{"line":1018,"column":42}},"766":{"start":{"line":1020,"column":4},"end":{"line":1020,"column":25}},"767":{"start":{"line":1023,"column":2},"end":{"line":1075,"column":3}},"768":{"start":{"line":1024,"column":4},"end":{"line":1024,"column":30}},"769":{"start":{"line":1026,"column":4},"end":{"line":1026,"column":88}},"770":{"start":{"line":1027,"column":4},"end":{"line":1027,"column":75}},"771":{"start":{"line":1027,"column":16},"end":{"line":1027,"column":75}},"772":{"start":{"line":1029,"column":4},"end":{"line":1029,"column":24}},"773":{"start":{"line":1030,"column":4},"end":{"line":1049,"column":5}},"774":{"start":{"line":1031,"column":6},"end":{"line":1048,"column":8}},"775":{"start":{"line":1032,"column":8},"end":{"line":1034,"column":59}},"776":{"start":{"line":1035,"column":8},"end":{"line":1046,"column":9}},"777":{"start":{"line":1036,"column":10},"end":{"line":1042,"column":11}},"778":{"start":{"line":1037,"column":12},"end":{"line":1037,"column":45}},"779":{"start":{"line":1038,"column":12},"end":{"line":1041,"column":78}},"780":{"start":{"line":1039,"column":14},"end":{"line":1041,"column":78}},"781":{"start":{"line":1043,"column":10},"end":{"line":1043,"column":54}},"782":{"start":{"line":1044,"column":10},"end":{"line":1045,"column":36}},"783":{"start":{"line":1045,"column":12},"end":{"line":1045,"column":36}},"784":{"start":{"line":1047,"column":8},"end":{"line":1047,"column":25}},"785":{"start":{"line":1051,"column":4},"end":{"line":1072,"column":5}},"786":{"start":{"line":1052,"column":6},"end":{"line":1052,"column":21}},"787":{"start":{"line":1053,"column":6},"end":{"line":1060,"column":7}},"788":{"start":{"line":1054,"column":8},"end":{"line":1055,"column":44}},"789":{"start":{"line":1055,"column":10},"end":{"line":1055,"column":44}},"790":{"start":{"line":1055,"column":38},"end":{"line":1055,"column":44}},"791":{"start":{"line":1056,"column":8},"end":{"line":1059,"column":11}},"792":{"start":{"line":1056,"column":18},"end":{"line":1059,"column":11}},"793":{"start":{"line":1057,"column":10},"end":{"line":1058,"column":67}},"794":{"start":{"line":1061,"column":6},"end":{"line":1061,"column":75}},"795":{"start":{"line":1063,"column":6},"end":{"line":1063,"column":22}},"796":{"start":{"line":1064,"column":6},"end":{"line":1071,"column":7}},"797":{"start":{"line":1065,"column":8},"end":{"line":1065,"column":74}},"798":{"start":{"line":1067,"column":8},"end":{"line":1070,"column":9}},"799":{"start":{"line":1068,"column":10},"end":{"line":1068,"column":33}},"800":{"start":{"line":1069,"column":10},"end":{"line":1069,"column":73}},"801":{"start":{"line":1074,"column":4},"end":{"line":1074,"column":48}},"802":{"start":{"line":1077,"column":2},"end":{"line":1104,"column":3}},"803":{"start":{"line":1078,"column":4},"end":{"line":1078,"column":46}},"804":{"start":{"line":1079,"column":4},"end":{"line":1081,"column":5}},"805":{"start":{"line":1080,"column":6},"end":{"line":1080,"column":37}},"806":{"start":{"line":1082,"column":4},"end":{"line":1082,"column":40}},"807":{"start":{"line":1083,"column":4},"end":{"line":1083,"column":77}},"808":{"start":{"line":1083,"column":18},"end":{"line":1083,"column":77}},"809":{"start":{"line":1085,"column":4},"end":{"line":1085,"column":18}},"810":{"start":{"line":1086,"column":4},"end":{"line":1092,"column":5}},"811":{"start":{"line":1087,"column":6},"end":{"line":1091,"column":8}},"812":{"start":{"line":1088,"column":8},"end":{"line":1090,"column":59}},"813":{"start":{"line":1094,"column":4},"end":{"line":1101,"column":5}},"814":{"start":{"line":1095,"column":8},"end":{"line":1095,"column":103}},"815":{"start":{"line":1097,"column":6},"end":{"line":1100,"column":7}},"816":{"start":{"line":1098,"column":8},"end":{"line":1098,"column":31}},"817":{"start":{"line":1099,"column":8},"end":{"line":1099,"column":82}},"818":{"start":{"line":1103,"column":4},"end":{"line":1103,"column":41}},"819":{"start":{"line":1106,"column":2},"end":{"line":1126,"column":3}},"820":{"start":{"line":1107,"column":4},"end":{"line":1107,"column":50}},"821":{"start":{"line":1108,"column":4},"end":{"line":1124,"column":5}},"822":{"start":{"line":1109,"column":6},"end":{"line":1109,"column":56}},"823":{"start":{"line":1110,"column":11},"end":{"line":1124,"column":5}},"824":{"start":{"line":1111,"column":6},"end":{"line":1111,"column":33}},"825":{"start":{"line":1112,"column":6},"end":{"line":1112,"column":35}},"826":{"start":{"line":1113,"column":6},"end":{"line":1113,"column":59}},"827":{"start":{"line":1114,"column":11},"end":{"line":1124,"column":5}},"828":{"start":{"line":1115,"column":6},"end":{"line":1115,"column":44}},"829":{"start":{"line":1116,"column":6},"end":{"line":1120,"column":7}},"830":{"start":{"line":1117,"column":8},"end":{"line":1117,"column":44}},"831":{"start":{"line":1118,"column":8},"end":{"line":1119,"column":63}},"832":{"start":{"line":1119,"column":10},"end":{"line":1119,"column":63}},"833":{"start":{"line":1121,"column":11},"end":{"line":1124,"column":5}},"834":{"start":{"line":1122,"column":6},"end":{"line":1122,"column":28}},"835":{"start":{"line":1123,"column":6},"end":{"line":1123,"column":59}},"836":{"start":{"line":1125,"column":4},"end":{"line":1125,"column":59}},"837":{"start":{"line":1128,"column":2},"end":{"line":1146,"column":3}},"838":{"start":{"line":1129,"column":4},"end":{"line":1129,"column":95}},"839":{"start":{"line":1129,"column":42},"end":{"line":1129,"column":95}},"840":{"start":{"line":1130,"column":4},"end":{"line":1130,"column":44}},"841":{"start":{"line":1131,"column":4},"end":{"line":1131,"column":87}},"842":{"start":{"line":1131,"column":49},"end":{"line":1131,"column":87}},"843":{"start":{"line":1133,"column":4},"end":{"line":1133,"column":91}},"844":{"start":{"line":1134,"column":4},"end":{"line":1134,"column":21}},"845":{"start":{"line":1135,"column":4},"end":{"line":1135,"column":60}},"846":{"start":{"line":1135,"column":43},"end":{"line":1135,"column":57}},"847":{"start":{"line":1137,"column":4},"end":{"line":1137,"column":36}},"848":{"start":{"line":1138,"column":4},"end":{"line":1143,"column":5}},"849":{"start":{"line":1139,"column":6},"end":{"line":1139,"column":24}},"850":{"start":{"line":1140,"column":6},"end":{"line":1141,"column":36}},"851":{"start":{"line":1140,"column":27},"end":{"line":1140,"column":75}},"852":{"start":{"line":1141,"column":11},"end":{"line":1141,"column":36}},"853":{"start":{"line":1142,"column":6},"end":{"line":1142,"column":24}},"854":{"start":{"line":1145,"column":4},"end":{"line":1145,"column":16}},"855":{"start":{"line":1148,"column":2},"end":{"line":1150,"column":3}},"856":{"start":{"line":1149,"column":4},"end":{"line":1149,"column":63}},"857":{"start":{"line":1149,"column":45},"end":{"line":1149,"column":59}},"858":{"start":{"line":1152,"column":2},"end":{"line":1152,"column":29}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":32}},{"start":{"line":8,"column":36},"end":{"line":8,"column":61}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"4":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":33}},{"start":{"line":11,"column":37},"end":{"line":11,"column":47}}]},"5":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":15}},{"start":{"line":13,"column":20},"end":{"line":13,"column":34}}]},"6":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":31},"end":{"line":23,"column":31}},{"start":{"line":23,"column":31},"end":{"line":23,"column":31}}]},"7":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":15},"end":{"line":88,"column":68}},{"start":{"line":88,"column":72},"end":{"line":88,"column":81}}]},"8":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":39},"end":{"line":97,"column":66}},{"start":{"line":97,"column":69},"end":{"line":97,"column":73}}]},"9":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":19},"end":{"line":107,"column":26}},{"start":{"line":107,"column":30},"end":{"line":107,"column":32}}]},"10":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":34},"end":{"line":108,"column":34}},{"start":{"line":108,"column":34},"end":{"line":108,"column":34}}]},"11":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"12":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":40},"end":{"line":127,"column":40}},{"start":{"line":127,"column":40},"end":{"line":127,"column":40}}]},"13":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"14":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":10},"end":{"line":135,"column":16}},{"start":{"line":135,"column":20},"end":{"line":135,"column":45}}]},"15":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"16":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":6}},{"start":{"line":142,"column":6},"end":{"line":142,"column":6}}]},"17":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":10},"end":{"line":145,"column":10}},{"start":{"line":145,"column":10},"end":{"line":145,"column":10}}]},"18":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":15},"end":{"line":146,"column":15}},{"start":{"line":146,"column":15},"end":{"line":146,"column":15}}]},"19":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":8}},{"start":{"line":158,"column":8},"end":{"line":158,"column":8}}]},"20":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":6},"end":{"line":168,"column":6}},{"start":{"line":168,"column":6},"end":{"line":168,"column":6}}]},"21":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":8}},{"start":{"line":173,"column":8},"end":{"line":173,"column":8}}]},"22":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":8}},{"start":{"line":187,"column":8},"end":{"line":187,"column":8}}]},"23":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":6}},{"start":{"line":196,"column":6},"end":{"line":196,"column":6}}]},"24":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":6},"end":{"line":197,"column":6}},{"start":{"line":197,"column":6},"end":{"line":197,"column":6}}]},"25":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":6}},{"start":{"line":201,"column":6},"end":{"line":201,"column":6}}]},"26":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":6}},{"start":{"line":204,"column":6},"end":{"line":204,"column":6}}]},"27":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":49},"end":{"line":208,"column":49}},{"start":{"line":208,"column":49},"end":{"line":208,"column":49}}]},"28":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":8}},{"start":{"line":210,"column":8},"end":{"line":210,"column":8}}]},"29":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":6},"end":{"line":216,"column":6}},{"start":{"line":216,"column":6},"end":{"line":216,"column":6}}]},"30":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":43},"end":{"line":216,"column":69}},{"start":{"line":216,"column":73},"end":{"line":216,"column":77}}]},"31":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":6}},{"start":{"line":217,"column":6},"end":{"line":217,"column":6}}]},"32":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":10},"end":{"line":217,"column":30}},{"start":{"line":217,"column":34},"end":{"line":217,"column":52}},{"start":{"line":217,"column":56},"end":{"line":217,"column":64}}]},"33":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":6}},{"start":{"line":222,"column":6},"end":{"line":222,"column":6}}]},"34":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":6},"end":{"line":223,"column":6}},{"start":{"line":223,"column":6},"end":{"line":223,"column":6}}]},"35":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":6}},{"start":{"line":224,"column":6},"end":{"line":224,"column":6}}]},"36":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":53},"end":{"line":224,"column":53}},{"start":{"line":224,"column":53},"end":{"line":224,"column":53}}]},"37":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":6},"end":{"line":230,"column":6}},{"start":{"line":230,"column":6},"end":{"line":230,"column":6}}]},"38":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"39":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":17}},{"start":{"line":236,"column":21},"end":{"line":236,"column":63}}]},"40":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"41":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":16},"end":{"line":243,"column":25}},{"start":{"line":243,"column":29},"end":{"line":243,"column":31}}]},"42":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":244,"column":4}},{"start":{"line":244,"column":4},"end":{"line":244,"column":4}}]},"43":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":6},"end":{"line":248,"column":6}},{"start":{"line":248,"column":6},"end":{"line":248,"column":6}}]},"44":{"line":251,"type":"cond-expr","locations":[{"start":{"line":251,"column":63},"end":{"line":251,"column":72}},{"start":{"line":251,"column":75},"end":{"line":251,"column":79}}]},"45":{"line":254,"type":"cond-expr","locations":[{"start":{"line":254,"column":54},"end":{"line":254,"column":67}},{"start":{"line":254,"column":70},"end":{"line":254,"column":74}}]},"46":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":4},"end":{"line":255,"column":4}},{"start":{"line":255,"column":4},"end":{"line":255,"column":4}}]},"47":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":4},"end":{"line":261,"column":4}},{"start":{"line":261,"column":4},"end":{"line":261,"column":4}}]},"48":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":6},"end":{"line":262,"column":6}},{"start":{"line":262,"column":6},"end":{"line":262,"column":6}}]},"49":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":6},"end":{"line":263,"column":6}},{"start":{"line":263,"column":6},"end":{"line":263,"column":6}}]},"50":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"51":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":17},"end":{"line":268,"column":36}},{"start":{"line":268,"column":40},"end":{"line":268,"column":75}}]},"52":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":6}},{"start":{"line":269,"column":6},"end":{"line":269,"column":6}}]},"53":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":10},"end":{"line":269,"column":28}},{"start":{"line":269,"column":32},"end":{"line":269,"column":51}}]},"54":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":10},"end":{"line":276,"column":10}},{"start":{"line":276,"column":10},"end":{"line":276,"column":10}}]},"55":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":10},"end":{"line":279,"column":10}},{"start":{"line":279,"column":10},"end":{"line":279,"column":10}}]},"56":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":14},"end":{"line":279,"column":31}},{"start":{"line":279,"column":35},"end":{"line":279,"column":56}}]},"57":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"58":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":6}},{"start":{"line":300,"column":6},"end":{"line":300,"column":6}}]},"59":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":8},"end":{"line":301,"column":8}},{"start":{"line":301,"column":8},"end":{"line":301,"column":8}}]},"60":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":6},"end":{"line":308,"column":6}},{"start":{"line":308,"column":6},"end":{"line":308,"column":6}}]},"61":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8}},{"start":{"line":310,"column":8},"end":{"line":310,"column":8}}]},"62":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":4},"end":{"line":318,"column":4}},{"start":{"line":318,"column":4},"end":{"line":318,"column":4}}]},"63":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":11},"end":{"line":320,"column":11}},{"start":{"line":320,"column":11},"end":{"line":320,"column":11}}]},"64":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":25},"end":{"line":323,"column":29}},{"start":{"line":323,"column":33},"end":{"line":323,"column":35}}]},"65":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":23},"end":{"line":327,"column":48}},{"start":{"line":327,"column":52},"end":{"line":327,"column":54}}]},"66":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":6},"end":{"line":334,"column":6}},{"start":{"line":334,"column":6},"end":{"line":334,"column":6}}]},"67":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":6},"end":{"line":335,"column":6}},{"start":{"line":335,"column":6},"end":{"line":335,"column":6}}]},"68":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":10},"end":{"line":338,"column":10}},{"start":{"line":338,"column":10},"end":{"line":338,"column":10}}]},"69":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":14},"end":{"line":338,"column":17}},{"start":{"line":338,"column":21},"end":{"line":338,"column":30}}]},"70":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":27},"end":{"line":339,"column":31}},{"start":{"line":339,"column":35},"end":{"line":339,"column":37}}]},"71":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":27},"end":{"line":344,"column":57}},{"start":{"line":344,"column":61},"end":{"line":344,"column":63}}]},"72":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"73":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":4},"end":{"line":362,"column":4}},{"start":{"line":362,"column":4},"end":{"line":362,"column":4}}]},"74":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":4},"end":{"line":365,"column":4}},{"start":{"line":365,"column":4},"end":{"line":365,"column":4}}]},"75":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":4},"end":{"line":367,"column":4}},{"start":{"line":367,"column":4},"end":{"line":367,"column":4}}]},"76":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":8},"end":{"line":379,"column":8}},{"start":{"line":379,"column":8},"end":{"line":379,"column":8}}]},"77":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":13},"end":{"line":380,"column":13}},{"start":{"line":380,"column":13},"end":{"line":380,"column":13}}]},"78":{"line":380,"type":"binary-expr","locations":[{"start":{"line":380,"column":17},"end":{"line":380,"column":35}},{"start":{"line":380,"column":39},"end":{"line":380,"column":53}}]},"79":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":8},"end":{"line":387,"column":8}},{"start":{"line":387,"column":8},"end":{"line":387,"column":8}}]},"80":{"line":387,"type":"binary-expr","locations":[{"start":{"line":387,"column":12},"end":{"line":387,"column":23}},{"start":{"line":387,"column":27},"end":{"line":387,"column":53}}]},"81":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":15},"end":{"line":389,"column":15}},{"start":{"line":389,"column":15},"end":{"line":389,"column":15}}]},"82":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":12},"end":{"line":394,"column":12}},{"start":{"line":394,"column":12},"end":{"line":394,"column":12}}]},"83":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":4},"end":{"line":403,"column":4}},{"start":{"line":403,"column":4},"end":{"line":403,"column":4}}]},"84":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":4},"end":{"line":409,"column":4}},{"start":{"line":409,"column":4},"end":{"line":409,"column":4}}]},"85":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":4},"end":{"line":415,"column":4}},{"start":{"line":415,"column":4},"end":{"line":415,"column":4}}]},"86":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":6},"end":{"line":417,"column":6}},{"start":{"line":417,"column":6},"end":{"line":417,"column":6}}]},"87":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":10},"end":{"line":417,"column":19}},{"start":{"line":417,"column":23},"end":{"line":417,"column":41}}]},"88":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":6},"end":{"line":418,"column":6}},{"start":{"line":418,"column":6},"end":{"line":418,"column":6}}]},"89":{"line":418,"type":"binary-expr","locations":[{"start":{"line":418,"column":10},"end":{"line":418,"column":25}},{"start":{"line":418,"column":29},"end":{"line":418,"column":78}}]},"90":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":4},"end":{"line":438,"column":4}},{"start":{"line":438,"column":4},"end":{"line":438,"column":4}}]},"91":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":4},"end":{"line":441,"column":4}},{"start":{"line":441,"column":4},"end":{"line":441,"column":4}}]},"92":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":8},"end":{"line":441,"column":13}},{"start":{"line":441,"column":17},"end":{"line":441,"column":38}}]},"93":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":4},"end":{"line":442,"column":4}},{"start":{"line":442,"column":4},"end":{"line":442,"column":4}}]},"94":{"line":447,"type":"cond-expr","locations":[{"start":{"line":447,"column":65},"end":{"line":447,"column":76}},{"start":{"line":447,"column":79},"end":{"line":447,"column":110}}]},"95":{"line":450,"type":"cond-expr","locations":[{"start":{"line":450,"column":33},"end":{"line":450,"column":85}},{"start":{"line":450,"column":88},"end":{"line":450,"column":96}}]},"96":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":6},"end":{"line":457,"column":6}},{"start":{"line":457,"column":6},"end":{"line":457,"column":6}}]},"97":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":8},"end":{"line":459,"column":8}},{"start":{"line":459,"column":8},"end":{"line":459,"column":8}}]},"98":{"line":459,"type":"binary-expr","locations":[{"start":{"line":459,"column":12},"end":{"line":459,"column":19}},{"start":{"line":459,"column":23},"end":{"line":459,"column":43}}]},"99":{"line":460,"type":"binary-expr","locations":[{"start":{"line":460,"column":56},"end":{"line":460,"column":60}},{"start":{"line":460,"column":64},"end":{"line":460,"column":68}}]},"100":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":6},"end":{"line":462,"column":6}},{"start":{"line":462,"column":6},"end":{"line":462,"column":6}}]},"101":{"line":462,"type":"binary-expr","locations":[{"start":{"line":462,"column":10},"end":{"line":462,"column":18}},{"start":{"line":462,"column":23},"end":{"line":462,"column":59}}]},"102":{"line":471,"type":"cond-expr","locations":[{"start":{"line":471,"column":79},"end":{"line":471,"column":87}},{"start":{"line":471,"column":90},"end":{"line":471,"column":100}}]},"103":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":19},"end":{"line":478,"column":19}},{"start":{"line":478,"column":19},"end":{"line":478,"column":19}}]},"104":{"line":478,"type":"binary-expr","locations":[{"start":{"line":478,"column":23},"end":{"line":478,"column":31}},{"start":{"line":478,"column":35},"end":{"line":478,"column":45}}]},"105":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":8},"end":{"line":480,"column":8}},{"start":{"line":480,"column":8},"end":{"line":480,"column":8}}]},"106":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":8},"end":{"line":481,"column":8}},{"start":{"line":481,"column":8},"end":{"line":481,"column":8}}]},"107":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":15},"end":{"line":484,"column":15}},{"start":{"line":484,"column":15},"end":{"line":484,"column":15}}]},"108":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":10},"end":{"line":486,"column":10}},{"start":{"line":486,"column":10},"end":{"line":486,"column":10}}]},"109":{"line":486,"type":"binary-expr","locations":[{"start":{"line":486,"column":14},"end":{"line":486,"column":33}},{"start":{"line":486,"column":37},"end":{"line":486,"column":50}}]},"110":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":10},"end":{"line":488,"column":10}},{"start":{"line":488,"column":10},"end":{"line":488,"column":10}}]},"111":{"line":488,"type":"binary-expr","locations":[{"start":{"line":488,"column":14},"end":{"line":488,"column":19}},{"start":{"line":488,"column":24},"end":{"line":488,"column":46}},{"start":{"line":488,"column":50},"end":{"line":488,"column":59}}]},"112":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":6},"end":{"line":519,"column":6}},{"start":{"line":519,"column":6},"end":{"line":519,"column":6}}]},"113":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":4},"end":{"line":529,"column":4}},{"start":{"line":529,"column":4},"end":{"line":529,"column":4}}]},"114":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":4},"end":{"line":531,"column":4}},{"start":{"line":531,"column":4},"end":{"line":531,"column":4}}]},"115":{"line":539,"type":"binary-expr","locations":[{"start":{"line":539,"column":11},"end":{"line":539,"column":33}},{"start":{"line":539,"column":37},"end":{"line":539,"column":59}},{"start":{"line":540,"column":6},"end":{"line":540,"column":33}},{"start":{"line":540,"column":37},"end":{"line":540,"column":62}}]},"116":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":4},"end":{"line":545,"column":4}},{"start":{"line":545,"column":4},"end":{"line":545,"column":4}}]},"117":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":6},"end":{"line":546,"column":6}},{"start":{"line":546,"column":6},"end":{"line":546,"column":6}}]},"118":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":6},"end":{"line":547,"column":6}},{"start":{"line":547,"column":6},"end":{"line":547,"column":6}}]},"119":{"line":547,"type":"binary-expr","locations":[{"start":{"line":547,"column":10},"end":{"line":547,"column":25}},{"start":{"line":547,"column":29},"end":{"line":547,"column":57}}]},"120":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":6},"end":{"line":548,"column":6}},{"start":{"line":548,"column":6},"end":{"line":548,"column":6}}]},"121":{"line":548,"type":"binary-expr","locations":[{"start":{"line":548,"column":10},"end":{"line":548,"column":23}},{"start":{"line":548,"column":27},"end":{"line":548,"column":53}}]},"122":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":4},"end":{"line":550,"column":4}},{"start":{"line":550,"column":4},"end":{"line":550,"column":4}}]},"123":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":6},"end":{"line":551,"column":6}},{"start":{"line":551,"column":6},"end":{"line":551,"column":6}}]},"124":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":8},"end":{"line":554,"column":8}},{"start":{"line":554,"column":8},"end":{"line":554,"column":8}}]},"125":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":13},"end":{"line":555,"column":13}},{"start":{"line":555,"column":13},"end":{"line":555,"column":13}}]},"126":{"line":556,"type":"if","locations":[{"start":{"line":556,"column":13},"end":{"line":556,"column":13}},{"start":{"line":556,"column":13},"end":{"line":556,"column":13}}]},"127":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":13},"end":{"line":557,"column":13}},{"start":{"line":557,"column":13},"end":{"line":557,"column":13}}]},"128":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":13},"end":{"line":558,"column":13}},{"start":{"line":558,"column":13},"end":{"line":558,"column":13}}]},"129":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":10},"end":{"line":559,"column":10}},{"start":{"line":559,"column":10},"end":{"line":559,"column":10}}]},"130":{"line":559,"type":"binary-expr","locations":[{"start":{"line":559,"column":14},"end":{"line":559,"column":38}},{"start":{"line":559,"column":42},"end":{"line":559,"column":77}}]},"131":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":15},"end":{"line":561,"column":15}},{"start":{"line":561,"column":15},"end":{"line":561,"column":15}}]},"132":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":4},"end":{"line":570,"column":4}},{"start":{"line":570,"column":4},"end":{"line":570,"column":4}}]},"133":{"line":572,"type":"binary-expr","locations":[{"start":{"line":572,"column":14},"end":{"line":572,"column":40}},{"start":{"line":572,"column":45},"end":{"line":572,"column":58}}]},"134":{"line":578,"type":"binary-expr","locations":[{"start":{"line":578,"column":36},"end":{"line":578,"column":52}},{"start":{"line":578,"column":57},"end":{"line":578,"column":79}}]},"135":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":6},"end":{"line":586,"column":6}},{"start":{"line":586,"column":6},"end":{"line":586,"column":6}}]},"136":{"line":587,"type":"if","locations":[{"start":{"line":587,"column":6},"end":{"line":587,"column":6}},{"start":{"line":587,"column":6},"end":{"line":587,"column":6}}]},"137":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":4},"end":{"line":593,"column":4}},{"start":{"line":593,"column":4},"end":{"line":593,"column":4}}]},"138":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":6},"end":{"line":595,"column":6}},{"start":{"line":595,"column":6},"end":{"line":595,"column":6}}]},"139":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":8},"end":{"line":596,"column":8}},{"start":{"line":596,"column":8},"end":{"line":596,"column":8}}]},"140":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":4},"end":{"line":604,"column":4}},{"start":{"line":604,"column":4},"end":{"line":604,"column":4}}]},"141":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":6},"end":{"line":605,"column":6}},{"start":{"line":605,"column":6},"end":{"line":605,"column":6}}]},"142":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":4},"end":{"line":613,"column":4}},{"start":{"line":613,"column":4},"end":{"line":613,"column":4}}]},"143":{"line":615,"type":"binary-expr","locations":[{"start":{"line":615,"column":14},"end":{"line":615,"column":40}},{"start":{"line":615,"column":45},"end":{"line":615,"column":58}}]},"144":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":4},"end":{"line":621,"column":4}},{"start":{"line":621,"column":4},"end":{"line":621,"column":4}}]},"145":{"line":622,"type":"binary-expr","locations":[{"start":{"line":622,"column":18},"end":{"line":622,"column":34}},{"start":{"line":622,"column":39},"end":{"line":622,"column":61}}]},"146":{"line":624,"type":"if","locations":[{"start":{"line":624,"column":50},"end":{"line":624,"column":50}},{"start":{"line":624,"column":50},"end":{"line":624,"column":50}}]},"147":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":6},"end":{"line":630,"column":6}},{"start":{"line":630,"column":6},"end":{"line":630,"column":6}}]},"148":{"line":630,"type":"binary-expr","locations":[{"start":{"line":630,"column":10},"end":{"line":630,"column":20}},{"start":{"line":630,"column":24},"end":{"line":630,"column":31}}]},"149":{"line":638,"type":"if","locations":[{"start":{"line":638,"column":4},"end":{"line":638,"column":4}},{"start":{"line":638,"column":4},"end":{"line":638,"column":4}}]},"150":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":6},"end":{"line":640,"column":6}},{"start":{"line":640,"column":6},"end":{"line":640,"column":6}}]},"151":{"line":641,"type":"cond-expr","locations":[{"start":{"line":641,"column":47},"end":{"line":641,"column":63}},{"start":{"line":641,"column":66},"end":{"line":641,"column":108}}]},"152":{"line":644,"type":"cond-expr","locations":[{"start":{"line":644,"column":72},"end":{"line":644,"column":83}},{"start":{"line":644,"column":86},"end":{"line":644,"column":87}}]},"153":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":26},"end":{"line":650,"column":26}},{"start":{"line":650,"column":26},"end":{"line":650,"column":26}}]},"154":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":4},"end":{"line":654,"column":4}},{"start":{"line":654,"column":4},"end":{"line":654,"column":4}}]},"155":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":4},"end":{"line":660,"column":4}},{"start":{"line":660,"column":4},"end":{"line":660,"column":4}}]},"156":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":4},"end":{"line":662,"column":4}},{"start":{"line":662,"column":4},"end":{"line":662,"column":4}}]},"157":{"line":662,"type":"cond-expr","locations":[{"start":{"line":662,"column":35},"end":{"line":662,"column":37}},{"start":{"line":662,"column":40},"end":{"line":662,"column":54}}]},"158":{"line":662,"type":"cond-expr","locations":[{"start":{"line":662,"column":49},"end":{"line":662,"column":50}},{"start":{"line":662,"column":53},"end":{"line":662,"column":54}}]},"159":{"line":663,"type":"cond-expr","locations":[{"start":{"line":663,"column":22},"end":{"line":663,"column":23}},{"start":{"line":663,"column":26},"end":{"line":663,"column":28}}]},"160":{"line":667,"type":"binary-expr","locations":[{"start":{"line":667,"column":11},"end":{"line":667,"column":33}},{"start":{"line":667,"column":37},"end":{"line":667,"column":66}},{"start":{"line":668,"column":6},"end":{"line":668,"column":29}},{"start":{"line":668,"column":33},"end":{"line":668,"column":52}}]},"161":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":6},"end":{"line":674,"column":6}},{"start":{"line":674,"column":6},"end":{"line":674,"column":6}}]},"162":{"line":674,"type":"binary-expr","locations":[{"start":{"line":674,"column":10},"end":{"line":674,"column":36}},{"start":{"line":674,"column":40},"end":{"line":674,"column":64}}]},"163":{"line":685,"type":"binary-expr","locations":[{"start":{"line":685,"column":19},"end":{"line":685,"column":30}},{"start":{"line":685,"column":34},"end":{"line":685,"column":44}},{"start":{"line":685,"column":48},"end":{"line":685,"column":58}},{"start":{"line":685,"column":62},"end":{"line":685,"column":75}}]},"164":{"line":686,"type":"binary-expr","locations":[{"start":{"line":686,"column":21},"end":{"line":686,"column":29}},{"start":{"line":686,"column":33},"end":{"line":686,"column":45}}]},"165":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":6},"end":{"line":690,"column":6}},{"start":{"line":690,"column":6},"end":{"line":690,"column":6}}]},"166":{"line":690,"type":"cond-expr","locations":[{"start":{"line":690,"column":24},"end":{"line":690,"column":30}},{"start":{"line":690,"column":33},"end":{"line":690,"column":34}}]},"167":{"line":692,"type":"cond-expr","locations":[{"start":{"line":692,"column":27},"end":{"line":692,"column":39}},{"start":{"line":692,"column":42},"end":{"line":692,"column":46}}]},"168":{"line":695,"type":"if","locations":[{"start":{"line":695,"column":4},"end":{"line":695,"column":4}},{"start":{"line":695,"column":4},"end":{"line":695,"column":4}}]},"169":{"line":695,"type":"binary-expr","locations":[{"start":{"line":695,"column":8},"end":{"line":695,"column":12}},{"start":{"line":695,"column":16},"end":{"line":695,"column":24}}]},"170":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":6},"end":{"line":699,"column":6}},{"start":{"line":699,"column":6},"end":{"line":699,"column":6}}]},"171":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":6},"end":{"line":701,"column":6}},{"start":{"line":701,"column":6},"end":{"line":701,"column":6}}]},"172":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":45},"end":{"line":702,"column":53}},{"start":{"line":702,"column":57},"end":{"line":702,"column":61}},{"start":{"line":702,"column":65},"end":{"line":702,"column":73}}]},"173":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":6},"end":{"line":703,"column":6}},{"start":{"line":703,"column":6},"end":{"line":703,"column":6}}]},"174":{"line":704,"type":"binary-expr","locations":[{"start":{"line":704,"column":29},"end":{"line":704,"column":37}},{"start":{"line":704,"column":41},"end":{"line":704,"column":45}},{"start":{"line":704,"column":49},"end":{"line":704,"column":57}}]},"175":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":6},"end":{"line":705,"column":6}},{"start":{"line":705,"column":6},"end":{"line":705,"column":6}}]},"176":{"line":706,"type":"binary-expr","locations":[{"start":{"line":706,"column":32},"end":{"line":706,"column":43}},{"start":{"line":706,"column":47},"end":{"line":706,"column":51}},{"start":{"line":706,"column":55},"end":{"line":706,"column":66}}]},"177":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":4},"end":{"line":708,"column":4}},{"start":{"line":708,"column":4},"end":{"line":708,"column":4}}]},"178":{"line":708,"type":"binary-expr","locations":[{"start":{"line":708,"column":34},"end":{"line":708,"column":39}},{"start":{"line":708,"column":43},"end":{"line":708,"column":44}}]},"179":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":4},"end":{"line":713,"column":4}},{"start":{"line":713,"column":4},"end":{"line":713,"column":4}}]},"180":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":4},"end":{"line":715,"column":4}},{"start":{"line":715,"column":4},"end":{"line":715,"column":4}}]},"181":{"line":718,"type":"binary-expr","locations":[{"start":{"line":718,"column":11},"end":{"line":718,"column":20}},{"start":{"line":718,"column":24},"end":{"line":718,"column":78}}]},"182":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":4},"end":{"line":719,"column":4}},{"start":{"line":719,"column":4},"end":{"line":719,"column":4}}]},"183":{"line":720,"type":"binary-expr","locations":[{"start":{"line":720,"column":13},"end":{"line":720,"column":34}},{"start":{"line":720,"column":38},"end":{"line":720,"column":86}}]},"184":{"line":722,"type":"if","locations":[{"start":{"line":722,"column":4},"end":{"line":722,"column":4}},{"start":{"line":722,"column":4},"end":{"line":722,"column":4}}]},"185":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":6},"end":{"line":727,"column":6}},{"start":{"line":727,"column":6},"end":{"line":727,"column":6}}]},"186":{"line":727,"type":"binary-expr","locations":[{"start":{"line":727,"column":11},"end":{"line":727,"column":17}},{"start":{"line":727,"column":21},"end":{"line":727,"column":56}},{"start":{"line":727,"column":61},"end":{"line":727,"column":88}},{"start":{"line":727,"column":92},"end":{"line":727,"column":97}}]},"187":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":6},"end":{"line":728,"column":6}},{"start":{"line":728,"column":6},"end":{"line":728,"column":6}}]},"188":{"line":728,"type":"binary-expr","locations":[{"start":{"line":728,"column":10},"end":{"line":728,"column":32}},{"start":{"line":728,"column":36},"end":{"line":728,"column":40}},{"start":{"line":729,"column":10},"end":{"line":729,"column":81}}]},"189":{"line":729,"type":"cond-expr","locations":[{"start":{"line":729,"column":35},"end":{"line":729,"column":53}},{"start":{"line":729,"column":56},"end":{"line":729,"column":60}}]},"190":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":6},"end":{"line":730,"column":6}},{"start":{"line":730,"column":6},"end":{"line":730,"column":6}}]},"191":{"line":730,"type":"binary-expr","locations":[{"start":{"line":730,"column":10},"end":{"line":730,"column":19}},{"start":{"line":730,"column":23},"end":{"line":730,"column":44}}]},"192":{"line":731,"type":"binary-expr","locations":[{"start":{"line":731,"column":59},"end":{"line":731,"column":62}},{"start":{"line":731,"column":66},"end":{"line":731,"column":81}}]},"193":{"line":732,"type":"if","locations":[{"start":{"line":732,"column":6},"end":{"line":732,"column":6}},{"start":{"line":732,"column":6},"end":{"line":732,"column":6}}]},"194":{"line":732,"type":"binary-expr","locations":[{"start":{"line":732,"column":10},"end":{"line":732,"column":17}},{"start":{"line":732,"column":21},"end":{"line":732,"column":27}},{"start":{"line":732,"column":31},"end":{"line":732,"column":56}}]},"195":{"line":741,"type":"if","locations":[{"start":{"line":741,"column":4},"end":{"line":741,"column":4}},{"start":{"line":741,"column":4},"end":{"line":741,"column":4}}]},"196":{"line":744,"type":"if","locations":[{"start":{"line":744,"column":6},"end":{"line":744,"column":6}},{"start":{"line":744,"column":6},"end":{"line":744,"column":6}}]},"197":{"line":744,"type":"binary-expr","locations":[{"start":{"line":744,"column":10},"end":{"line":744,"column":35}},{"start":{"line":744,"column":39},"end":{"line":744,"column":66}},{"start":{"line":745,"column":11},"end":{"line":745,"column":45}},{"start":{"line":745,"column":49},"end":{"line":745,"column":63}}]},"198":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":6},"end":{"line":752,"column":6}},{"start":{"line":752,"column":6},"end":{"line":752,"column":6}}]},"199":{"line":752,"type":"binary-expr","locations":[{"start":{"line":752,"column":10},"end":{"line":752,"column":45}},{"start":{"line":752,"column":49},"end":{"line":752,"column":80}}]},"200":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":13},"end":{"line":754,"column":13}},{"start":{"line":754,"column":13},"end":{"line":754,"column":13}}]},"201":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":8},"end":{"line":756,"column":8}},{"start":{"line":756,"column":8},"end":{"line":756,"column":8}}]},"202":{"line":756,"type":"binary-expr","locations":[{"start":{"line":756,"column":12},"end":{"line":756,"column":45}},{"start":{"line":756,"column":49},"end":{"line":756,"column":76}}]},"203":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":13},"end":{"line":758,"column":13}},{"start":{"line":758,"column":13},"end":{"line":758,"column":13}}]},"204":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":8},"end":{"line":760,"column":8}},{"start":{"line":760,"column":8},"end":{"line":760,"column":8}}]},"205":{"line":763,"type":"if","locations":[{"start":{"line":763,"column":15},"end":{"line":763,"column":15}},{"start":{"line":763,"column":15},"end":{"line":763,"column":15}}]},"206":{"line":763,"type":"binary-expr","locations":[{"start":{"line":763,"column":19},"end":{"line":763,"column":24}},{"start":{"line":763,"column":28},"end":{"line":763,"column":72}}]},"207":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":4},"end":{"line":770,"column":4}},{"start":{"line":770,"column":4},"end":{"line":770,"column":4}}]},"208":{"line":776,"type":"if","locations":[{"start":{"line":776,"column":11},"end":{"line":776,"column":11}},{"start":{"line":776,"column":11},"end":{"line":776,"column":11}}]},"209":{"line":778,"type":"cond-expr","locations":[{"start":{"line":778,"column":38},"end":{"line":778,"column":57}},{"start":{"line":778,"column":60},"end":{"line":778,"column":69}}]},"210":{"line":781,"type":"if","locations":[{"start":{"line":781,"column":11},"end":{"line":781,"column":11}},{"start":{"line":781,"column":11},"end":{"line":781,"column":11}}]},"211":{"line":783,"type":"binary-expr","locations":[{"start":{"line":783,"column":13},"end":{"line":783,"column":22}},{"start":{"line":783,"column":27},"end":{"line":783,"column":60}},{"start":{"line":783,"column":64},"end":{"line":783,"column":118}}]},"212":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":6},"end":{"line":785,"column":6}},{"start":{"line":785,"column":6},"end":{"line":785,"column":6}}]},"213":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":4},"end":{"line":791,"column":4}},{"start":{"line":791,"column":4},"end":{"line":791,"column":4}}]},"214":{"line":794,"type":"if","locations":[{"start":{"line":794,"column":6},"end":{"line":794,"column":6}},{"start":{"line":794,"column":6},"end":{"line":794,"column":6}}]},"215":{"line":796,"type":"if","locations":[{"start":{"line":796,"column":6},"end":{"line":796,"column":6}},{"start":{"line":796,"column":6},"end":{"line":796,"column":6}}]},"216":{"line":796,"type":"binary-expr","locations":[{"start":{"line":796,"column":10},"end":{"line":796,"column":29}},{"start":{"line":796,"column":33},"end":{"line":796,"column":54}},{"start":{"line":796,"column":58},"end":{"line":796,"column":65}},{"start":{"line":796,"column":69},"end":{"line":796,"column":92}}]},"217":{"line":797,"type":"if","locations":[{"start":{"line":797,"column":51},"end":{"line":797,"column":51}},{"start":{"line":797,"column":51},"end":{"line":797,"column":51}}]},"218":{"line":797,"type":"binary-expr","locations":[{"start":{"line":797,"column":55},"end":{"line":797,"column":64}},{"start":{"line":797,"column":68},"end":{"line":797,"column":76}}]},"219":{"line":798,"type":"if","locations":[{"start":{"line":798,"column":6},"end":{"line":798,"column":6}},{"start":{"line":798,"column":6},"end":{"line":798,"column":6}}]},"220":{"line":798,"type":"binary-expr","locations":[{"start":{"line":798,"column":10},"end":{"line":798,"column":29}},{"start":{"line":798,"column":33},"end":{"line":798,"column":49}},{"start":{"line":798,"column":53},"end":{"line":798,"column":74}}]},"221":{"line":803,"type":"if","locations":[{"start":{"line":803,"column":6},"end":{"line":803,"column":6}},{"start":{"line":803,"column":6},"end":{"line":803,"column":6}}]},"222":{"line":804,"type":"cond-expr","locations":[{"start":{"line":804,"column":40},"end":{"line":804,"column":53}},{"start":{"line":804,"column":56},"end":{"line":804,"column":66}}]},"223":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":4},"end":{"line":812,"column":4}},{"start":{"line":812,"column":4},"end":{"line":812,"column":4}}]},"224":{"line":825,"type":"if","locations":[{"start":{"line":825,"column":6},"end":{"line":825,"column":6}},{"start":{"line":825,"column":6},"end":{"line":825,"column":6}}]},"225":{"line":825,"type":"binary-expr","locations":[{"start":{"line":825,"column":10},"end":{"line":825,"column":23}},{"start":{"line":825,"column":28},"end":{"line":825,"column":35}},{"start":{"line":825,"column":39},"end":{"line":825,"column":65}}]},"226":{"line":826,"type":"if","locations":[{"start":{"line":826,"column":4},"end":{"line":826,"column":4}},{"start":{"line":826,"column":4},"end":{"line":826,"column":4}}]},"227":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":4},"end":{"line":832,"column":4}},{"start":{"line":832,"column":4},"end":{"line":832,"column":4}}]},"228":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":4},"end":{"line":833,"column":4}},{"start":{"line":833,"column":4},"end":{"line":833,"column":4}}]},"229":{"line":840,"type":"binary-expr","locations":[{"start":{"line":840,"column":11},"end":{"line":840,"column":23}},{"start":{"line":840,"column":27},"end":{"line":840,"column":37}}]},"230":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":4},"end":{"line":844,"column":4}},{"start":{"line":844,"column":4},"end":{"line":844,"column":4}}]},"231":{"line":846,"type":"if","locations":[{"start":{"line":846,"column":4},"end":{"line":846,"column":4}},{"start":{"line":846,"column":4},"end":{"line":846,"column":4}}]},"232":{"line":851,"type":"binary-expr","locations":[{"start":{"line":851,"column":18},"end":{"line":851,"column":29}},{"start":{"line":851,"column":33},"end":{"line":851,"column":62}}]},"233":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":6},"end":{"line":853,"column":6}},{"start":{"line":853,"column":6},"end":{"line":853,"column":6}}]},"234":{"line":855,"type":"if","locations":[{"start":{"line":855,"column":8},"end":{"line":855,"column":8}},{"start":{"line":855,"column":8},"end":{"line":855,"column":8}}]},"235":{"line":855,"type":"binary-expr","locations":[{"start":{"line":855,"column":12},"end":{"line":855,"column":18}},{"start":{"line":855,"column":22},"end":{"line":855,"column":47}},{"start":{"line":856,"column":13},"end":{"line":856,"column":51}},{"start":{"line":856,"column":55},"end":{"line":856,"column":59}},{"start":{"line":857,"column":13},"end":{"line":857,"column":67}},{"start":{"line":857,"column":71},"end":{"line":857,"column":97}}]},"236":{"line":857,"type":"cond-expr","locations":[{"start":{"line":857,"column":30},"end":{"line":857,"column":33}},{"start":{"line":857,"column":36},"end":{"line":857,"column":41}}]},"237":{"line":866,"type":"if","locations":[{"start":{"line":866,"column":4},"end":{"line":866,"column":4}},{"start":{"line":866,"column":4},"end":{"line":866,"column":4}}]},"238":{"line":871,"type":"if","locations":[{"start":{"line":871,"column":4},"end":{"line":871,"column":4}},{"start":{"line":871,"column":4},"end":{"line":871,"column":4}}]},"239":{"line":871,"type":"binary-expr","locations":[{"start":{"line":871,"column":8},"end":{"line":871,"column":11}},{"start":{"line":871,"column":15},"end":{"line":871,"column":35}},{"start":{"line":871,"column":39},"end":{"line":871,"column":65}}]},"240":{"line":877,"type":"if","locations":[{"start":{"line":877,"column":4},"end":{"line":877,"column":4}},{"start":{"line":877,"column":4},"end":{"line":877,"column":4}}]},"241":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":4},"end":{"line":882,"column":4}},{"start":{"line":882,"column":4},"end":{"line":882,"column":4}}]},"242":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":4},"end":{"line":887,"column":4}},{"start":{"line":887,"column":4},"end":{"line":887,"column":4}}]},"243":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":4},"end":{"line":890,"column":4}},{"start":{"line":890,"column":4},"end":{"line":890,"column":4}}]},"244":{"line":890,"type":"binary-expr","locations":[{"start":{"line":890,"column":8},"end":{"line":890,"column":44}},{"start":{"line":890,"column":48},"end":{"line":890,"column":65}},{"start":{"line":891,"column":9},"end":{"line":891,"column":70}}]},"245":{"line":894,"type":"if","locations":[{"start":{"line":894,"column":6},"end":{"line":894,"column":6}},{"start":{"line":894,"column":6},"end":{"line":894,"column":6}}]},"246":{"line":894,"type":"binary-expr","locations":[{"start":{"line":894,"column":10},"end":{"line":894,"column":16}},{"start":{"line":894,"column":20},"end":{"line":894,"column":40}}]},"247":{"line":898,"type":"if","locations":[{"start":{"line":898,"column":8},"end":{"line":898,"column":8}},{"start":{"line":898,"column":8},"end":{"line":898,"column":8}}]},"248":{"line":898,"type":"binary-expr","locations":[{"start":{"line":898,"column":12},"end":{"line":898,"column":21}},{"start":{"line":898,"column":25},"end":{"line":898,"column":48}}]},"249":{"line":908,"type":"if","locations":[{"start":{"line":908,"column":4},"end":{"line":908,"column":4}},{"start":{"line":908,"column":4},"end":{"line":908,"column":4}}]},"250":{"line":909,"type":"binary-expr","locations":[{"start":{"line":909,"column":13},"end":{"line":909,"column":35}},{"start":{"line":909,"column":39},"end":{"line":909,"column":53}}]},"251":{"line":913,"type":"if","locations":[{"start":{"line":913,"column":4},"end":{"line":913,"column":4}},{"start":{"line":913,"column":4},"end":{"line":913,"column":4}}]},"252":{"line":914,"type":"if","locations":[{"start":{"line":914,"column":6},"end":{"line":914,"column":6}},{"start":{"line":914,"column":6},"end":{"line":914,"column":6}}]},"253":{"line":916,"type":"if","locations":[{"start":{"line":916,"column":11},"end":{"line":916,"column":11}},{"start":{"line":916,"column":11},"end":{"line":916,"column":11}}]},"254":{"line":916,"type":"binary-expr","locations":[{"start":{"line":916,"column":15},"end":{"line":916,"column":51}},{"start":{"line":916,"column":55},"end":{"line":916,"column":74}}]},"255":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":11},"end":{"line":918,"column":11}},{"start":{"line":918,"column":11},"end":{"line":918,"column":11}}]},"256":{"line":918,"type":"binary-expr","locations":[{"start":{"line":918,"column":15},"end":{"line":918,"column":51}},{"start":{"line":918,"column":55},"end":{"line":918,"column":74}}]},"257":{"line":922,"type":"if","locations":[{"start":{"line":922,"column":4},"end":{"line":922,"column":4}},{"start":{"line":922,"column":4},"end":{"line":922,"column":4}}]},"258":{"line":922,"type":"binary-expr","locations":[{"start":{"line":922,"column":8},"end":{"line":922,"column":27}},{"start":{"line":922,"column":31},"end":{"line":922,"column":61}}]},"259":{"line":927,"type":"binary-expr","locations":[{"start":{"line":927,"column":24},"end":{"line":927,"column":28}},{"start":{"line":927,"column":32},"end":{"line":927,"column":41}}]},"260":{"line":931,"type":"if","locations":[{"start":{"line":931,"column":4},"end":{"line":931,"column":4}},{"start":{"line":931,"column":4},"end":{"line":931,"column":4}}]},"261":{"line":937,"type":"if","locations":[{"start":{"line":937,"column":4},"end":{"line":937,"column":4}},{"start":{"line":937,"column":4},"end":{"line":937,"column":4}}]},"262":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":4},"end":{"line":938,"column":4}},{"start":{"line":938,"column":4},"end":{"line":938,"column":4}}]},"263":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":4},"end":{"line":940,"column":4}},{"start":{"line":940,"column":4},"end":{"line":940,"column":4}}]},"264":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":4},"end":{"line":942,"column":4}},{"start":{"line":942,"column":4},"end":{"line":942,"column":4}}]},"265":{"line":946,"type":"if","locations":[{"start":{"line":946,"column":4},"end":{"line":946,"column":4}},{"start":{"line":946,"column":4},"end":{"line":946,"column":4}}]},"266":{"line":955,"type":"if","locations":[{"start":{"line":955,"column":4},"end":{"line":955,"column":4}},{"start":{"line":955,"column":4},"end":{"line":955,"column":4}}]},"267":{"line":960,"type":"if","locations":[{"start":{"line":960,"column":4},"end":{"line":960,"column":4}},{"start":{"line":960,"column":4},"end":{"line":960,"column":4}}]},"268":{"line":961,"type":"if","locations":[{"start":{"line":961,"column":4},"end":{"line":961,"column":4}},{"start":{"line":961,"column":4},"end":{"line":961,"column":4}}]},"269":{"line":962,"type":"if","locations":[{"start":{"line":962,"column":4},"end":{"line":962,"column":4}},{"start":{"line":962,"column":4},"end":{"line":962,"column":4}}]},"270":{"line":964,"type":"if","locations":[{"start":{"line":964,"column":4},"end":{"line":964,"column":4}},{"start":{"line":964,"column":4},"end":{"line":964,"column":4}}]},"271":{"line":964,"type":"binary-expr","locations":[{"start":{"line":964,"column":8},"end":{"line":964,"column":16}},{"start":{"line":964,"column":20},"end":{"line":964,"column":28}},{"start":{"line":964,"column":32},"end":{"line":964,"column":42}},{"start":{"line":964,"column":47},"end":{"line":964,"column":72}},{"start":{"line":965,"column":8},"end":{"line":965,"column":35}},{"start":{"line":965,"column":39},"end":{"line":965,"column":68}},{"start":{"line":965,"column":72},"end":{"line":965,"column":98}}]},"272":{"line":972,"type":"if","locations":[{"start":{"line":972,"column":4},"end":{"line":972,"column":4}},{"start":{"line":972,"column":4},"end":{"line":972,"column":4}}]},"273":{"line":973,"type":"if","locations":[{"start":{"line":973,"column":4},"end":{"line":973,"column":4}},{"start":{"line":973,"column":4},"end":{"line":973,"column":4}}]},"274":{"line":975,"type":"if","locations":[{"start":{"line":975,"column":6},"end":{"line":975,"column":6}},{"start":{"line":975,"column":6},"end":{"line":975,"column":6}}]},"275":{"line":975,"type":"binary-expr","locations":[{"start":{"line":975,"column":10},"end":{"line":975,"column":37}},{"start":{"line":975,"column":41},"end":{"line":975,"column":48}}]},"276":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":4},"end":{"line":978,"column":4}},{"start":{"line":978,"column":4},"end":{"line":978,"column":4}}]},"277":{"line":983,"type":"if","locations":[{"start":{"line":983,"column":4},"end":{"line":983,"column":4}},{"start":{"line":983,"column":4},"end":{"line":983,"column":4}}]},"278":{"line":985,"type":"cond-expr","locations":[{"start":{"line":985,"column":47},"end":{"line":985,"column":85}},{"start":{"line":985,"column":88},"end":{"line":985,"column":100}}]},"279":{"line":986,"type":"cond-expr","locations":[{"start":{"line":986,"column":45},"end":{"line":986,"column":83}},{"start":{"line":986,"column":86},"end":{"line":986,"column":98}}]},"280":{"line":997,"type":"if","locations":[{"start":{"line":997,"column":4},"end":{"line":997,"column":4}},{"start":{"line":997,"column":4},"end":{"line":997,"column":4}}]},"281":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":4},"end":{"line":1002,"column":4}},{"start":{"line":1002,"column":4},"end":{"line":1002,"column":4}}]},"282":{"line":1005,"type":"if","locations":[{"start":{"line":1005,"column":6},"end":{"line":1005,"column":6}},{"start":{"line":1005,"column":6},"end":{"line":1005,"column":6}}]},"283":{"line":1008,"type":"if","locations":[{"start":{"line":1008,"column":4},"end":{"line":1008,"column":4}},{"start":{"line":1008,"column":4},"end":{"line":1008,"column":4}}]},"284":{"line":1008,"type":"binary-expr","locations":[{"start":{"line":1008,"column":8},"end":{"line":1008,"column":12}},{"start":{"line":1008,"column":16},"end":{"line":1008,"column":25}}]},"285":{"line":1009,"type":"binary-expr","locations":[{"start":{"line":1009,"column":21},"end":{"line":1009,"column":41}},{"start":{"line":1009,"column":45},"end":{"line":1009,"column":69}}]},"286":{"line":1016,"type":"if","locations":[{"start":{"line":1016,"column":11},"end":{"line":1016,"column":11}},{"start":{"line":1016,"column":11},"end":{"line":1016,"column":11}}]},"287":{"line":1026,"type":"binary-expr","locations":[{"start":{"line":1026,"column":33},"end":{"line":1026,"column":38}},{"start":{"line":1026,"column":42},"end":{"line":1026,"column":64}}]},"288":{"line":1027,"type":"if","locations":[{"start":{"line":1027,"column":4},"end":{"line":1027,"column":4}},{"start":{"line":1027,"column":4},"end":{"line":1027,"column":4}}]},"289":{"line":1035,"type":"if","locations":[{"start":{"line":1035,"column":8},"end":{"line":1035,"column":8}},{"start":{"line":1035,"column":8},"end":{"line":1035,"column":8}}]},"290":{"line":1038,"type":"if","locations":[{"start":{"line":1038,"column":12},"end":{"line":1038,"column":12}},{"start":{"line":1038,"column":12},"end":{"line":1038,"column":12}}]},"291":{"line":1044,"type":"if","locations":[{"start":{"line":1044,"column":10},"end":{"line":1044,"column":10}},{"start":{"line":1044,"column":10},"end":{"line":1044,"column":10}}]},"292":{"line":1044,"type":"binary-expr","locations":[{"start":{"line":1044,"column":14},"end":{"line":1044,"column":20}},{"start":{"line":1044,"column":24},"end":{"line":1044,"column":49}},{"start":{"line":1044,"column":53},"end":{"line":1044,"column":79}}]},"293":{"line":1051,"type":"if","locations":[{"start":{"line":1051,"column":4},"end":{"line":1051,"column":4}},{"start":{"line":1051,"column":4},"end":{"line":1051,"column":4}}]},"294":{"line":1053,"type":"if","locations":[{"start":{"line":1053,"column":6},"end":{"line":1053,"column":6}},{"start":{"line":1053,"column":6},"end":{"line":1053,"column":6}}]},"295":{"line":1055,"type":"if","locations":[{"start":{"line":1055,"column":10},"end":{"line":1055,"column":10}},{"start":{"line":1055,"column":10},"end":{"line":1055,"column":10}}]},"296":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":8},"end":{"line":1056,"column":8}},{"start":{"line":1056,"column":8},"end":{"line":1056,"column":8}}]},"297":{"line":1064,"type":"if","locations":[{"start":{"line":1064,"column":6},"end":{"line":1064,"column":6}},{"start":{"line":1064,"column":6},"end":{"line":1064,"column":6}}]},"298":{"line":1079,"type":"if","locations":[{"start":{"line":1079,"column":4},"end":{"line":1079,"column":4}},{"start":{"line":1079,"column":4},"end":{"line":1079,"column":4}}]},"299":{"line":1083,"type":"if","locations":[{"start":{"line":1083,"column":4},"end":{"line":1083,"column":4}},{"start":{"line":1083,"column":4},"end":{"line":1083,"column":4}}]},"300":{"line":1094,"type":"if","locations":[{"start":{"line":1094,"column":4},"end":{"line":1094,"column":4}},{"start":{"line":1094,"column":4},"end":{"line":1094,"column":4}}]},"301":{"line":1108,"type":"if","locations":[{"start":{"line":1108,"column":4},"end":{"line":1108,"column":4}},{"start":{"line":1108,"column":4},"end":{"line":1108,"column":4}}]},"302":{"line":1108,"type":"binary-expr","locations":[{"start":{"line":1108,"column":8},"end":{"line":1108,"column":12}},{"start":{"line":1108,"column":16},"end":{"line":1108,"column":46}}]},"303":{"line":1110,"type":"if","locations":[{"start":{"line":1110,"column":11},"end":{"line":1110,"column":11}},{"start":{"line":1110,"column":11},"end":{"line":1110,"column":11}}]},"304":{"line":1110,"type":"binary-expr","locations":[{"start":{"line":1110,"column":15},"end":{"line":1110,"column":19}},{"start":{"line":1110,"column":23},"end":{"line":1110,"column":59}},{"start":{"line":1110,"column":63},"end":{"line":1110,"column":82}}]},"305":{"line":1114,"type":"if","locations":[{"start":{"line":1114,"column":11},"end":{"line":1114,"column":11}},{"start":{"line":1114,"column":11},"end":{"line":1114,"column":11}}]},"306":{"line":1114,"type":"binary-expr","locations":[{"start":{"line":1114,"column":15},"end":{"line":1114,"column":19}},{"start":{"line":1114,"column":23},"end":{"line":1114,"column":59}}]},"307":{"line":1118,"type":"if","locations":[{"start":{"line":1118,"column":8},"end":{"line":1118,"column":8}},{"start":{"line":1118,"column":8},"end":{"line":1118,"column":8}}]},"308":{"line":1118,"type":"binary-expr","locations":[{"start":{"line":1118,"column":12},"end":{"line":1118,"column":26}},{"start":{"line":1118,"column":30},"end":{"line":1118,"column":42}}]},"309":{"line":1121,"type":"if","locations":[{"start":{"line":1121,"column":11},"end":{"line":1121,"column":11}},{"start":{"line":1121,"column":11},"end":{"line":1121,"column":11}}]},"310":{"line":1121,"type":"binary-expr","locations":[{"start":{"line":1121,"column":15},"end":{"line":1121,"column":19}},{"start":{"line":1121,"column":23},"end":{"line":1121,"column":59}}]},"311":{"line":1129,"type":"if","locations":[{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}},{"start":{"line":1129,"column":4},"end":{"line":1129,"column":4}}]},"312":{"line":1131,"type":"if","locations":[{"start":{"line":1131,"column":4},"end":{"line":1131,"column":4}},{"start":{"line":1131,"column":4},"end":{"line":1131,"column":4}}]},"313":{"line":1131,"type":"binary-expr","locations":[{"start":{"line":1131,"column":8},"end":{"line":1131,"column":13}},{"start":{"line":1131,"column":17},"end":{"line":1131,"column":47}}]},"314":{"line":1140,"type":"if","locations":[{"start":{"line":1140,"column":6},"end":{"line":1140,"column":6}},{"start":{"line":1140,"column":6},"end":{"line":1140,"column":6}}]}},"code":["// The Tern server object","","// A server is a stateful object that manages the analysis for a","// project, and defines an interface for querying the code in the","// project.","","(function(root, mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(exports, require(\"./infer\"), require(\"./signal\"),","               require(\"acorn\"), require(\"acorn/dist/walk\"));","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"exports\", \"./infer\", \"./signal\", \"acorn/dist/acorn\", \"acorn/dist/walk\"], mod);","  mod(root.tern || (root.tern = {}), tern, tern.signal, acorn, acorn.walk); // Plain browser env","})(this, function(exports, infer, signal, acorn, walk) {","  \"use strict\";","","  var plugins = Object.create(null);","  exports.registerPlugin = function(name, init) { plugins[name] = init; };","","  var defaultOptions = exports.defaultOptions = {","    debug: false,","    async: false,","    getFile: function(_f, c) { if (this.async) c(null, null); },","    normalizeFilename: function(name) { return name },","    defs: [],","    plugins: {},","    fetchTimeout: 1000,","    dependencyBudget: 20000,","    reuseInstances: true,","    stripCRs: false,","    ecmaVersion: 6,","    projectDir: \"/\",","    parent: null","  };","","  var queryTypes = {","    completions: {","      takesFile: true,","      run: findCompletions","    },","    properties: {","      run: findProperties","    },","    type: {","      takesFile: true,","      run: findTypeAt","    },","    documentation: {","      takesFile: true,","      run: findDocs","    },","    definition: {","      takesFile: true,","      run: findDef","    },","    refs: {","      takesFile: true,","      fullFile: true,","      run: findRefs","    },","    rename: {","      takesFile: true,","      fullFile: true,","      run: buildRename","    },","    files: {","      run: listFiles","    }","  };","","  exports.defineQueryType = function(name, desc) { queryTypes[name] = desc; };","","  function File(name, parent) {","    this.name = name;","    this.parent = parent;","    this.scope = this.text = this.ast = this.lineOffsets = null;","  }","  File.prototype.asLineChar = function(pos) { return asLineChar(this, pos); };","","  function parseFile(srv, file) {","    var options = {","      directSourceFile: file,","      allowReturnOutsideFunction: true,","      allowImportExportEverywhere: true,","      ecmaVersion: srv.options.ecmaVersion,","      allowHashBang: true","    }","    var text = srv.signalReturnFirst(\"preParse\", file.text, options) || file.text","    var ast = infer.parse(text, options)","    srv.signal(\"postParse\", ast, text)","    return ast","  }","","  var astral = /[\\uD800-\\uDBFF]/g","","  function updateText(file, text, srv) {","    file.text = srv.options.stripCRs ? text.replace(/\\r\\n/g, \"\\n\") : text;","    file.hasAstral = astral.test(file.text)","    infer.withContext(srv.cx, function() {","      file.ast = parseFile(srv, file)","    });","    file.lineOffsets = null;","  }","","  var Server = exports.Server = function(options) {","    this.cx = null;","    this.options = options || {};","    for (var o in defaultOptions) if (!options.hasOwnProperty(o))","      options[o] = defaultOptions[o];","","    this.projectDir = options.projectDir.replace(/\\\\/g, \"/\")","    if (!/\\/$/.test(this.projectDir)) this.projectDir += \"/\"","","    this.parent = options.parent;","    this.handlers = Object.create(null);","    this.files = [];","    this.fileMap = Object.create(null);","    this.needsPurge = [];","    this.budgets = Object.create(null);","    this.uses = 0;","    this.pending = 0;","    this.asyncError = null;","    this.mod = {}","","    this.defs = options.defs.slice(0)","    this.plugins = Object.create(null)","    for (var plugin in options.plugins) if (options.plugins.hasOwnProperty(plugin))","      this.loadPlugin(plugin, options.plugins[plugin])","","    this.reset();","  };","  Server.prototype = signal.mixin({","    addFile: function(name, /*optional*/ text, parent) {","      // Don't crash when sloppy plugins pass non-existent parent ids","      if (parent && !(parent in this.fileMap)) parent = null;","      if (!(name in this.fileMap))","        name = this.normalizeFilename(name)","      ensureFile(this, name, parent, text);","    },","    delFile: function(name) {","      var file = this.findFile(name);","      if (file) {","        this.needsPurge.push(file.name);","        for (var i = 0; i < this.files.length; i++) {","          if (this.files[i] == file) this.files.splice(i--, 1);","          else if (this.files[i].parent == name) this.files[i].parent = null;","        }","        delete this.fileMap[file.name];","      }","    },","    reset: function() {","      this.signal(\"reset\");","      this.cx = new infer.Context(this.defs, this);","      this.uses = 0;","      this.budgets = Object.create(null);","      for (var i = 0; i < this.files.length; ++i) {","        var file = this.files[i];","        if (file.scope) {","          infer.clearScopes(file.ast);","          file.scope = null;","        }","      }","      this.signal(\"postReset\");","    },","","    request: function(doc, c) {","      var inv = invalidDoc(doc);","      if (inv) return c(inv);","","      var self = this;","      doRequest(this, doc, function(err, data) {","        c(err, data);","        if (self.uses > 40) {","          self.reset();","          analyzeAll(self, null, function(){});","        }","      });","    },","","    findFile: function(name) {","      return this.fileMap[this.normalizeFilename(name)];","    },","","    flush: function(c) {","      var cx = this.cx;","      analyzeAll(this, null, function(err) {","        if (err) return c(err);","        infer.withContext(cx, c);","      });","    },","","    startAsyncAction: function() {","      ++this.pending;","    },","    finishAsyncAction: function(err) {","      if (err) this.asyncError = err;","      if (--this.pending === 0) this.signal(\"everythingFetched\");","    },","","    addDefs: function(defs, toFront) {","      if (toFront) this.defs.unshift(defs)","      else this.defs.push(defs)","","      if (this.cx) this.reset()","    },","","    deleteDefs: function(name) {","      for (var i = 0; i < this.defs.length; i++) if (this.defs[i][\"!name\"] == name) {","        this.defs.splice(i, 1);","        if (this.cx) this.reset();","        return;","      }","    },","","    loadPlugin: function(name, options) {","      if (arguments.length == 1) options = this.options.plugins[name] || true","      if (name in this.plugins || !(name in plugins) || !options) return","      this.plugins[name] = true","      var init = plugins[name](this, options)","","      // This is for backwards-compatibilty. Don't rely on it -- use addDef and on directly","      if (!init) return","      if (init.defs) this.addDefs(init.defs, init.loadFirst)","      if (init.passes) for (var type in init.passes) if (init.passes.hasOwnProperty(type))","        this.on(type, init.passes[type])","    },","","    normalizeFilename: function(name) {","      var norm = this.options.normalizeFilename(name).replace(/\\\\/g, \"/\")","      if (norm.indexOf(this.projectDir) == 0) norm = norm.slice(this.projectDir.length)","      return norm","    }","  });","","  function doRequest(srv, doc, c) {","    if (doc.query && !queryTypes.hasOwnProperty(doc.query.type))","      return c(\"No query type '\" + doc.query.type + \"' defined\");","","    var query = doc.query;","    // Respond as soon as possible when this just uploads files","    if (!query) c(null, {});","","    var files = doc.files || [];","    if (files.length) ++srv.uses;","    for (var i = 0; i < files.length; ++i) {","      var file = files[i];","      file.name = srv.normalizeFilename(file.name)","      if (file.type == \"delete\")","        srv.delFile(file.name);","      else","        ensureFile(srv, file.name, null, file.type == \"full\" ? file.text : null);","    }","","    var timeBudget = typeof doc.timeout == \"number\" ? [doc.timeout] : null;","    if (!query) {","      analyzeAll(srv, timeBudget, function(){});","      return;","    }","","    var queryType = queryTypes[query.type];","    if (queryType.takesFile) {","      if (typeof query.file != \"string\") return c(\".query.file must be a string\");","      if (!/^#/.test(query.file)) ensureFile(srv, query.file, null);","    }","","    analyzeAll(srv, timeBudget, function(err) {","      if (err) return c(err);","      var file = queryType.takesFile && resolveFile(srv, files, query.file);","      if (queryType.fullFile && file.type == \"part\")","        return c(\"Can't run a \" + query.type + \" query on a file fragment\");","","      infer.resetGuessing()","      infer.withContext(srv.cx, function() {","        var result, run = function() { result = queryType.run(srv, query, file); };","        try {","          if (timeBudget) infer.withTimeout(timeBudget[0], run);","          else run();","        } catch (e) {","          if (srv.options.debug && e.name != \"TernError\") console.error(e.stack);","          return c(e);","        }","        c(null, result);","      });","    });","  }","","  function analyzeFile(srv, file) {","    infer.withContext(srv.cx, function() {","      file.scope = srv.cx.topScope;","      srv.signal(\"beforeLoad\", file);","      infer.analyze(file.ast, file.name, file.scope);","      srv.signal(\"afterLoad\", file);","    });","    return file;","  }","","  function ensureFile(srv, name, parent, text) {","    var known = srv.findFile(name);","    if (known) {","      if (text != null) {","        if (known.scope) {","          srv.needsPurge.push(name);","          infer.clearScopes(known.ast);","          known.scope = null;","        }","        updateText(known, text, srv);","      }","      if (parentDepth(srv, known.parent) > parentDepth(srv, parent)) {","        known.parent = parent;","        if (known.excluded) known.excluded = null;","      }","      return;","    }","","    var file = new File(name, parent);","    srv.files.push(file);","    srv.fileMap[name] = file;","    if (text != null) {","      updateText(file, text, srv);","    } else if (srv.options.async) {","      srv.startAsyncAction();","      srv.options.getFile(name, function(err, text) {","        updateText(file, text || \"\", srv);","        srv.finishAsyncAction(err);","      });","    } else {","      updateText(file, srv.options.getFile(name) || \"\", srv);","    }","  }","","  function fetchAll(srv, c) {","    var done = true, returned = false;","    srv.files.forEach(function(file) {","      if (file.text != null) return;","      if (srv.options.async) {","        done = false;","        srv.options.getFile(file.name, function(err, text) {","          if (err && !returned) { returned = true; return c(err); }","          updateText(file, text || \"\", srv);","          fetchAll(srv, c);","        });","      } else {","        try {","          updateText(file, srv.options.getFile(file.name) || \"\", srv);","        } catch (e) { return c(e); }","      }","    });","    if (done) c();","  }","","  function waitOnFetch(srv, timeBudget, c) {","    var done = function() {","      srv.off(\"everythingFetched\", done);","      clearTimeout(timeout);","      analyzeAll(srv, timeBudget, c);","    };","    srv.on(\"everythingFetched\", done);","    var timeout = setTimeout(done, srv.options.fetchTimeout);","  }","","  function analyzeAll(srv, timeBudget, c) {","    if (srv.pending) return waitOnFetch(srv, timeBudget, c);","","    var e = srv.fetchError;","    if (e) { srv.fetchError = null; return c(e); }","","    if (srv.needsPurge.length > 0) infer.withContext(srv.cx, function() {","      infer.purge(srv.needsPurge);","      srv.needsPurge.length = 0;","    });","","    var done = true;","    // The second inner loop might add new files. The outer loop keeps","    // repeating both inner loops until all files have been looked at.","    for (var i = 0; i < srv.files.length;) {","      var toAnalyze = [];","      for (; i < srv.files.length; ++i) {","        var file = srv.files[i];","        if (file.text == null) done = false;","        else if (file.scope == null && !file.excluded) toAnalyze.push(file);","      }","      toAnalyze.sort(function(a, b) {","        return parentDepth(srv, a.parent) - parentDepth(srv, b.parent);","      });","      for (var j = 0; j < toAnalyze.length; j++) {","        var file = toAnalyze[j];","        if (file.parent && !chargeOnBudget(srv, file)) {","          file.excluded = true;","        } else if (timeBudget) {","          var startTime = +new Date;","          try {","            infer.withTimeout(timeBudget[0], function() { analyzeFile(srv, file); });","          } catch(e) {","            if (e instanceof infer.TimedOut) return c(e)","            else throw e","          }","          timeBudget[0] -= +new Date - startTime;","        } else {","          analyzeFile(srv, file);","        }","      }","    }","    if (done) c();","    else waitOnFetch(srv, timeBudget, c);","  }","","  function firstLine(str) {","    var end = str.indexOf(\"\\n\");","    if (end < 0) return str;","    return str.slice(0, end);","  }","","  function findMatchingPosition(line, file, near) {","    var pos = Math.max(0, near - 500), closest = null;","    if (!/^\\s*$/.test(line)) for (;;) {","      var found = file.indexOf(line, pos);","      if (found < 0 || found > near + 500) break;","      if (closest == null || Math.abs(closest - near) > Math.abs(found - near))","        closest = found;","      pos = found + line.length;","    }","    return closest;","  }","","  function scopeDepth(s) {","    for (var i = 0; s; ++i, s = s.prev) {}","    return i;","  }","","  function ternError(msg) {","    var err = new Error(msg);","    err.name = \"TernError\";","    return err;","  }","","  function resolveFile(srv, localFiles, name) {","    var isRef = name.match(/^#(\\d+)$/);","    if (!isRef) return srv.findFile(name);","","    var file = localFiles[isRef[1]];","    if (!file || file.type == \"delete\") throw ternError(\"Reference to unknown file \" + name);","    if (file.type == \"full\") return srv.fileMap[file.name];","","    // This is a partial file","","    var realFile = file.backing = srv.fileMap[file.name];","    var offset = resolvePos(realFile, file.offsetLines == null ? file.offset : {line: file.offsetLines, ch: 0}, true);","    var line = firstLine(file.text);","    var foundPos = findMatchingPosition(line, realFile.text, offset);","    var pos = foundPos == null ? Math.max(0, realFile.text.lastIndexOf(\"\\n\", offset)) : foundPos;","    var inObject, atFunction;","","    infer.withContext(srv.cx, function() {","      infer.purge(file.name, pos, pos + file.text.length);","","      var text = file.text, m;","      if (m = text.match(/(?:\"([^\"]*)\"|([\\w$]+))\\s*:\\s*function\\b/)) {","        var objNode = walk.findNodeAround(file.backing.ast, pos, \"ObjectExpression\");","        if (objNode && objNode.node.objType)","          inObject = {type: objNode.node.objType, prop: m[2] || m[1]};","      }","      if (foundPos && (m = line.match(/^(.*?)\\bfunction\\b/))) {","        var cut = m[1].length, white = \"\";","        for (var i = 0; i < cut; ++i) white += \" \";","        file.text = white + text.slice(cut);","        atFunction = true;","      }","","      var scopeStart = infer.scopeAt(realFile.ast, pos, realFile.scope);","      var scopeEnd = infer.scopeAt(realFile.ast, pos + text.length, realFile.scope);","      var scope = file.scope = scopeDepth(scopeStart) < scopeDepth(scopeEnd) ? scopeEnd : scopeStart;","      file.ast = parseFile(srv, file)","      infer.analyze(file.ast, file.name, scope);","","      // This is a kludge to tie together the function types (if any)","      // outside and inside of the fragment, so that arguments and","      // return values have some information known about them.","      tieTogether: if (inObject || atFunction) {","        var newInner = infer.scopeAt(file.ast, line.length, scopeStart);","        if (!newInner.fnType) break tieTogether;","        if (inObject) {","          var prop = inObject.type.getProp(inObject.prop);","          prop.addType(newInner.fnType);","        } else if (atFunction) {","          var inner = infer.scopeAt(realFile.ast, pos + line.length, realFile.scope);","          if (inner == scopeStart || !inner.fnType) break tieTogether;","          var fOld = inner.fnType, fNew = newInner.fnType;","          if (!fNew || (fNew.name != fOld.name && fOld.name)) break tieTogether;","          for (var i = 0, e = Math.min(fOld.args.length, fNew.args.length); i < e; ++i)","            fOld.args[i].propagate(fNew.args[i]);","          fOld.self.propagate(fNew.self);","          fNew.retval.propagate(fOld.retval);","        }","      }","    });","    return file;","  }","","  // Budget management","","  function astSize(node) {","    var size = 0;","    walk.simple(node, {Expression: function() { ++size; }});","    return size;","  }","","  function parentDepth(srv, parent) {","    var depth = 0;","    while (parent) {","      parent = srv.fileMap[parent].parent;","      ++depth;","    }","    return depth;","  }","","  function budgetName(srv, file) {","    for (;;) {","      var parent = srv.fileMap[file.parent];","      if (!parent.parent) break;","      file = parent;","    }","    return file.name;","  }","","  function chargeOnBudget(srv, file) {","    var bName = budgetName(srv, file);","    var size = astSize(file.ast);","    var known = srv.budgets[bName];","    if (known == null)","      known = srv.budgets[bName] = srv.options.dependencyBudget;","    if (known < size) return false;","    srv.budgets[bName] = known - size;","    return true;","  }","","  // Query helpers","","  function isPosition(val) {","    return typeof val == \"number\" || typeof val == \"object\" &&","      typeof val.line == \"number\" && typeof val.ch == \"number\";","  }","","  // Baseline query document validation","  function invalidDoc(doc) {","    if (doc.query) {","      if (typeof doc.query.type != \"string\") return \".query.type must be a string\";","      if (doc.query.start && !isPosition(doc.query.start)) return \".query.start must be a position\";","      if (doc.query.end && !isPosition(doc.query.end)) return \".query.end must be a position\";","    }","    if (doc.files) {","      if (!Array.isArray(doc.files)) return \"Files property must be an array\";","      for (var i = 0; i < doc.files.length; ++i) {","        var file = doc.files[i];","        if (typeof file != \"object\") return \".files[n] must be objects\";","        else if (typeof file.name != \"string\") return \".files[n].name must be a string\";","        else if (file.type == \"delete\") continue;","        else if (typeof file.text != \"string\") return \".files[n].text must be a string\";","        else if (file.type == \"part\") {","          if (!isPosition(file.offset) && typeof file.offsetLines != \"number\")","            return \".files[n].offset must be a position\";","        } else if (file.type != \"full\") return \".files[n].type must be \\\"full\\\" or \\\"part\\\"\";","      }","    }","  }","","  var offsetSkipLines = 25;","","  function forwardCharacters(file, start, chars) {","    var pos = start + chars, m","    if (file.hasAstral) {","      astral.lastIndex = start","      while ((m = astral.exec(file.text)) && m.index < pos) pos++","    }","    return pos","  }","","  function findLineStart(file, line) {","    var text = file.text, offsets = file.lineOffsets || (file.lineOffsets = [0]);","    var pos = 0, curLine = 0;","    var storePos = Math.min(Math.floor(line / offsetSkipLines), offsets.length - 1);","    var pos = offsets[storePos], curLine = storePos * offsetSkipLines;","","    while (curLine < line) {","      ++curLine;","      pos = text.indexOf(\"\\n\", pos) + 1;","      if (pos === 0) return null;","      if (curLine % offsetSkipLines === 0) offsets.push(pos);","    }","    return pos;","  }","","  var resolvePos = exports.resolvePos = function(file, pos, tolerant) {","    if (typeof pos != \"number\") {","      var lineStart = findLineStart(file, pos.line);","      if (lineStart == null) {","        if (tolerant) pos = file.text.length;","        else throw ternError(\"File doesn't contain a line \" + pos.line);","      } else {","        pos = forwardCharacters(file, lineStart, pos.ch);","      }","    } else {","      pos = forwardCharacters(file, 0, pos)","    }","    if (pos > file.text.length) {","      if (tolerant) pos = file.text.length;","      else throw ternError(\"Position \" + pos + \" is outside of file.\");","    }","    return pos;","  };","","  function charDistanceBetween(file, start, end) {","    var diff = end - start, m","    if (file.hasAstral) {","      astral.lastIndex = start","      while ((m = astral.exec(file.text)) && m.index < end) diff--","    }","    return diff","  }","","  function asLineChar(file, pos) {","    if (!file) return {line: 0, ch: 0};","    var offsets = file.lineOffsets || (file.lineOffsets = [0]);","    var text = file.text, line, lineStart;","    for (var i = offsets.length - 1; i >= 0; --i) if (offsets[i] <= pos) {","      line = i * offsetSkipLines;","      lineStart = offsets[i];","    }","    for (;;) {","      var eol = text.indexOf(\"\\n\", lineStart);","      if (eol >= pos || eol < 0) break;","      lineStart = eol + 1;","      ++line;","    }","    return {line: line, ch: charDistanceBetween(file, lineStart, pos)};","  }","","  var outputPos = exports.outputPos = function(query, file, pos) {","    if (query.lineCharPositions) {","      var out = asLineChar(file, pos);","      if (file.type == \"part\")","        out.line += file.offsetLines != null ? file.offsetLines : asLineChar(file.backing, file.offset).line;","      return out;","    } else {","      return charDistanceBetween(file, 0, pos) + (file.type == \"part\" ? file.offset : 0);","    }","  };","","  // Delete empty fields from result objects","  function clean(obj) {","    for (var prop in obj) if (obj[prop] == null) delete obj[prop];","    return obj;","  }","  function maybeSet(obj, prop, val) {","    if (val != null) obj[prop] = val;","  }","","  // Built-in query types","","  function compareCompletions(a, b) {","    if (typeof a != \"string\") { a = a.name; b = b.name; }","    var aUp = /^[A-Z]/.test(a), bUp = /^[A-Z]/.test(b);","    if (aUp == bUp) return a < b ? -1 : a == b ? 0 : 1;","    else return aUp ? 1 : -1;","  }","","  function isStringAround(node, start, end) {","    return node.type == \"Literal\" && typeof node.value == \"string\" &&","      node.start == start - 1 && node.end <= end + 1;","  }","","  function pointInProp(objNode, point) {","    for (var i = 0; i < objNode.properties.length; i++) {","      var curProp = objNode.properties[i];","      if (curProp.key.start <= point && curProp.key.end >= point)","        return curProp;","    }","  }","","  var jsKeywords = (\"break do instanceof typeof case else new var \" +","    \"catch finally return void continue for switch while debugger \" +","    \"function this with default if throw delete in try\").split(\" \");","  var jsKeywordsES6 = jsKeywords.concat(\"export class extends const super yield import let static\".split(\" \"))","","  var addCompletion = exports.addCompletion = function(query, completions, name, aval, depth) {","    var typeInfo = query.types || query.docs || query.urls || query.origins;","    var wrapAsObjs = typeInfo || query.depths;","","    for (var i = 0; i < completions.length; ++i) {","      var c = completions[i];","      if ((wrapAsObjs ? c.name : c) == name) return;","    }","    var rec = wrapAsObjs ? {name: name} : name;","    completions.push(rec);","","    if (aval && typeInfo) {","      infer.resetGuessing();","      var type = aval.getType();","      rec.guess = infer.didGuess();","      if (query.types)","        rec.type = infer.toString(aval);","      if (query.docs)","        maybeSet(rec, \"doc\", parseDoc(query, aval.doc || type && type.doc));","      if (query.urls)","        maybeSet(rec, \"url\", aval.url || type && type.url);","      if (query.origins)","        maybeSet(rec, \"origin\", aval.origin || type && type.origin);","    }","    if (query.depths) rec.depth = depth || 0;","    return rec;","  };","","  function findCompletions(srv, query, file) {","    if (query.end == null) throw ternError(\"missing .query.end field\");","    var fromPlugin = srv.signalReturnFirst(\"completion\", file, query)","    if (fromPlugin) return fromPlugin","","    var wordStart = resolvePos(file, query.end), wordEnd = wordStart, text = file.text;","    while (wordStart && acorn.isIdentifierChar(text.charCodeAt(wordStart - 1))) --wordStart;","    if (query.expandWordForward !== false)","      while (wordEnd < text.length && acorn.isIdentifierChar(text.charCodeAt(wordEnd))) ++wordEnd;","    var word = text.slice(wordStart, wordEnd), completions = [], ignoreObj;","    if (query.caseInsensitive) word = word.toLowerCase();","","    function gather(prop, obj, depth, addInfo) {","      // 'hasOwnProperty' and such are usually just noise, leave them","      // out when no prefix is provided.","      if ((objLit || query.omitObjectPrototype !== false) && obj == srv.cx.protos.Object && !word) return;","      if (query.filter !== false && word &&","          (query.caseInsensitive ? prop.toLowerCase() : prop).indexOf(word) !== 0) return;","      if (ignoreObj && ignoreObj.props[prop]) return;","      var result = addCompletion(query, completions, prop, obj && obj.props[prop], depth);","      if (addInfo && result && typeof result != \"string\") addInfo(result);","    }","","    var hookname, prop, objType, isKey;","","    var exprAt = infer.findExpressionAround(file.ast, null, wordStart, file.scope);","    var memberExpr, objLit;","    // Decide whether this is an object property, either in a member","    // expression or an object literal.","    if (exprAt) {","      var exprNode = exprAt.node;","","      if (query.inLiteral === false && exprNode.type === \"Literal\" &&","          (typeof exprNode.value === 'string' || exprNode.regex))","        return {","          start: outputPos(query, file, wordStart),","          end: outputPos(query, file, wordEnd),","          completions: []","        };","","      if (exprNode.type == \"MemberExpression\" && exprNode.object.end < wordStart) {","        memberExpr = exprAt;","      } else if (isStringAround(exprNode, wordStart, wordEnd)) {","        var parent = infer.parentNode(exprNode, file.ast);","        if (parent.type == \"MemberExpression\" && parent.property == exprNode)","          memberExpr = {node: parent, state: exprAt.state};","      } else if (exprNode.type == \"ObjectExpression\") {","        var objProp = pointInProp(exprNode, wordEnd);","        if (objProp) {","          objLit = exprAt;","          prop = isKey = objProp.key.name;","        } else if (!word && !/:\\s*$/.test(file.text.slice(0, wordStart))) {","          objLit = exprAt;","          prop = isKey = true;","        }","      }","    }","","    if (objLit) {","      // Since we can't use the type of the literal itself to complete","      // its properties (it doesn't contain the information we need),","      // we have to try asking the surrounding expression for type info.","      objType = infer.typeFromContext(file.ast, objLit);","      ignoreObj = objLit.node.objType;","    } else if (memberExpr) {","      prop = memberExpr.node.property;","      prop = prop.type == \"Literal\" ? prop.value.slice(1) : prop.name;","      memberExpr.node = memberExpr.node.object;","      objType = infer.expressionType(memberExpr);","    } else if (text.charAt(wordStart - 1) == \".\") {","      var pathStart = wordStart - 1;","      while (pathStart && (text.charAt(pathStart - 1) == \".\" || acorn.isIdentifierChar(text.charCodeAt(pathStart - 1)))) pathStart--;","      var path = text.slice(pathStart, wordStart - 1);","      if (path) {","        objType = infer.def.parsePath(path, file.scope).getObjType();","        prop = word;","      }","    }","","    if (prop != null) {","      srv.cx.completingProperty = prop;","","      if (objType) infer.forAllPropertiesOf(objType, gather);","","      if (!completions.length && query.guess !== false && objType && objType.guessProperties)","        objType.guessProperties(function(p, o, d) {if (p != prop && p != \"✖\") gather(p, o, d);});","      if (!completions.length && word.length >= 2 && query.guess !== false)","        for (var prop in srv.cx.props) gather(prop, srv.cx.props[prop][0], 0);","      hookname = \"memberCompletion\";","    } else {","      infer.forAllLocalsAt(file.ast, wordStart, file.scope, gather);","      if (query.includeKeywords) {","        (srv.options.ecmaVersion >= 6 ? jsKeywordsES6 : jsKeywords).forEach(function(kw) {","          gather(kw, null, 0, function(rec) { rec.isKeyword = true; });","        });","      };","      hookname = \"variableCompletion\";","    }","    srv.signal(hookname, file, wordStart, wordEnd, gather)","","    if (query.sort !== false) completions.sort(compareCompletions);","    srv.cx.completingProperty = null;","","    return {start: outputPos(query, file, wordStart),","            end: outputPos(query, file, wordEnd),","            isProperty: !!prop,","            isObjectKey: !!isKey,","            completions: completions};","  }","","  function findProperties(srv, query) {","    var prefix = query.prefix, found = [];","    for (var prop in srv.cx.props)","      if (prop != \"<i>\" && (!prefix || prop.indexOf(prefix) === 0)) found.push(prop);","    if (query.sort !== false) found.sort(compareCompletions);","    return {completions: found};","  }","","  function inBody(node, pos) {","    var body = node.body, start, end","    if (!body) return false","    if (Array.isArray(body)) {","      start = body[0].start","      end = body[body.length - 1].end","    } else {","      start = body.start","      end = body.end","    }","    return start <= pos && end >= pos","  }","","  var findExpr = exports.findQueryExpr = function(file, query, wide) {","    if (query.end == null) throw ternError(\"missing .query.end field\");","","    if (query.variable) {","      var scope = infer.scopeAt(file.ast, resolvePos(file, query.end), file.scope);","      return {node: {type: \"Identifier\", name: query.variable, start: query.end, end: query.end + 1},","              state: scope};","    } else {","      var start = query.start && resolvePos(file, query.start), end = resolvePos(file, query.end);","      var expr = infer.findExpressionAt(file.ast, start, end, file.scope);","      if (!expr) {","        var around = infer.findExpressionAround(file.ast, start, end, file.scope);","        if (around && !inBody(around.node, end) &&","            (around.node.type == \"ObjectExpression\" || wide ||","             (start == null ? end : start) - around.node.start < 20 || around.node.end - end < 20))","          expr = around","      }","      return expr","    }","  };","","  function findExprOrThrow(file, query, wide) {","    var expr = findExpr(file, query, wide);","    if (expr) return expr;","    throw ternError(\"No expression at the given position.\");","  }","","  function ensureObj(tp) {","    if (!tp || !(tp = tp.getType()) || !(tp instanceof infer.Obj)) return null;","    return tp;","  }","","  function findExprType(srv, query, file, expr) {","    var type;","    if (expr) {","      infer.resetGuessing();","      type = infer.expressionType(expr);","    }","    var typeHandlers = srv.hasHandler(\"typeAt\")","    if (typeHandlers) {","      var pos = resolvePos(file, query.end)","      for (var i = 0; i < typeHandlers.length; i++)","        type = typeHandlers[i](file, pos, expr, type)","    }","    if (!type) throw ternError(\"No type found at the given position.\");","","    var objProp;","    if (expr.node.type == \"ObjectExpression\" && query.end != null &&","        (objProp = pointInProp(expr.node, resolvePos(file, query.end)))) {","      var name = objProp.key.name;","      var fromCx = ensureObj(infer.typeFromContext(file.ast, expr));","      if (fromCx && fromCx.hasProp(name)) {","        type = fromCx.hasProp(name);","      } else {","        var fromLocal = ensureObj(type);","        if (fromLocal && fromLocal.hasProp(name))","          type = fromLocal.hasProp(name);","      }","    }","    return type;","  };","","  function findTypeAt(srv, query, file) {","    var expr = findExpr(file, query), exprName;","    var type = findExprType(srv, query, file, expr), exprType = type;","    if (query.preferFunction)","      type = type.getFunctionType() || type.getType();","    else","      type = type.getType();","","    if (expr) {","      if (expr.node.type == \"Identifier\")","        exprName = expr.node.name;","      else if (expr.node.type == \"MemberExpression\" && !expr.node.computed)","        exprName = expr.node.property.name;","      else if (expr.node.type == \"MethodDefinition\" && !expr.node.computed)","        exprName = expr.node.key.name","    }","","    if (query.depth != null && typeof query.depth != \"number\")","      throw ternError(\".query.depth must be a number\");","","    var result = {guess: infer.didGuess(),","                  type: infer.toString(exprType, query.depth),","                  name: type && type.name,","                  exprName: exprName,","                  doc: exprType.doc,","                  url: exprType.url};","    if (type) storeTypeDocs(query, type, result);","","    return clean(result);","  }","","  function parseDoc(query, doc) {","    if (!doc) return null;","    if (query.docFormat == \"full\") return doc;","    var parabreak = /.\\n[\\s@\\n]/.exec(doc);","    if (parabreak) doc = doc.slice(0, parabreak.index + 1);","    doc = doc.replace(/\\n\\s*/g, \" \");","    if (doc.length < 100) return doc;","    var sentenceEnd = /[\\.!?] [A-Z]/g;","    sentenceEnd.lastIndex = 80;","    var found = sentenceEnd.exec(doc);","    if (found) doc = doc.slice(0, found.index + 1);","    return doc;","  }","","  function findDocs(srv, query, file) {","    var expr = findExpr(file, query);","    var type = findExprType(srv, query, file, expr);","    var result = {url: type.url, doc: parseDoc(query, type.doc), type: infer.toString(type)};","    var inner = type.getType();","    if (inner) storeTypeDocs(query, inner, result);","    return clean(result);","  }","","  function storeTypeDocs(query, type, out) {","    if (!out.url) out.url = type.url;","    if (!out.doc) out.doc = parseDoc(query, type.doc);","    if (!out.origin) out.origin = type.origin;","    var ctor, boring = infer.cx().protos;","    if (!out.url && !out.doc && type.proto && (ctor = type.proto.hasCtor) &&","        type.proto != boring.Object && type.proto != boring.Function && type.proto != boring.Array) {","      out.url = ctor.url;","      out.doc = parseDoc(query, ctor.doc);","    }","  }","","  var getSpan = exports.getSpan = function(obj) {","    if (!obj.origin) return;","    if (obj.originNode) {","      var node = obj.originNode;","      if (/^Function/.test(node.type) && node.id) node = node.id;","      return {origin: obj.origin, node: node};","    }","    if (obj.span) return {origin: obj.origin, span: obj.span};","  };","","  var storeSpan = exports.storeSpan = function(srv, query, span, target) {","    target.origin = span.origin;","    if (span.span) {","      var m = /^(\\d+)\\[(\\d+):(\\d+)\\]-(\\d+)\\[(\\d+):(\\d+)\\]$/.exec(span.span);","      target.start = query.lineCharPositions ? {line: Number(m[2]), ch: Number(m[3])} : Number(m[1]);","      target.end = query.lineCharPositions ? {line: Number(m[5]), ch: Number(m[6])} : Number(m[4]);","    } else {","      var file = srv.fileMap[span.origin];","      target.start = outputPos(query, file, span.node.start);","      target.end = outputPos(query, file, span.node.end);","    }","  };","","  function findDef(srv, query, file) {","    var expr = findExpr(file, query);","    var type = findExprType(srv, query, file, expr);","    if (infer.didGuess()) return {};","","    var span = getSpan(type);","    var result = {url: type.url, doc: parseDoc(query, type.doc), origin: type.origin};","","    if (type.types) for (var i = type.types.length - 1; i >= 0; --i) {","      var tp = type.types[i];","      storeTypeDocs(query, tp, result);","      if (!span) span = getSpan(tp);","    }","","    if (span && span.node) { // refers to a loaded file","      var spanFile = span.node.sourceFile || srv.fileMap[span.origin];","      var start = outputPos(query, spanFile, span.node.start), end = outputPos(query, spanFile, span.node.end);","      result.start = start; result.end = end;","      result.file = span.origin;","      var cxStart = Math.max(0, span.node.start - 50);","      result.contextOffset = span.node.start - cxStart;","      result.context = spanFile.text.slice(cxStart, cxStart + 50);","    } else if (span) { // external","      result.file = span.origin;","      storeSpan(srv, query, span, result);","    }","    return clean(result);","  }","","  function findRefsToVariable(srv, query, file, expr, isRename) {","    var name = expr.node.name;","","    for (var scope = expr.state; scope && !(name in scope.props); scope = scope.prev) {}","    if (!scope) throw ternError(\"Could not find a definition for \" + name);","","    var type, refs = [];","    function storeRef(file) {","      return function(node, scopeHere, ancestors) {","        var value = {file: file.name,","                     start: outputPos(query, file, node.start),","                     end: outputPos(query, file, node.end)}","        if (isRename) {","          for (var s = scopeHere; s != scope; s = s.prev) {","            var exists = s.hasProp(isRename);","            if (exists)","              throw ternError(\"Renaming `\" + name + \"` to `\" + isRename + \"` would make a variable at line \" +","                              (asLineChar(file, node.start).line + 1) + \" point to the definition at line \" +","                              (asLineChar(file, exists.name.start).line + 1));","          }","          var parent = ancestors[ancestors.length - 2]","          if (parent && parent.type == \"Property\" && parent.key == parent.value)","            value.isShorthand = true","        }","        refs.push(value);","      };","    }","","    if (scope.originNode) {","      type = \"local\";","      if (isRename) {","        for (var prev = scope.prev; prev; prev = prev.prev)","          if (isRename in prev.props) break;","        if (prev) infer.findRefs(scope.originNode, scope, isRename, prev, function(node) {","          throw ternError(\"Renaming `\" + name + \"` to `\" + isRename + \"` would shadow the definition used at line \" +","                          (asLineChar(file, node.start).line + 1));","        });","      }","      infer.findRefs(scope.originNode, scope, name, scope, storeRef(file));","    } else {","      type = \"global\";","      if (query.onlySourceFile) {","        infer.findRefs(file.ast, file.scope, name, scope, storeRef(file));","      } else {","        for (var i = 0; i < srv.files.length; ++i) {","          var cur = srv.files[i];","          infer.findRefs(cur.ast, cur.scope, name, scope, storeRef(cur));","        }","      }","    }","","    return {refs: refs, type: type, name: name};","  }","","  function findRefsToProperty(srv, query, sourceFile, expr, prop) {","    var exprType = infer.expressionType(expr);","    if (expr.node.type == \"MethodDefinition\") {","      exprType = exprType.propertyOf;","    }","    var objType = exprType.getObjType();","    if (!objType) throw ternError(\"Couldn't determine type of base object.\");","","    var refs = [];","    function storeRef(file) {","      return function(node) {","        refs.push({file: file.name,","                   start: outputPos(query, file, node.start),","                   end: outputPos(query, file, node.end)});","      };","    }","","    if (query.onlySourceFile) {","        infer.findPropRefs(sourceFile.ast, sourceFile.scope, objType, prop.name, storeRef(sourceFile));","    } else {","      for (var i = 0; i < srv.files.length; ++i) {","        var cur = srv.files[i];","        infer.findPropRefs(cur.ast, cur.scope, objType, prop.name, storeRef(cur));","      }","    }","","    return {refs: refs, name: prop.name};","  }","","  function findRefs(srv, query, file) {","    var expr = findExprOrThrow(file, query, true);","    if (expr && expr.node.type == \"Identifier\") {","      return findRefsToVariable(srv, query, file, expr);","    } else if (expr && expr.node.type == \"MemberExpression\" && !expr.node.computed) {","      var p = expr.node.property;","      expr.node = expr.node.object;","      return findRefsToProperty(srv, query, file, expr, p);","    } else if (expr && expr.node.type == \"ObjectExpression\") {","      var pos = resolvePos(file, query.end);","      for (var i = 0; i < expr.node.properties.length; ++i) {","        var k = expr.node.properties[i].key;","        if (k.start <= pos && k.end >= pos)","          return findRefsToProperty(srv, query, file, expr, k);","      }","    } else if (expr && expr.node.type == \"MethodDefinition\") {","      var p = expr.node.key;","      return findRefsToProperty(srv, query, file, expr, p);","    }","    throw ternError(\"Not at a variable or property name.\");","  }","","  function buildRename(srv, query, file) {","    if (typeof query.newName != \"string\") throw ternError(\".query.newName should be a string\");","    var expr = findExprOrThrow(file, query);","    if (!expr || expr.node.type != \"Identifier\") throw ternError(\"Not at a variable.\");","","    var data = findRefsToVariable(srv, query, file, expr, query.newName), refs = data.refs;","    delete data.refs;","    data.files = srv.files.map(function(f){return f.name;});","","    var changes = data.changes = [];","    for (var i = 0; i < refs.length; ++i) {","      var use = refs[i];","      if (use.isShorthand) use.text = expr.node.name + \": \" + query.newName","      else use.text = query.newName;","      changes.push(use);","    }","","    return data;","  }","","  function listFiles(srv) {","    return {files: srv.files.map(function(f){return f.name;})};","  }","","  exports.version = \"0.21.0\";","});",""],"l":{"7":1,"8":1,"9":1,"11":0,"12":0,"13":0,"17":1,"18":9,"20":1,"23":0,"24":0,"36":1,"71":1,"73":1,"74":0,"75":0,"76":0,"78":1,"80":1,"81":0,"88":0,"89":0,"90":0,"91":0,"94":1,"96":1,"97":0,"98":0,"99":0,"100":0,"102":0,"105":1,"106":0,"107":0,"108":0,"109":0,"111":0,"112":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"125":0,"126":0,"127":0,"128":0,"130":0,"132":1,"135":0,"136":0,"137":0,"138":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"148":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"163":0,"167":0,"168":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"181":0,"185":0,"186":0,"187":0,"188":0,"193":0,"196":0,"197":0,"201":0,"202":0,"204":0,"208":0,"209":0,"210":0,"211":0,"216":0,"217":0,"218":0,"219":0,"222":0,"223":0,"224":0,"225":0,"229":0,"230":0,"231":0,"235":1,"236":0,"237":0,"239":0,"241":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"251":0,"254":0,"255":0,"256":0,"257":0,"260":0,"261":0,"262":0,"263":0,"266":0,"267":0,"268":0,"269":0,"270":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"279":0,"280":0,"282":0,"287":1,"288":0,"289":0,"290":0,"291":0,"292":0,"294":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"306":0,"308":0,"309":0,"310":0,"312":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"327":0,"331":1,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"343":0,"344":0,"345":0,"348":0,"351":1,"352":0,"353":0,"354":0,"355":0,"357":0,"358":0,"361":1,"362":0,"364":0,"365":0,"367":0,"368":0,"369":0,"372":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"382":0,"383":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"394":0,"395":0,"397":0,"399":0,"403":0,"404":0,"407":1,"408":0,"409":0,"410":0,"413":1,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"422":0,"425":1,"426":0,"427":0,"430":1,"431":0,"432":0,"433":0,"436":1,"437":0,"438":0,"440":0,"441":0,"442":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"453":0,"454":0,"456":0,"457":0,"458":0,"459":0,"460":0,"462":0,"463":0,"464":0,"465":0,"466":0,"469":0,"470":0,"471":0,"472":0,"473":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"496":0,"501":1,"502":0,"503":0,"504":0,"507":1,"508":0,"509":0,"510":0,"511":0,"513":0,"516":1,"517":0,"518":0,"519":0,"520":0,"522":0,"525":1,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"538":1,"539":0,"544":1,"545":0,"546":0,"547":0,"548":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"566":1,"568":1,"569":0,"570":0,"571":0,"572":0,"574":0,"577":1,"578":0,"579":0,"580":0,"581":0,"583":0,"584":0,"585":0,"586":0,"587":0,"589":0,"592":1,"593":0,"594":0,"595":0,"596":0,"597":0,"599":0,"602":0,"604":0,"605":0,"606":0,"608":0,"611":1,"612":0,"613":0,"614":0,"615":0,"617":0,"620":1,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"628":0,"629":0,"630":0,"631":0,"632":0,"634":0,"637":1,"638":0,"639":0,"640":0,"641":0,"642":0,"644":0,"649":1,"650":0,"651":0,"653":1,"654":0,"659":1,"660":0,"661":0,"662":0,"663":0,"666":1,"667":0,"671":1,"672":0,"673":0,"674":0,"675":0,"679":1,"682":1,"684":1,"685":0,"686":0,"688":0,"689":0,"690":0,"692":0,"693":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"708":0,"709":0,"712":1,"713":0,"714":0,"715":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"724":1,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"735":0,"737":0,"738":0,"741":0,"742":0,"744":0,"746":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"770":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"791":0,"792":0,"794":0,"796":0,"797":0,"798":0,"799":0,"800":0,"802":0,"803":0,"804":0,"805":0,"808":0,"810":0,"812":0,"813":0,"815":0,"822":1,"823":0,"824":0,"825":0,"826":0,"827":0,"830":1,"831":0,"832":0,"833":0,"834":0,"835":0,"837":0,"838":0,"840":0,"843":1,"844":0,"846":0,"847":0,"848":0,"851":0,"852":0,"853":0,"854":0,"855":0,"858":0,"860":0,"864":1,"865":0,"866":0,"867":0,"870":1,"871":0,"872":0,"875":1,"876":0,"877":0,"878":0,"879":0,"881":0,"882":0,"883":0,"884":0,"885":0,"887":0,"889":0,"890":0,"892":0,"893":0,"894":0,"895":0,"897":0,"898":0,"899":0,"902":0,"905":1,"906":0,"907":0,"908":0,"909":0,"911":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"922":0,"923":0,"925":0,"931":0,"933":0,"936":1,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"950":1,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"959":1,"960":0,"961":0,"962":0,"963":0,"964":0,"966":0,"967":0,"971":1,"972":0,"973":0,"974":0,"975":0,"976":0,"978":0,"981":1,"982":0,"983":0,"984":0,"985":0,"986":0,"988":0,"989":0,"990":0,"994":1,"995":0,"996":0,"997":0,"999":0,"1000":0,"1002":0,"1003":0,"1004":0,"1005":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1020":0,"1023":1,"1024":0,"1026":0,"1027":0,"1029":0,"1030":1,"1031":0,"1032":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1043":0,"1044":0,"1045":0,"1047":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1061":0,"1063":0,"1064":0,"1065":0,"1067":0,"1068":0,"1069":0,"1074":0,"1077":1,"1078":0,"1079":0,"1080":0,"1082":0,"1083":0,"1085":0,"1086":1,"1087":0,"1088":0,"1094":0,"1095":0,"1097":0,"1098":0,"1099":0,"1103":0,"1106":1,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1121":0,"1122":0,"1123":0,"1125":0,"1128":1,"1129":0,"1130":0,"1131":0,"1133":0,"1134":0,"1135":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1145":0,"1148":1,"1149":0,"1152":1}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/infer.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/infer.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":8,"18":8,"19":8,"20":57,"21":8,"22":1,"23":1,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":19,"243":0,"244":0,"245":19,"246":19,"247":49,"248":49,"249":19,"250":1,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":1,"270":0,"271":0,"272":0,"273":0,"274":1,"275":0,"276":0,"277":0,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":1,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":1,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":1,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":1,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":1,"371":0,"372":0,"373":0,"374":0,"375":1,"376":0,"377":0,"378":0,"379":0,"380":1,"381":0,"382":0,"383":0,"384":1,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":1,"392":1,"393":0,"394":0,"395":0,"396":0,"397":0,"398":1,"399":0,"400":0,"401":1,"402":0,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":1,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":1,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":1,"537":1,"538":0,"539":1,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":1,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":1,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":1,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":1,"617":0,"618":0,"619":0,"620":1,"621":0,"622":0,"623":1,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":1,"632":0,"633":0,"634":1,"635":0,"636":1,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":1,"669":0,"670":1,"671":1,"672":0,"673":1,"674":0,"675":0,"676":0,"677":0,"678":0,"679":1,"680":0,"681":0,"682":1,"683":1,"684":1,"685":1,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":1,"695":0,"696":0,"697":1,"698":1,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":1,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":1,"722":0,"723":0,"724":0,"725":0,"726":0,"727":1,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":1,"735":0,"736":0,"737":0,"738":1,"739":0,"740":0,"741":0,"742":1,"743":1,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":1,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":1,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":1,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":1,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":1,"828":0,"829":1,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":1,"844":0,"845":1,"846":0,"847":1,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":1,"905":1,"906":0,"907":0,"908":1,"909":1,"910":0,"911":1,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":1,"928":0,"929":0,"930":0,"931":1,"932":0,"933":0,"934":0,"935":0,"936":0,"937":1,"938":0,"939":0,"940":1,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":1,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":1,"960":0,"961":0,"962":0,"963":0,"964":0,"965":1,"966":0,"967":1,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":1,"981":0,"982":0,"983":0,"984":1,"985":0,"986":0,"987":1,"988":0,"989":0,"990":0,"991":0,"992":1,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":1,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":1,"1060":16,"1061":0,"1062":0,"1063":0,"1064":0,"1065":1,"1066":6,"1067":0,"1068":0,"1069":0,"1070":0,"1071":1,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":1,"1238":1,"1239":0,"1240":0,"1241":1,"1242":0,"1243":1,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":1,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":1,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":1,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":1,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":1,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":1,"1357":1,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":1,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":1,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":1,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":1,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":1,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":1,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":1,"1458":0,"1459":0,"1460":1,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":1,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":1,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":1,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":1,"1492":0,"1493":1,"1494":0,"1495":1,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":1,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":0,"1526":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":1,"1538":1,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":1,"1549":1,"1550":0,"1551":1,"1552":0,"1553":1,"1554":0,"1555":1,"1556":1,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":1,"1566":0,"1567":0,"1568":1,"1569":0,"1570":0,"1571":0,"1572":0,"1573":1,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":0,"1582":0,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1593":1,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":1,"1600":0,"1601":0,"1602":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[8,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[49,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0,0,0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0,0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0,0,0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0,0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0,0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0,0,0,0,0,0],"297":[0,0,0,0,0,0,0,0,0,0],"298":[0,0],"299":[0,0,0,0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[0,0],"332":[0,0],"333":[0,0],"334":[0,0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[0,0],"340":[0,0],"341":[0,0],"342":[0,0],"343":[0,0],"344":[0,0],"345":[0,0],"346":[0,0],"347":[0,0],"348":[0,0],"349":[0,0],"350":[0,0],"351":[0,0],"352":[0,0],"353":[0,0],"354":[0,0],"355":[0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0],"363":[0,0],"364":[0,0],"365":[0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0],"371":[0,0,0],"372":[0,0],"373":[0,0],"374":[0,0],"375":[0,0],"376":[0,0],"377":[0,0,0],"378":[0,0],"379":[0,0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0],"385":[0,0],"386":[0,0],"387":[0,0,0,0],"388":[0,0],"389":[0,0],"390":[0,0],"391":[0,0],"392":[0,0],"393":[0,0,0],"394":[0,0],"395":[0,0],"396":[0,0],"397":[0,0],"398":[0,0],"399":[0,0],"400":[0,0],"401":[0,0],"402":[0,0],"403":[0,0],"404":[0,0],"405":[0,0],"406":[0,0],"407":[0,0],"408":[0,0],"409":[0,0],"410":[0,0],"411":[0,0],"412":[0,0],"413":[0,0],"414":[0,0],"415":[0,0],"416":[0,0],"417":[0,0],"418":[0,0],"419":[0,0,0,0],"420":[0,0],"421":[0,0],"422":[0,0],"423":[0,0],"424":[0,0],"425":[0,0],"426":[0,0],"427":[0,0],"428":[0,0],"429":[0,0],"430":[0,0],"431":[0,0],"432":[0,0],"433":[0,0],"434":[0,0],"435":[0,0],"436":[0,0],"437":[0,0,0,0],"438":[0,0],"439":[0,0,0,0],"440":[0,0],"441":[0,0],"442":[0,0],"443":[0,0],"444":[0,0],"445":[0,0],"446":[0,0],"447":[0,0],"448":[0,0],"449":[0,0],"450":[0,0],"451":[0,0],"452":[0,0],"453":[0,0],"454":[0,0,0],"455":[0,0],"456":[0,0],"457":[0,0],"458":[0,0],"459":[0,0],"460":[0,0],"461":[0,0],"462":[0,0],"463":[0,0],"464":[0,0],"465":[0,0],"466":[0,0],"467":[0,0],"468":[0,0],"469":[0,0],"470":[0,0],"471":[0,0],"472":[0,0],"473":[0,0],"474":[0,0],"475":[0,0],"476":[0,0],"477":[0,0],"478":[0,0],"479":[0,0],"480":[0,0],"481":[0,0],"482":[0,0],"483":[0,0],"484":[0,0],"485":[0,0],"486":[0,0],"487":[0,0],"488":[0,0],"489":[0,0],"490":[0,0],"491":[0,0],"492":[0,0],"493":[0,0],"494":[0,0],"495":[0,0],"496":[0,0],"497":[0,0],"498":[0,0],"499":[0,0],"500":[0,0],"501":[0,0],"502":[0,0],"503":[0,0],"504":[0,0],"505":[0,0],"506":[0,0],"507":[0,0],"508":[0,0],"509":[0,0],"510":[0,0],"511":[0,0],"512":[0,0],"513":[0,0,0],"514":[0,0],"515":[0,0],"516":[0,0],"517":[0,0],"518":[0,0,0],"519":[0,0],"520":[0,0],"521":[0,0],"522":[0,0],"523":[0,0,0],"524":[0,0],"525":[0,0],"526":[0,0],"527":[0,0],"528":[0,0],"529":[0,0],"530":[0,0],"531":[0,0],"532":[0,0],"533":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":8,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":19,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":16,"196":0,"197":6,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":1},"end":{"line":15,"column":21}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":9},"end":{"line":22,"column":66}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":36},"end":{"line":25,"column":69}}},"4":{"name":"(anonymous_4)","line":35,"loc":{"start":{"line":35,"column":13},"end":{"line":35,"column":24}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":15},"end":{"line":36,"column":26}}},"6":{"name":"(anonymous_6)","line":37,"loc":{"start":{"line":37,"column":13},"end":{"line":37,"column":24}}},"7":{"name":"(anonymous_7)","line":38,"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":28}}},"8":{"name":"(anonymous_8)","line":39,"loc":{"start":{"line":39,"column":13},"end":{"line":39,"column":24}}},"9":{"name":"(anonymous_9)","line":40,"loc":{"start":{"line":40,"column":13},"end":{"line":40,"column":24}}},"10":{"name":"(anonymous_10)","line":41,"loc":{"start":{"line":41,"column":21},"end":{"line":41,"column":32}}},"11":{"name":"(anonymous_11)","line":42,"loc":{"start":{"line":42,"column":16},"end":{"line":42,"column":27}}},"12":{"name":"(anonymous_12)","line":43,"loc":{"start":{"line":43,"column":19},"end":{"line":43,"column":30}}},"13":{"name":"(anonymous_13)","line":44,"loc":{"start":{"line":44,"column":13},"end":{"line":44,"column":24}}},"14":{"name":"(anonymous_14)","line":45,"loc":{"start":{"line":45,"column":22},"end":{"line":45,"column":33}}},"15":{"name":"(anonymous_15)","line":46,"loc":{"start":{"line":46,"column":18},"end":{"line":46,"column":29}}},"16":{"name":"(anonymous_16)","line":47,"loc":{"start":{"line":47,"column":14},"end":{"line":47,"column":25}}},"17":{"name":"(anonymous_17)","line":48,"loc":{"start":{"line":48,"column":14},"end":{"line":48,"column":25}}},"18":{"name":"(anonymous_18)","line":49,"loc":{"start":{"line":49,"column":14},"end":{"line":49,"column":25}}},"19":{"name":"extend","line":52,"loc":{"start":{"line":52,"column":2},"end":{"line":52,"column":32}}},"20":{"name":"(anonymous_20)","line":65,"loc":{"start":{"line":65,"column":28},"end":{"line":65,"column":39}}},"21":{"name":"(anonymous_21)","line":71,"loc":{"start":{"line":71,"column":13},"end":{"line":71,"column":36}}},"22":{"name":"(anonymous_22)","line":84,"loc":{"start":{"line":84,"column":32},"end":{"line":84,"column":46}}},"23":{"name":"(anonymous_23)","line":89,"loc":{"start":{"line":89,"column":15},"end":{"line":89,"column":40}}},"24":{"name":"(anonymous_24)","line":94,"loc":{"start":{"line":94,"column":37},"end":{"line":94,"column":51}}},"25":{"name":"(anonymous_25)","line":99,"loc":{"start":{"line":99,"column":13},"end":{"line":99,"column":28}}},"26":{"name":"(anonymous_26)","line":109,"loc":{"start":{"line":109,"column":17},"end":{"line":109,"column":29}}},"27":{"name":"(anonymous_27)","line":113,"loc":{"start":{"line":113,"column":13},"end":{"line":113,"column":28}}},"28":{"name":"(anonymous_28)","line":116,"loc":{"start":{"line":116,"column":13},"end":{"line":116,"column":24}}},"29":{"name":"(anonymous_29)","line":117,"loc":{"start":{"line":117,"column":21},"end":{"line":117,"column":32}}},"30":{"name":"(anonymous_30)","line":121,"loc":{"start":{"line":121,"column":16},"end":{"line":121,"column":27}}},"31":{"name":"(anonymous_31)","line":132,"loc":{"start":{"line":132,"column":19},"end":{"line":132,"column":30}}},"32":{"name":"(anonymous_32)","line":137,"loc":{"start":{"line":137,"column":13},"end":{"line":137,"column":29}}},"33":{"name":"(anonymous_33)","line":143,"loc":{"start":{"line":143,"column":14},"end":{"line":143,"column":41}}},"34":{"name":"(anonymous_34)","line":148,"loc":{"start":{"line":148,"column":28},"end":{"line":148,"column":41}}},"35":{"name":"(anonymous_35)","line":151,"loc":{"start":{"line":151,"column":20},"end":{"line":151,"column":34}}},"36":{"name":"(anonymous_36)","line":171,"loc":{"start":{"line":171,"column":16},"end":{"line":171,"column":27}}},"37":{"name":"(anonymous_37)","line":205,"loc":{"start":{"line":205,"column":14},"end":{"line":205,"column":25}}},"38":{"name":"(anonymous_38)","line":206,"loc":{"start":{"line":206,"column":18},"end":{"line":206,"column":29}}},"39":{"name":"(anonymous_39)","line":208,"loc":{"start":{"line":208,"column":22},"end":{"line":208,"column":41}}},"40":{"name":"(anonymous_40)","line":213,"loc":{"start":{"line":213,"column":21},"end":{"line":213,"column":33}}},"41":{"name":"similarAVal","line":223,"loc":{"start":{"line":223,"column":2},"end":{"line":223,"column":36}}},"42":{"name":"similarType","line":229,"loc":{"start":{"line":229,"column":2},"end":{"line":229,"column":36}}},"43":{"name":"(anonymous_43)","line":251,"loc":{"start":{"line":251,"column":24},"end":{"line":251,"column":40}}},"44":{"name":"(anonymous_44)","line":260,"loc":{"start":{"line":260,"column":46},"end":{"line":260,"column":62}}},"45":{"name":"canonicalType","line":276,"loc":{"start":{"line":276,"column":2},"end":{"line":276,"column":32}}},"46":{"name":"(anonymous_46)","line":311,"loc":{"start":{"line":311,"column":40},"end":{"line":311,"column":58}}},"47":{"name":"(anonymous_47)","line":312,"loc":{"start":{"line":312,"column":15},"end":{"line":312,"column":26}}},"48":{"name":"(anonymous_48)","line":322,"loc":{"start":{"line":322,"column":15},"end":{"line":322,"column":38}}},"49":{"name":"(anonymous_49)","line":325,"loc":{"start":{"line":325,"column":13},"end":{"line":325,"column":36}}},"50":{"name":"(anonymous_50)","line":329,"loc":{"start":{"line":329,"column":14},"end":{"line":329,"column":25}}},"51":{"name":"(anonymous_51)","line":330,"loc":{"start":{"line":330,"column":18},"end":{"line":330,"column":29}}},"52":{"name":"(anonymous_52)","line":337,"loc":{"start":{"line":337,"column":15},"end":{"line":337,"column":48}}},"53":{"name":"(anonymous_53)","line":340,"loc":{"start":{"line":340,"column":13},"end":{"line":340,"column":36}}},"54":{"name":"(anonymous_54)","line":346,"loc":{"start":{"line":346,"column":14},"end":{"line":346,"column":25}}},"55":{"name":"(anonymous_55)","line":350,"loc":{"start":{"line":350,"column":15},"end":{"line":350,"column":27}}},"56":{"name":"(anonymous_56)","line":351,"loc":{"start":{"line":351,"column":13},"end":{"line":351,"column":28}}},"57":{"name":"withDisabledComputing","line":357,"loc":{"start":{"line":357,"column":2},"end":{"line":357,"column":43}}},"58":{"name":"(anonymous_58)","line":364,"loc":{"start":{"line":364,"column":15},"end":{"line":364,"column":54}}},"59":{"name":"(anonymous_59)","line":368,"loc":{"start":{"line":368,"column":13},"end":{"line":368,"column":34}}},"60":{"name":"(anonymous_60)","line":387,"loc":{"start":{"line":387,"column":14},"end":{"line":387,"column":25}}},"61":{"name":"(anonymous_61)","line":392,"loc":{"start":{"line":392,"column":18},"end":{"line":392,"column":29}}},"62":{"name":"(anonymous_62)","line":398,"loc":{"start":{"line":398,"column":15},"end":{"line":398,"column":58}}},"63":{"name":"(anonymous_63)","line":402,"loc":{"start":{"line":402,"column":13},"end":{"line":402,"column":35}}},"64":{"name":"(anonymous_64)","line":407,"loc":{"start":{"line":407,"column":14},"end":{"line":407,"column":25}}},"65":{"name":"(anonymous_65)","line":411,"loc":{"start":{"line":411,"column":15},"end":{"line":411,"column":41}}},"66":{"name":"(anonymous_66)","line":414,"loc":{"start":{"line":414,"column":13},"end":{"line":414,"column":33}}},"67":{"name":"(anonymous_67)","line":421,"loc":{"start":{"line":421,"column":42},"end":{"line":421,"column":62}}},"68":{"name":"(anonymous_68)","line":437,"loc":{"start":{"line":437,"column":15},"end":{"line":437,"column":38}}},"69":{"name":"(anonymous_69)","line":440,"loc":{"start":{"line":440,"column":13},"end":{"line":440,"column":34}}},"70":{"name":"(anonymous_70)","line":451,"loc":{"start":{"line":451,"column":15},"end":{"line":451,"column":28}}},"71":{"name":"(anonymous_71)","line":452,"loc":{"start":{"line":452,"column":13},"end":{"line":452,"column":34}}},"72":{"name":"(anonymous_72)","line":457,"loc":{"start":{"line":457,"column":22},"end":{"line":457,"column":50}}},"73":{"name":"(anonymous_73)","line":465,"loc":{"start":{"line":465,"column":15},"end":{"line":465,"column":39}}},"74":{"name":"(anonymous_74)","line":468,"loc":{"start":{"line":468,"column":13},"end":{"line":468,"column":36}}},"75":{"name":"(anonymous_75)","line":474,"loc":{"start":{"line":474,"column":14},"end":{"line":474,"column":25}}},"76":{"name":"(anonymous_76)","line":478,"loc":{"start":{"line":478,"column":15},"end":{"line":478,"column":32}}},"77":{"name":"(anonymous_77)","line":479,"loc":{"start":{"line":479,"column":13},"end":{"line":479,"column":33}}},"78":{"name":"(anonymous_78)","line":482,"loc":{"start":{"line":482,"column":18},"end":{"line":482,"column":29}}},"79":{"name":"(anonymous_79)","line":486,"loc":{"start":{"line":486,"column":15},"end":{"line":486,"column":35}}},"80":{"name":"(anonymous_80)","line":487,"loc":{"start":{"line":487,"column":13},"end":{"line":487,"column":26}}},"81":{"name":"(anonymous_81)","line":494,"loc":{"start":{"line":494,"column":15},"end":{"line":494,"column":29}}},"82":{"name":"(anonymous_82)","line":495,"loc":{"start":{"line":495,"column":13},"end":{"line":495,"column":26}}},"83":{"name":"(anonymous_83)","line":502,"loc":{"start":{"line":502,"column":15},"end":{"line":502,"column":39}}},"84":{"name":"(anonymous_84)","line":505,"loc":{"start":{"line":505,"column":13},"end":{"line":505,"column":34}}},"85":{"name":"(anonymous_85)","line":508,"loc":{"start":{"line":508,"column":18},"end":{"line":508,"column":29}}},"86":{"name":"(anonymous_86)","line":509,"loc":{"start":{"line":509,"column":14},"end":{"line":509,"column":25}}},"87":{"name":"(anonymous_87)","line":510,"loc":{"start":{"line":510,"column":14},"end":{"line":510,"column":25}}},"88":{"name":"(anonymous_88)","line":515,"loc":{"start":{"line":515,"column":28},"end":{"line":515,"column":39}}},"89":{"name":"(anonymous_89)","line":518,"loc":{"start":{"line":518,"column":15},"end":{"line":518,"column":30}}},"90":{"name":"(anonymous_90)","line":519,"loc":{"start":{"line":519,"column":13},"end":{"line":519,"column":29}}},"91":{"name":"(anonymous_91)","line":520,"loc":{"start":{"line":520,"column":13},"end":{"line":520,"column":24}}},"92":{"name":"(anonymous_92)","line":521,"loc":{"start":{"line":521,"column":14},"end":{"line":521,"column":25}}},"93":{"name":"(anonymous_93)","line":522,"loc":{"start":{"line":522,"column":13},"end":{"line":522,"column":24}}},"94":{"name":"(anonymous_94)","line":525,"loc":{"start":{"line":525,"column":28},"end":{"line":525,"column":50}}},"95":{"name":"(anonymous_95)","line":528,"loc":{"start":{"line":528,"column":14},"end":{"line":528,"column":25}}},"96":{"name":"(anonymous_96)","line":529,"loc":{"start":{"line":529,"column":13},"end":{"line":529,"column":28}}},"97":{"name":"(anonymous_97)","line":530,"loc":{"start":{"line":530,"column":22},"end":{"line":530,"column":41}}},"98":{"name":"isInteger","line":535,"loc":{"start":{"line":535,"column":2},"end":{"line":535,"column":26}}},"99":{"name":"(anonymous_99)","line":541,"loc":{"start":{"line":541,"column":26},"end":{"line":541,"column":48}}},"100":{"name":"(anonymous_100)","line":554,"loc":{"start":{"line":554,"column":14},"end":{"line":554,"column":33}}},"101":{"name":"(anonymous_101)","line":569,"loc":{"start":{"line":569,"column":13},"end":{"line":569,"column":41}}},"102":{"name":"(anonymous_102)","line":576,"loc":{"start":{"line":576,"column":13},"end":{"line":576,"column":40}}},"103":{"name":"(anonymous_103)","line":601,"loc":{"start":{"line":601,"column":13},"end":{"line":601,"column":28}}},"104":{"name":"(anonymous_104)","line":611,"loc":{"start":{"line":611,"column":26},"end":{"line":611,"column":38}}},"105":{"name":"(anonymous_105)","line":612,"loc":{"start":{"line":612,"column":19},"end":{"line":612,"column":46}}},"106":{"name":"(anonymous_106)","line":624,"loc":{"start":{"line":624,"column":17},"end":{"line":624,"column":45}}},"107":{"name":"(anonymous_107)","line":633,"loc":{"start":{"line":633,"column":18},"end":{"line":633,"column":34}}},"108":{"name":"(anonymous_108)","line":640,"loc":{"start":{"line":640,"column":22},"end":{"line":640,"column":33}}},"109":{"name":"(anonymous_109)","line":647,"loc":{"start":{"line":647,"column":16},"end":{"line":647,"column":31}}},"110":{"name":"(anonymous_110)","line":653,"loc":{"start":{"line":653,"column":17},"end":{"line":653,"column":29}}},"111":{"name":"(anonymous_111)","line":666,"loc":{"start":{"line":666,"column":32},"end":{"line":666,"column":43}}},"112":{"name":"(anonymous_112)","line":674,"loc":{"start":{"line":674,"column":22},"end":{"line":674,"column":40}}},"113":{"name":"(anonymous_113)","line":679,"loc":{"start":{"line":679,"column":22},"end":{"line":679,"column":41}}},"114":{"name":"(anonymous_114)","line":684,"loc":{"start":{"line":684,"column":16},"end":{"line":684,"column":27}}},"115":{"name":"ignoredProp","line":688,"loc":{"start":{"line":688,"column":2},"end":{"line":688,"column":29}}},"116":{"name":"(anonymous_116)","line":692,"loc":{"start":{"line":692,"column":24},"end":{"line":692,"column":80}}},"117":{"name":"(anonymous_117)","line":702,"loc":{"start":{"line":702,"column":14},"end":{"line":702,"column":33}}},"118":{"name":"(anonymous_118)","line":716,"loc":{"start":{"line":716,"column":13},"end":{"line":716,"column":28}}},"119":{"name":"(anonymous_119)","line":729,"loc":{"start":{"line":729,"column":13},"end":{"line":729,"column":40}}},"120":{"name":"(anonymous_120)","line":740,"loc":{"start":{"line":740,"column":21},"end":{"line":740,"column":32}}},"121":{"name":"(anonymous_121)","line":741,"loc":{"start":{"line":741,"column":15},"end":{"line":741,"column":26}}},"122":{"name":"(anonymous_122)","line":744,"loc":{"start":{"line":744,"column":26},"end":{"line":744,"column":48}}},"123":{"name":"(anonymous_123)","line":761,"loc":{"start":{"line":761,"column":14},"end":{"line":761,"column":33}}},"124":{"name":"(anonymous_124)","line":783,"loc":{"start":{"line":783,"column":26},"end":{"line":783,"column":41}}},"125":{"name":"(anonymous_125)","line":789,"loc":{"start":{"line":789,"column":26},"end":{"line":789,"column":53}}},"126":{"name":"(anonymous_126)","line":796,"loc":{"start":{"line":796,"column":16},"end":{"line":796,"column":27}}},"127":{"name":"(anonymous_127)","line":797,"loc":{"start":{"line":797,"column":19},"end":{"line":797,"column":30}}},"128":{"name":"(anonymous_128)","line":800,"loc":{"start":{"line":800,"column":22},"end":{"line":800,"column":49}}},"129":{"name":"registerProp","line":812,"loc":{"start":{"line":812,"column":2},"end":{"line":812,"column":35}}},"130":{"name":"objsWithProp","line":817,"loc":{"start":{"line":817,"column":2},"end":{"line":817,"column":30}}},"131":{"name":"(anonymous_131)","line":823,"loc":{"start":{"line":823,"column":20},"end":{"line":823,"column":43}}},"132":{"name":"(anonymous_132)","line":837,"loc":{"start":{"line":837,"column":30},"end":{"line":837,"column":41}}},"133":{"name":"(anonymous_133)","line":859,"loc":{"start":{"line":859,"column":44},"end":{"line":859,"column":55}}},"134":{"name":"(anonymous_134)","line":864,"loc":{"start":{"line":864,"column":15},"end":{"line":864,"column":26}}},"135":{"name":"(anonymous_135)","line":866,"loc":{"start":{"line":866,"column":24},"end":{"line":866,"column":45}}},"136":{"name":"(anonymous_136)","line":873,"loc":{"start":{"line":873,"column":21},"end":{"line":873,"column":32}}},"137":{"name":"(anonymous_137)","line":881,"loc":{"start":{"line":881,"column":24},"end":{"line":881,"column":40}}},"138":{"name":"(anonymous_138)","line":890,"loc":{"start":{"line":890,"column":22},"end":{"line":890,"column":39}}},"139":{"name":"withWorklist","line":895,"loc":{"start":{"line":895,"column":2},"end":{"line":895,"column":27}}},"140":{"name":"(anonymous_140)","line":899,"loc":{"start":{"line":899,"column":28},"end":{"line":899,"column":59}}},"141":{"name":"withSuper","line":914,"loc":{"start":{"line":914,"column":2},"end":{"line":914,"column":35}}},"142":{"name":"(anonymous_142)","line":924,"loc":{"start":{"line":924,"column":30},"end":{"line":924,"column":75}}},"143":{"name":"(anonymous_143)","line":933,"loc":{"start":{"line":933,"column":12},"end":{"line":933,"column":39}}},"144":{"name":"functionScope","line":942,"loc":{"start":{"line":942,"column":2},"end":{"line":942,"column":39}}},"145":{"name":"maybeInstantiate","line":951,"loc":{"start":{"line":951,"column":2},"end":{"line":951,"column":42}}},"146":{"name":"nodeSmallerThan","line":957,"loc":{"start":{"line":957,"column":2},"end":{"line":957,"column":36}}},"147":{"name":"(anonymous_147)","line":959,"loc":{"start":{"line":959,"column":37},"end":{"line":959,"column":48}}},"148":{"name":"maybeTagAsInstantiated","line":967,"loc":{"start":{"line":967,"column":2},"end":{"line":967,"column":44}}},"149":{"name":"setFunctionInstantiated","line":978,"loc":{"start":{"line":978,"column":2},"end":{"line":978,"column":45}}},"150":{"name":"(anonymous_150)","line":982,"loc":{"start":{"line":982,"column":20},"end":{"line":982,"column":41}}},"151":{"name":"(anonymous_151)","line":984,"loc":{"start":{"line":984,"column":39},"end":{"line":984,"column":50}}},"152":{"name":"maybeTagAsGeneric","line":1012,"loc":{"start":{"line":1012,"column":2},"end":{"line":1012,"column":33}}},"153":{"name":"explore","line":1019,"loc":{"start":{"line":1019,"column":4},"end":{"line":1019,"column":40}}},"154":{"name":"(anonymous_154)","line":1045,"loc":{"start":{"line":1045,"column":46},"end":{"line":1045,"column":57}}},"155":{"name":"addVar","line":1053,"loc":{"start":{"line":1053,"column":2},"end":{"line":1053,"column":35}}},"156":{"name":"patternName","line":1056,"loc":{"start":{"line":1056,"column":2},"end":{"line":1056,"column":29}}},"157":{"name":"(anonymous_157)","line":1059,"loc":{"start":{"line":1059,"column":71},"end":{"line":1059,"column":83}}},"158":{"name":"(anonymous_158)","line":1060,"loc":{"start":{"line":1060,"column":68},"end":{"line":1060,"column":80}}},"159":{"name":"isBlockScopedDecl","line":1065,"loc":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":35}}},"160":{"name":"patternScopes","line":1071,"loc":{"start":{"line":1071,"column":2},"end":{"line":1071,"column":39}}},"161":{"name":"(anonymous_161)","line":1076,"loc":{"start":{"line":1076,"column":21},"end":{"line":1076,"column":44}}},"162":{"name":"(anonymous_162)","line":1079,"loc":{"start":{"line":1079,"column":23},"end":{"line":1079,"column":49}}},"163":{"name":"(anonymous_163)","line":1083,"loc":{"start":{"line":1083,"column":26},"end":{"line":1083,"column":51}}},"164":{"name":"(anonymous_164)","line":1090,"loc":{"start":{"line":1090,"column":19},"end":{"line":1090,"column":44}}},"165":{"name":"(anonymous_165)","line":1093,"loc":{"start":{"line":1093,"column":14},"end":{"line":1093,"column":39}}},"166":{"name":"(anonymous_166)","line":1116,"loc":{"start":{"line":1116,"column":20},"end":{"line":1116,"column":45}}},"167":{"name":"(anonymous_167)","line":1121,"loc":{"start":{"line":1121,"column":17},"end":{"line":1121,"column":42}}},"168":{"name":"(anonymous_168)","line":1132,"loc":{"start":{"line":1132,"column":25},"end":{"line":1132,"column":50}}},"169":{"name":"(anonymous_169)","line":1140,"loc":{"start":{"line":1140,"column":22},"end":{"line":1140,"column":47}}},"170":{"name":"(anonymous_170)","line":1146,"loc":{"start":{"line":1146,"column":20},"end":{"line":1146,"column":45}}},"171":{"name":"(anonymous_171)","line":1151,"loc":{"start":{"line":1151,"column":18},"end":{"line":1151,"column":43}}},"172":{"name":"(anonymous_172)","line":1156,"loc":{"start":{"line":1156,"column":23},"end":{"line":1156,"column":45}}},"173":{"name":"rmScope","line":1163,"loc":{"start":{"line":1163,"column":2},"end":{"line":1163,"column":25}}},"174":{"name":"(anonymous_174)","line":1166,"loc":{"start":{"line":1166,"column":24},"end":{"line":1166,"column":38}}},"175":{"name":"(anonymous_175)","line":1172,"loc":{"start":{"line":1172,"column":36},"end":{"line":1172,"column":65}}},"176":{"name":"symbolName","line":1187,"loc":{"start":{"line":1187,"column":2},"end":{"line":1187,"column":27}}},"177":{"name":"unopResultType","line":1192,"loc":{"start":{"line":1192,"column":2},"end":{"line":1192,"column":30}}},"178":{"name":"binopIsBoolean","line":1200,"loc":{"start":{"line":1200,"column":2},"end":{"line":1200,"column":30}}},"179":{"name":"literalType","line":1206,"loc":{"start":{"line":1206,"column":2},"end":{"line":1206,"column":29}}},"180":{"name":"join","line":1219,"loc":{"start":{"line":1219,"column":2},"end":{"line":1219,"column":22}}},"181":{"name":"connectParams","line":1228,"loc":{"start":{"line":1228,"column":2},"end":{"line":1228,"column":38}}},"182":{"name":"ensureVar","line":1236,"loc":{"start":{"line":1236,"column":2},"end":{"line":1236,"column":34}}},"183":{"name":"(anonymous_183)","line":1241,"loc":{"start":{"line":1241,"column":16},"end":{"line":1241,"column":46}}},"184":{"name":"(anonymous_184)","line":1244,"loc":{"start":{"line":1244,"column":22},"end":{"line":1244,"column":52}}},"185":{"name":"(anonymous_185)","line":1249,"loc":{"start":{"line":1249,"column":17},"end":{"line":1249,"column":47}}},"186":{"name":"(anonymous_186)","line":1252,"loc":{"start":{"line":1252,"column":19},"end":{"line":1252,"column":49}}},"187":{"name":"(anonymous_187)","line":1258,"loc":{"start":{"line":1258,"column":18},"end":{"line":1258,"column":48}}},"188":{"name":"(anonymous_188)","line":1263,"loc":{"start":{"line":1263,"column":23},"end":{"line":1263,"column":53}}},"189":{"name":"connectPattern","line":1268,"loc":{"start":{"line":1268,"column":2},"end":{"line":1268,"column":47}}},"190":{"name":"getThis","line":1273,"loc":{"start":{"line":1273,"column":2},"end":{"line":1273,"column":26}}},"191":{"name":"maybeAddPhantomObj","line":1278,"loc":{"start":{"line":1278,"column":2},"end":{"line":1278,"column":35}}},"192":{"name":"inferClass","line":1284,"loc":{"start":{"line":1284,"column":2},"end":{"line":1284,"column":41}}},"193":{"name":"(anonymous_193)","line":1305,"loc":{"start":{"line":1305,"column":46},"end":{"line":1305,"column":57}}},"194":{"name":"arrayLiteralType","line":1334,"loc":{"start":{"line":1334,"column":2},"end":{"line":1334,"column":52}}},"195":{"name":"ret","line":1365,"loc":{"start":{"line":1365,"column":2},"end":{"line":1365,"column":18}}},"196":{"name":"(anonymous_196)","line":1366,"loc":{"start":{"line":1366,"column":11},"end":{"line":1366,"column":44}}},"197":{"name":"fill","line":1372,"loc":{"start":{"line":1372,"column":2},"end":{"line":1372,"column":19}}},"198":{"name":"(anonymous_198)","line":1373,"loc":{"start":{"line":1373,"column":11},"end":{"line":1373,"column":44}}},"199":{"name":"(anonymous_199)","line":1381,"loc":{"start":{"line":1381,"column":25},"end":{"line":1381,"column":47}}},"200":{"name":"(anonymous_200)","line":1384,"loc":{"start":{"line":1384,"column":26},"end":{"line":1384,"column":54}}},"201":{"name":"(anonymous_201)","line":1403,"loc":{"start":{"line":1403,"column":45},"end":{"line":1403,"column":56}}},"202":{"name":"(anonymous_202)","line":1424,"loc":{"start":{"line":1424,"column":28},"end":{"line":1424,"column":56}}},"203":{"name":"(anonymous_203)","line":1439,"loc":{"start":{"line":1439,"column":28},"end":{"line":1439,"column":50}}},"204":{"name":"(anonymous_204)","line":1444,"loc":{"start":{"line":1444,"column":25},"end":{"line":1444,"column":47}}},"205":{"name":"(anonymous_205)","line":1448,"loc":{"start":{"line":1448,"column":26},"end":{"line":1448,"column":48}}},"206":{"name":"(anonymous_206)","line":1452,"loc":{"start":{"line":1452,"column":26},"end":{"line":1452,"column":48}}},"207":{"name":"(anonymous_207)","line":1468,"loc":{"start":{"line":1468,"column":30},"end":{"line":1468,"column":58}}},"208":{"name":"(anonymous_208)","line":1497,"loc":{"start":{"line":1497,"column":29},"end":{"line":1497,"column":56}}},"209":{"name":"(anonymous_209)","line":1514,"loc":{"start":{"line":1514,"column":28},"end":{"line":1514,"column":55}}},"210":{"name":"(anonymous_210)","line":1518,"loc":{"start":{"line":1518,"column":32},"end":{"line":1518,"column":59}}},"211":{"name":"(anonymous_211)","line":1523,"loc":{"start":{"line":1523,"column":24},"end":{"line":1523,"column":57}}},"212":{"name":"(anonymous_212)","line":1535,"loc":{"start":{"line":1535,"column":25},"end":{"line":1535,"column":52}}},"213":{"name":"(anonymous_213)","line":1560,"loc":{"start":{"line":1560,"column":27},"end":{"line":1560,"column":54}}},"214":{"name":"(anonymous_214)","line":1572,"loc":{"start":{"line":1572,"column":20},"end":{"line":1572,"column":42}}},"215":{"name":"(anonymous_215)","line":1581,"loc":{"start":{"line":1581,"column":24},"end":{"line":1581,"column":47}}},"216":{"name":"(anonymous_216)","line":1584,"loc":{"start":{"line":1584,"column":15},"end":{"line":1584,"column":30}}},"217":{"name":"(anonymous_217)","line":1587,"loc":{"start":{"line":1587,"column":17},"end":{"line":1587,"column":32}}},"218":{"name":"(anonymous_218)","line":1590,"loc":{"start":{"line":1590,"column":25},"end":{"line":1590,"column":47}}},"219":{"name":"(anonymous_219)","line":1595,"loc":{"start":{"line":1595,"column":35},"end":{"line":1595,"column":62}}},"220":{"name":"(anonymous_220)","line":1601,"loc":{"start":{"line":1601,"column":25},"end":{"line":1601,"column":47}}},"221":{"name":"infer","line":1621,"loc":{"start":{"line":1621,"column":2},"end":{"line":1621,"column":41}}},"222":{"name":"loopPattern","line":1626,"loc":{"start":{"line":1626,"column":2},"end":{"line":1626,"column":29}}},"223":{"name":"(anonymous_223)","line":1631,"loc":{"start":{"line":1631,"column":16},"end":{"line":1631,"column":38}}},"224":{"name":"(anonymous_224)","line":1635,"loc":{"start":{"line":1635,"column":25},"end":{"line":1635,"column":50}}},"225":{"name":"(anonymous_225)","line":1643,"loc":{"start":{"line":1643,"column":15},"end":{"line":1643,"column":40}}},"226":{"name":"(anonymous_226)","line":1647,"loc":{"start":{"line":1647,"column":25},"end":{"line":1647,"column":47}}},"227":{"name":"(anonymous_227)","line":1660,"loc":{"start":{"line":1660,"column":22},"end":{"line":1660,"column":44}}},"228":{"name":"(anonymous_228)","line":1664,"loc":{"start":{"line":1664,"column":21},"end":{"line":1664,"column":43}}},"229":{"name":"(anonymous_229)","line":1674,"loc":{"start":{"line":1674,"column":20},"end":{"line":1674,"column":45}}},"230":{"name":"(anonymous_230)","line":1691,"loc":{"start":{"line":1691,"column":20},"end":{"line":1691,"column":45}}},"231":{"name":"(anonymous_231)","line":1706,"loc":{"start":{"line":1706,"column":30},"end":{"line":1706,"column":64}}},"232":{"name":"(anonymous_232)","line":1716,"loc":{"start":{"line":1716,"column":20},"end":{"line":1716,"column":47}}},"233":{"name":"(anonymous_233)","line":1735,"loc":{"start":{"line":1735,"column":18},"end":{"line":1735,"column":48}}},"234":{"name":"makePredicate","line":1749,"loc":{"start":{"line":1749,"column":2},"end":{"line":1749,"column":46}}},"235":{"name":"(anonymous_235)","line":1753,"loc":{"start":{"line":1753,"column":30},"end":{"line":1753,"column":42}}},"236":{"name":"(anonymous_236)","line":1754,"loc":{"start":{"line":1754,"column":13},"end":{"line":1754,"column":30}}},"237":{"name":"(anonymous_237)","line":1756,"loc":{"start":{"line":1756,"column":30},"end":{"line":1756,"column":42}}},"238":{"name":"(anonymous_238)","line":1757,"loc":{"start":{"line":1757,"column":13},"end":{"line":1757,"column":30}}},"239":{"name":"(anonymous_239)","line":1761,"loc":{"start":{"line":1761,"column":25},"end":{"line":1761,"column":40}}},"240":{"name":"(anonymous_240)","line":1783,"loc":{"start":{"line":1783,"column":16},"end":{"line":1783,"column":27}}},"241":{"name":"(anonymous_241)","line":1784,"loc":{"start":{"line":1784,"column":24},"end":{"line":1784,"column":39}}},"242":{"name":"(anonymous_242)","line":1794,"loc":{"start":{"line":1794,"column":23},"end":{"line":1794,"column":38}}},"243":{"name":"findByPropertyName","line":1803,"loc":{"start":{"line":1803,"column":2},"end":{"line":1803,"column":36}}},"244":{"name":"generatorResult","line":1813,"loc":{"start":{"line":1813,"column":2},"end":{"line":1813,"column":42}}},"245":{"name":"maybeIterator","line":1823,"loc":{"start":{"line":1823,"column":2},"end":{"line":1823,"column":37}}},"246":{"name":"computeReturnType","line":1832,"loc":{"start":{"line":1832,"column":2},"end":{"line":1832,"column":56}}},"247":{"name":"(anonymous_247)","line":1848,"loc":{"start":{"line":1848,"column":21},"end":{"line":1848,"column":43}}},"248":{"name":"(anonymous_248)","line":1851,"loc":{"start":{"line":1851,"column":22},"end":{"line":1851,"column":37}}},"249":{"name":"(anonymous_249)","line":1854,"loc":{"start":{"line":1854,"column":21},"end":{"line":1854,"column":36}}},"250":{"name":"(anonymous_250)","line":1857,"loc":{"start":{"line":1857,"column":24},"end":{"line":1857,"column":39}}},"251":{"name":"(anonymous_251)","line":1860,"loc":{"start":{"line":1860,"column":29},"end":{"line":1860,"column":44}}},"252":{"name":"(anonymous_252)","line":1863,"loc":{"start":{"line":1863,"column":24},"end":{"line":1863,"column":46}}},"253":{"name":"(anonymous_253)","line":1866,"loc":{"start":{"line":1866,"column":21},"end":{"line":1866,"column":36}}},"254":{"name":"(anonymous_254)","line":1869,"loc":{"start":{"line":1869,"column":22},"end":{"line":1869,"column":33}}},"255":{"name":"(anonymous_255)","line":1872,"loc":{"start":{"line":1872,"column":22},"end":{"line":1872,"column":44}}},"256":{"name":"(anonymous_256)","line":1881,"loc":{"start":{"line":1881,"column":26},"end":{"line":1881,"column":48}}},"257":{"name":"(anonymous_257)","line":1884,"loc":{"start":{"line":1884,"column":23},"end":{"line":1884,"column":45}}},"258":{"name":"(anonymous_258)","line":1888,"loc":{"start":{"line":1888,"column":27},"end":{"line":1888,"column":49}}},"259":{"name":"(anonymous_259)","line":1892,"loc":{"start":{"line":1892,"column":19},"end":{"line":1892,"column":41}}},"260":{"name":"(anonymous_260)","line":1898,"loc":{"start":{"line":1898,"column":20},"end":{"line":1898,"column":42}}},"261":{"name":"(anonymous_261)","line":1901,"loc":{"start":{"line":1901,"column":22},"end":{"line":1901,"column":44}}},"262":{"name":"(anonymous_262)","line":1907,"loc":{"start":{"line":1907,"column":22},"end":{"line":1907,"column":37}}},"263":{"name":"(anonymous_263)","line":1912,"loc":{"start":{"line":1912,"column":16},"end":{"line":1912,"column":38}}},"264":{"name":"(anonymous_264)","line":1915,"loc":{"start":{"line":1915,"column":20},"end":{"line":1915,"column":43}}},"265":{"name":"(anonymous_265)","line":1918,"loc":{"start":{"line":1918,"column":13},"end":{"line":1918,"column":28}}},"266":{"name":"(anonymous_266)","line":1921,"loc":{"start":{"line":1921,"column":15},"end":{"line":1921,"column":30}}},"267":{"name":"(anonymous_267)","line":1924,"loc":{"start":{"line":1924,"column":21},"end":{"line":1924,"column":32}}},"268":{"name":"(anonymous_268)","line":1927,"loc":{"start":{"line":1927,"column":30},"end":{"line":1927,"column":52}}},"269":{"name":"(anonymous_269)","line":1930,"loc":{"start":{"line":1930,"column":21},"end":{"line":1930,"column":44}}},"270":{"name":"findType","line":1936,"loc":{"start":{"line":1936,"column":2},"end":{"line":1936,"column":33}}},"271":{"name":"(anonymous_271)","line":1942,"loc":{"start":{"line":1942,"column":14},"end":{"line":1942,"column":37}}},"272":{"name":"(anonymous_272)","line":1945,"loc":{"start":{"line":1945,"column":17},"end":{"line":1945,"column":40}}},"273":{"name":"(anonymous_273)","line":1948,"loc":{"start":{"line":1948,"column":14},"end":{"line":1948,"column":36}}},"274":{"name":"(anonymous_274)","line":1952,"loc":{"start":{"line":1952,"column":15},"end":{"line":1952,"column":37}}},"275":{"name":"(anonymous_275)","line":1955,"loc":{"start":{"line":1955,"column":21},"end":{"line":1955,"column":43}}},"276":{"name":"(anonymous_276)","line":1958,"loc":{"start":{"line":1958,"column":28},"end":{"line":1958,"column":50}}},"277":{"name":"(anonymous_277)","line":1961,"loc":{"start":{"line":1961,"column":30},"end":{"line":1961,"column":52}}},"278":{"name":"(anonymous_278)","line":1966,"loc":{"start":{"line":1966,"column":22},"end":{"line":1966,"column":44}}},"279":{"name":"(anonymous_279)","line":1970,"loc":{"start":{"line":1970,"column":14},"end":{"line":1970,"column":36}}},"280":{"name":"(anonymous_280)","line":1976,"loc":{"start":{"line":1976,"column":29},"end":{"line":1976,"column":77}}},"281":{"name":"(anonymous_281)","line":1977,"loc":{"start":{"line":1977,"column":25},"end":{"line":1977,"column":44}}},"282":{"name":"(anonymous_282)","line":1984,"loc":{"start":{"line":1984,"column":33},"end":{"line":1984,"column":81}}},"283":{"name":"(anonymous_283)","line":1985,"loc":{"start":{"line":1985,"column":25},"end":{"line":1985,"column":44}}},"284":{"name":"(anonymous_284)","line":1993,"loc":{"start":{"line":1993,"column":27},"end":{"line":1993,"column":43}}},"285":{"name":"(anonymous_285)","line":1999,"loc":{"start":{"line":1999,"column":23},"end":{"line":1999,"column":44}}},"286":{"name":"c","line":2001,"loc":{"start":{"line":2001,"column":4},"end":{"line":2001,"column":35}}},"287":{"name":"(anonymous_287)","line":2019,"loc":{"start":{"line":2019,"column":21},"end":{"line":2019,"column":46}}},"288":{"name":"(anonymous_288)","line":2020,"loc":{"start":{"line":2020,"column":22},"end":{"line":2020,"column":50}}},"289":{"name":"(anonymous_289)","line":2027,"loc":{"start":{"line":2027,"column":21},"end":{"line":2027,"column":38}}},"290":{"name":"(anonymous_290)","line":2028,"loc":{"start":{"line":2028,"column":22},"end":{"line":2028,"column":33}}},"291":{"name":"(anonymous_291)","line":2029,"loc":{"start":{"line":2029,"column":22},"end":{"line":2029,"column":39}}},"292":{"name":"(anonymous_292)","line":2030,"loc":{"start":{"line":2030,"column":26},"end":{"line":2030,"column":51}}},"293":{"name":"(anonymous_293)","line":2031,"loc":{"start":{"line":2031,"column":23},"end":{"line":2031,"column":48}}},"294":{"name":"(anonymous_294)","line":2032,"loc":{"start":{"line":2032,"column":27},"end":{"line":2032,"column":55}}},"295":{"name":"(anonymous_295)","line":2035,"loc":{"start":{"line":2035,"column":20},"end":{"line":2035,"column":48}}},"296":{"name":"(anonymous_296)","line":2046,"loc":{"start":{"line":2046,"column":21},"end":{"line":2046,"column":50}}},"297":{"name":"(anonymous_297)","line":2058,"loc":{"start":{"line":2058,"column":24},"end":{"line":2058,"column":52}}},"298":{"name":"(anonymous_298)","line":2064,"loc":{"start":{"line":2064,"column":28},"end":{"line":2064,"column":49}}},"299":{"name":"(anonymous_299)","line":2069,"loc":{"start":{"line":2069,"column":50},"end":{"line":2069,"column":78}}},"300":{"name":"(anonymous_300)","line":2082,"loc":{"start":{"line":2082,"column":26},"end":{"line":2082,"column":40}}},"301":{"name":"(anonymous_301)","line":2083,"loc":{"start":{"line":2083,"column":21},"end":{"line":2083,"column":32}}},"302":{"name":"(anonymous_302)","line":2085,"loc":{"start":{"line":2085,"column":31},"end":{"line":2085,"column":49}}},"303":{"name":"(anonymous_303)","line":2089,"loc":{"start":{"line":2089,"column":21},"end":{"line":2089,"column":65}}},"304":{"name":"handleId","line":2090,"loc":{"start":{"line":2090,"column":4},"end":{"line":2090,"column":46}}},"305":{"name":"(anonymous_305)","line":2103,"loc":{"start":{"line":2103,"column":14},"end":{"line":2103,"column":40}}},"306":{"name":"(anonymous_306)","line":2106,"loc":{"start":{"line":2106,"column":15},"end":{"line":2106,"column":40}}},"307":{"name":"(anonymous_307)","line":2111,"loc":{"start":{"line":2111,"column":25},"end":{"line":2111,"column":64}}},"308":{"name":"isObjTypeProto","line":2118,"loc":{"start":{"line":2118,"column":4},"end":{"line":2118,"column":34}}},"309":{"name":"(anonymous_309)","line":2131,"loc":{"start":{"line":2131,"column":24},"end":{"line":2131,"column":46}}},"310":{"name":"(anonymous_310)","line":2135,"loc":{"start":{"line":2135,"column":24},"end":{"line":2135,"column":46}}},"311":{"name":"(anonymous_311)","line":2140,"loc":{"start":{"line":2140,"column":24},"end":{"line":2140,"column":39}}},"312":{"name":"(anonymous_312)","line":2149,"loc":{"start":{"line":2149,"column":34},"end":{"line":2149,"column":67}}},"313":{"name":"(anonymous_313)","line":2150,"loc":{"start":{"line":2150,"column":46},"end":{"line":2150,"column":64}}},"314":{"name":"(anonymous_314)","line":2157,"loc":{"start":{"line":2157,"column":27},"end":{"line":2157,"column":63}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":2166,"column":3}},"2":{"start":{"line":16,"column":2},"end":{"line":18,"column":54}},"3":{"start":{"line":17,"column":4},"end":{"line":18,"column":54}},"4":{"start":{"line":19,"column":2},"end":{"line":20,"column":122}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":122}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":86}},"7":{"start":{"line":25,"column":2},"end":{"line":28,"column":4}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":73}},"9":{"start":{"line":26,"column":62},"end":{"line":26,"column":73}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":43}},"11":{"start":{"line":34,"column":2},"end":{"line":50,"column":5}},"12":{"start":{"line":37,"column":26},"end":{"line":37,"column":39}},"13":{"start":{"line":39,"column":26},"end":{"line":39,"column":39}},"14":{"start":{"line":40,"column":26},"end":{"line":40,"column":38}},"15":{"start":{"line":49,"column":27},"end":{"line":49,"column":38}},"16":{"start":{"line":52,"column":2},"end":{"line":56,"column":3}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":35}},"18":{"start":{"line":54,"column":4},"end":{"line":54,"column":63}},"19":{"start":{"line":54,"column":15},"end":{"line":54,"column":63}},"20":{"start":{"line":54,"column":39},"end":{"line":54,"column":63}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":15}},"22":{"start":{"line":60,"column":2},"end":{"line":63,"column":82}},"23":{"start":{"line":65,"column":2},"end":{"line":69,"column":4}},"24":{"start":{"line":66,"column":4},"end":{"line":66,"column":20}},"25":{"start":{"line":67,"column":4},"end":{"line":67,"column":24}},"26":{"start":{"line":68,"column":4},"end":{"line":68,"column":23}},"27":{"start":{"line":70,"column":2},"end":{"line":221,"column":5}},"28":{"start":{"line":72,"column":6},"end":{"line":72,"column":36}},"29":{"start":{"line":73,"column":6},"end":{"line":79,"column":7}},"30":{"start":{"line":74,"column":8},"end":{"line":74,"column":32}},"31":{"start":{"line":75,"column":8},"end":{"line":75,"column":68}},"32":{"start":{"line":75,"column":61},"end":{"line":75,"column":68}},"33":{"start":{"line":76,"column":8},"end":{"line":76,"column":30}},"34":{"start":{"line":77,"column":13},"end":{"line":79,"column":7}},"35":{"start":{"line":78,"column":8},"end":{"line":78,"column":15}},"36":{"start":{"line":81,"column":6},"end":{"line":81,"column":35}},"37":{"start":{"line":82,"column":6},"end":{"line":82,"column":28}},"38":{"start":{"line":83,"column":6},"end":{"line":83,"column":33}},"39":{"start":{"line":84,"column":6},"end":{"line":86,"column":9}},"40":{"start":{"line":84,"column":19},"end":{"line":86,"column":9}},"41":{"start":{"line":85,"column":8},"end":{"line":85,"column":79}},"42":{"start":{"line":85,"column":49},"end":{"line":85,"column":79}},"43":{"start":{"line":90,"column":6},"end":{"line":90,"column":105}},"44":{"start":{"line":90,"column":98},"end":{"line":90,"column":105}},"45":{"start":{"line":91,"column":6},"end":{"line":91,"column":78}},"46":{"start":{"line":91,"column":42},"end":{"line":91,"column":78}},"47":{"start":{"line":92,"column":6},"end":{"line":92,"column":57}},"48":{"start":{"line":93,"column":6},"end":{"line":93,"column":29}},"49":{"start":{"line":94,"column":6},"end":{"line":96,"column":9}},"50":{"start":{"line":94,"column":24},"end":{"line":96,"column":9}},"51":{"start":{"line":95,"column":8},"end":{"line":95,"column":77}},"52":{"start":{"line":95,"column":47},"end":{"line":95,"column":77}},"53":{"start":{"line":100,"column":6},"end":{"line":100,"column":42}},"54":{"start":{"line":100,"column":29},"end":{"line":100,"column":42}},"55":{"start":{"line":101,"column":6},"end":{"line":101,"column":75}},"56":{"start":{"line":102,"column":6},"end":{"line":105,"column":7}},"57":{"start":{"line":103,"column":8},"end":{"line":103,"column":44}},"58":{"start":{"line":104,"column":8},"end":{"line":104,"column":49}},"59":{"start":{"line":106,"column":6},"end":{"line":106,"column":19}},"60":{"start":{"line":110,"column":6},"end":{"line":110,"column":41}},"61":{"start":{"line":114,"column":6},"end":{"line":114,"column":43}},"62":{"start":{"line":116,"column":26},"end":{"line":116,"column":57}},"63":{"start":{"line":118,"column":6},"end":{"line":119,"column":62}},"64":{"start":{"line":119,"column":8},"end":{"line":119,"column":62}},"65":{"start":{"line":119,"column":41},"end":{"line":119,"column":62}},"66":{"start":{"line":122,"column":6},"end":{"line":122,"column":22}},"67":{"start":{"line":123,"column":6},"end":{"line":128,"column":7}},"68":{"start":{"line":124,"column":8},"end":{"line":124,"column":33}},"69":{"start":{"line":125,"column":8},"end":{"line":125,"column":45}},"70":{"start":{"line":125,"column":36},"end":{"line":125,"column":45}},"71":{"start":{"line":126,"column":8},"end":{"line":126,"column":35}},"72":{"start":{"line":126,"column":23},"end":{"line":126,"column":35}},"73":{"start":{"line":127,"column":8},"end":{"line":127,"column":31}},"74":{"start":{"line":127,"column":19},"end":{"line":127,"column":31}},"75":{"start":{"line":129,"column":6},"end":{"line":129,"column":18}},"76":{"start":{"line":133,"column":6},"end":{"line":134,"column":62}},"77":{"start":{"line":134,"column":8},"end":{"line":134,"column":62}},"78":{"start":{"line":134,"column":42},"end":{"line":134,"column":62}},"79":{"start":{"line":138,"column":6},"end":{"line":138,"column":79}},"80":{"start":{"line":138,"column":54},"end":{"line":138,"column":79}},"81":{"start":{"line":139,"column":6},"end":{"line":139,"column":56}},"82":{"start":{"line":139,"column":35},"end":{"line":139,"column":56}},"83":{"start":{"line":140,"column":6},"end":{"line":140,"column":39}},"84":{"start":{"line":144,"column":6},"end":{"line":144,"column":87}},"85":{"start":{"line":144,"column":34},"end":{"line":144,"column":87}},"86":{"start":{"line":145,"column":6},"end":{"line":145,"column":83}},"87":{"start":{"line":145,"column":34},"end":{"line":145,"column":83}},"88":{"start":{"line":146,"column":6},"end":{"line":146,"column":49}},"89":{"start":{"line":147,"column":6},"end":{"line":147,"column":44}},"90":{"start":{"line":147,"column":33},"end":{"line":147,"column":44}},"91":{"start":{"line":148,"column":6},"end":{"line":148,"column":95}},"92":{"start":{"line":148,"column":43},"end":{"line":148,"column":81}},"93":{"start":{"line":152,"column":6},"end":{"line":152,"column":39}},"94":{"start":{"line":154,"column":6},"end":{"line":154,"column":63}},"95":{"start":{"line":155,"column":6},"end":{"line":158,"column":7}},"96":{"start":{"line":156,"column":8},"end":{"line":156,"column":44}},"97":{"start":{"line":157,"column":8},"end":{"line":157,"column":40}},"98":{"start":{"line":157,"column":23},"end":{"line":157,"column":40}},"99":{"start":{"line":160,"column":6},"end":{"line":168,"column":7}},"100":{"start":{"line":161,"column":8},"end":{"line":161,"column":46}},"101":{"start":{"line":162,"column":8},"end":{"line":162,"column":56}},"102":{"start":{"line":162,"column":26},"end":{"line":162,"column":56}},"103":{"start":{"line":163,"column":13},"end":{"line":168,"column":7}},"104":{"start":{"line":164,"column":8},"end":{"line":167,"column":9}},"105":{"start":{"line":165,"column":10},"end":{"line":165,"column":36}},"106":{"start":{"line":166,"column":10},"end":{"line":166,"column":51}},"107":{"start":{"line":166,"column":30},"end":{"line":166,"column":51}},"108":{"start":{"line":172,"column":6},"end":{"line":172,"column":77}},"109":{"start":{"line":173,"column":6},"end":{"line":173,"column":36}},"110":{"start":{"line":173,"column":20},"end":{"line":173,"column":36}},"111":{"start":{"line":175,"column":6},"end":{"line":175,"column":37}},"112":{"start":{"line":175,"column":25},"end":{"line":175,"column":37}},"113":{"start":{"line":176,"column":6},"end":{"line":179,"column":7}},"114":{"start":{"line":177,"column":8},"end":{"line":177,"column":46}},"115":{"start":{"line":178,"column":8},"end":{"line":178,"column":68}},"116":{"start":{"line":178,"column":38},"end":{"line":178,"column":54}},"117":{"start":{"line":178,"column":55},"end":{"line":178,"column":67}},"118":{"start":{"line":181,"column":6},"end":{"line":181,"column":56}},"119":{"start":{"line":182,"column":6},"end":{"line":188,"column":7}},"120":{"start":{"line":183,"column":8},"end":{"line":183,"column":46}},"121":{"start":{"line":184,"column":8},"end":{"line":187,"column":9}},"122":{"start":{"line":185,"column":10},"end":{"line":185,"column":29}},"123":{"start":{"line":186,"column":10},"end":{"line":186,"column":27}},"124":{"start":{"line":189,"column":6},"end":{"line":189,"column":34}},"125":{"start":{"line":189,"column":22},"end":{"line":189,"column":34}},"126":{"start":{"line":191,"column":6},"end":{"line":191,"column":41}},"127":{"start":{"line":192,"column":6},"end":{"line":202,"column":7}},"128":{"start":{"line":193,"column":8},"end":{"line":193,"column":25}},"129":{"start":{"line":194,"column":8},"end":{"line":199,"column":9}},"130":{"start":{"line":194,"column":16},"end":{"line":199,"column":9}},"131":{"start":{"line":195,"column":10},"end":{"line":195,"column":28}},"132":{"start":{"line":196,"column":10},"end":{"line":196,"column":74}},"133":{"start":{"line":196,"column":34},"end":{"line":196,"column":74}},"134":{"start":{"line":196,"column":58},"end":{"line":196,"column":74}},"135":{"start":{"line":197,"column":10},"end":{"line":197,"column":50}},"136":{"start":{"line":197,"column":27},"end":{"line":197,"column":50}},"137":{"start":{"line":198,"column":10},"end":{"line":198,"column":28}},"138":{"start":{"line":200,"column":8},"end":{"line":200,"column":43}},"139":{"start":{"line":201,"column":8},"end":{"line":201,"column":51}},"140":{"start":{"line":201,"column":20},"end":{"line":201,"column":36}},"141":{"start":{"line":201,"column":37},"end":{"line":201,"column":50}},"142":{"start":{"line":205,"column":27},"end":{"line":205,"column":76}},"143":{"start":{"line":206,"column":31},"end":{"line":206,"column":43}},"144":{"start":{"line":209,"column":6},"end":{"line":210,"column":49}},"145":{"start":{"line":210,"column":8},"end":{"line":210,"column":49}},"146":{"start":{"line":214,"column":6},"end":{"line":217,"column":7}},"147":{"start":{"line":214,"column":24},"end":{"line":217,"column":7}},"148":{"start":{"line":215,"column":8},"end":{"line":215,"column":46}},"149":{"start":{"line":216,"column":8},"end":{"line":216,"column":35}},"150":{"start":{"line":216,"column":18},"end":{"line":216,"column":35}},"151":{"start":{"line":218,"column":6},"end":{"line":218,"column":38}},"152":{"start":{"line":219,"column":6},"end":{"line":219,"column":47}},"153":{"start":{"line":219,"column":19},"end":{"line":219,"column":47}},"154":{"start":{"line":223,"column":2},"end":{"line":227,"column":3}},"155":{"start":{"line":224,"column":4},"end":{"line":224,"column":59}},"156":{"start":{"line":225,"column":4},"end":{"line":225,"column":38}},"157":{"start":{"line":225,"column":26},"end":{"line":225,"column":38}},"158":{"start":{"line":226,"column":4},"end":{"line":226,"column":44}},"159":{"start":{"line":229,"column":2},"end":{"line":258,"column":3}},"160":{"start":{"line":230,"column":4},"end":{"line":230,"column":35}},"161":{"start":{"line":230,"column":26},"end":{"line":230,"column":35}},"162":{"start":{"line":231,"column":4},"end":{"line":231,"column":31}},"163":{"start":{"line":231,"column":22},"end":{"line":231,"column":31}},"164":{"start":{"line":232,"column":4},"end":{"line":232,"column":21}},"165":{"start":{"line":232,"column":12},"end":{"line":232,"column":21}},"166":{"start":{"line":233,"column":4},"end":{"line":233,"column":53}},"167":{"start":{"line":233,"column":40},"end":{"line":233,"column":53}},"168":{"start":{"line":234,"column":4},"end":{"line":257,"column":5}},"169":{"start":{"line":235,"column":6},"end":{"line":235,"column":51}},"170":{"start":{"line":236,"column":6},"end":{"line":236,"column":28}},"171":{"start":{"line":236,"column":19},"end":{"line":236,"column":28}},"172":{"start":{"line":237,"column":6},"end":{"line":237,"column":51}},"173":{"start":{"line":238,"column":6},"end":{"line":238,"column":70}},"174":{"start":{"line":238,"column":61},"end":{"line":238,"column":70}},"175":{"start":{"line":239,"column":11},"end":{"line":257,"column":5}},"176":{"start":{"line":240,"column":6},"end":{"line":240,"column":43}},"177":{"start":{"line":241,"column":6},"end":{"line":245,"column":7}},"178":{"start":{"line":242,"column":8},"end":{"line":242,"column":17}},"179":{"start":{"line":243,"column":8},"end":{"line":244,"column":17}},"180":{"start":{"line":244,"column":10},"end":{"line":244,"column":17}},"181":{"start":{"line":246,"column":6},"end":{"line":246,"column":41}},"182":{"start":{"line":246,"column":32},"end":{"line":246,"column":41}},"183":{"start":{"line":247,"column":6},"end":{"line":247,"column":80}},"184":{"start":{"line":247,"column":67},"end":{"line":247,"column":80}},"185":{"start":{"line":248,"column":6},"end":{"line":248,"column":37}},"186":{"start":{"line":249,"column":11},"end":{"line":257,"column":5}},"187":{"start":{"line":250,"column":6},"end":{"line":253,"column":21}},"188":{"start":{"line":251,"column":42},"end":{"line":251,"column":87}},"189":{"start":{"line":253,"column":8},"end":{"line":253,"column":21}},"190":{"start":{"line":254,"column":6},"end":{"line":254,"column":15}},"191":{"start":{"line":256,"column":6},"end":{"line":256,"column":19}},"192":{"start":{"line":260,"column":2},"end":{"line":274,"column":4}},"193":{"start":{"line":261,"column":4},"end":{"line":261,"column":19}},"194":{"start":{"line":262,"column":4},"end":{"line":272,"column":5}},"195":{"start":{"line":262,"column":11},"end":{"line":272,"column":5}},"196":{"start":{"line":263,"column":6},"end":{"line":263,"column":24}},"197":{"start":{"line":264,"column":6},"end":{"line":270,"column":7}},"198":{"start":{"line":265,"column":8},"end":{"line":265,"column":51}},"199":{"start":{"line":266,"column":8},"end":{"line":269,"column":9}},"200":{"start":{"line":267,"column":10},"end":{"line":267,"column":29}},"201":{"start":{"line":268,"column":10},"end":{"line":268,"column":25}},"202":{"start":{"line":271,"column":6},"end":{"line":271,"column":21}},"203":{"start":{"line":273,"column":4},"end":{"line":273,"column":17}},"204":{"start":{"line":276,"column":2},"end":{"line":307,"column":3}},"205":{"start":{"line":277,"column":4},"end":{"line":277,"column":51}},"206":{"start":{"line":278,"column":4},"end":{"line":287,"column":5}},"207":{"start":{"line":279,"column":6},"end":{"line":279,"column":24}},"208":{"start":{"line":280,"column":6},"end":{"line":286,"column":7}},"209":{"start":{"line":280,"column":29},"end":{"line":280,"column":38}},"210":{"start":{"line":281,"column":11},"end":{"line":286,"column":7}},"211":{"start":{"line":281,"column":33},"end":{"line":281,"column":39}},"212":{"start":{"line":282,"column":11},"end":{"line":286,"column":7}},"213":{"start":{"line":282,"column":34},"end":{"line":282,"column":41}},"214":{"start":{"line":283,"column":11},"end":{"line":286,"column":7}},"215":{"start":{"line":284,"column":8},"end":{"line":284,"column":54}},"216":{"start":{"line":284,"column":42},"end":{"line":284,"column":54}},"217":{"start":{"line":285,"column":8},"end":{"line":285,"column":18}},"218":{"start":{"line":288,"column":4},"end":{"line":288,"column":71}},"219":{"start":{"line":289,"column":4},"end":{"line":289,"column":31}},"220":{"start":{"line":289,"column":19},"end":{"line":289,"column":31}},"221":{"start":{"line":290,"column":4},"end":{"line":290,"column":26}},"222":{"start":{"line":290,"column":14},"end":{"line":290,"column":26}},"223":{"start":{"line":292,"column":4},"end":{"line":292,"column":35}},"224":{"start":{"line":293,"column":4},"end":{"line":305,"column":5}},"225":{"start":{"line":294,"column":6},"end":{"line":294,"column":35}},"226":{"start":{"line":295,"column":6},"end":{"line":303,"column":7}},"227":{"start":{"line":296,"column":8},"end":{"line":296,"column":52}},"228":{"start":{"line":297,"column":13},"end":{"line":303,"column":7}},"229":{"start":{"line":298,"column":8},"end":{"line":298,"column":18}},"230":{"start":{"line":299,"column":8},"end":{"line":299,"column":84}},"231":{"start":{"line":299,"column":49},"end":{"line":299,"column":84}},"232":{"start":{"line":299,"column":76},"end":{"line":299,"column":84}},"233":{"start":{"line":300,"column":8},"end":{"line":300,"column":42}},"234":{"start":{"line":300,"column":34},"end":{"line":300,"column":42}},"235":{"start":{"line":301,"column":13},"end":{"line":303,"column":7}},"236":{"start":{"line":302,"column":8},"end":{"line":302,"column":34}},"237":{"start":{"line":304,"column":6},"end":{"line":304,"column":62}},"238":{"start":{"line":304,"column":31},"end":{"line":304,"column":48}},"239":{"start":{"line":304,"column":49},"end":{"line":304,"column":60}},"240":{"start":{"line":306,"column":4},"end":{"line":306,"column":17}},"241":{"start":{"line":311,"column":2},"end":{"line":319,"column":4}},"242":{"start":{"line":312,"column":4},"end":{"line":315,"column":6}},"243":{"start":{"line":313,"column":6},"end":{"line":313,"column":33}},"244":{"start":{"line":314,"column":6},"end":{"line":314,"column":44}},"245":{"start":{"line":316,"column":4},"end":{"line":316,"column":42}},"246":{"start":{"line":317,"column":4},"end":{"line":317,"column":89}},"247":{"start":{"line":317,"column":27},"end":{"line":317,"column":89}},"248":{"start":{"line":317,"column":58},"end":{"line":317,"column":89}},"249":{"start":{"line":318,"column":4},"end":{"line":318,"column":16}},"250":{"start":{"line":321,"column":2},"end":{"line":334,"column":5}},"251":{"start":{"line":323,"column":6},"end":{"line":323,"column":23}},"252":{"start":{"line":323,"column":24},"end":{"line":323,"column":45}},"253":{"start":{"line":326,"column":6},"end":{"line":327,"column":63}},"254":{"start":{"line":327,"column":8},"end":{"line":327,"column":63}},"255":{"start":{"line":329,"column":27},"end":{"line":329,"column":44}},"256":{"start":{"line":331,"column":6},"end":{"line":332,"column":63}},"257":{"start":{"line":332,"column":8},"end":{"line":332,"column":63}},"258":{"start":{"line":336,"column":2},"end":{"line":347,"column":5}},"259":{"start":{"line":338,"column":6},"end":{"line":338,"column":23}},"260":{"start":{"line":338,"column":24},"end":{"line":338,"column":41}},"261":{"start":{"line":338,"column":42},"end":{"line":338,"column":71}},"262":{"start":{"line":341,"column":6},"end":{"line":341,"column":41}},"263":{"start":{"line":341,"column":34},"end":{"line":341,"column":41}},"264":{"start":{"line":342,"column":6},"end":{"line":342,"column":58}},"265":{"start":{"line":343,"column":6},"end":{"line":343,"column":50}},"266":{"start":{"line":343,"column":24},"end":{"line":343,"column":50}},"267":{"start":{"line":344,"column":6},"end":{"line":344,"column":40}},"268":{"start":{"line":346,"column":27},"end":{"line":346,"column":44}},"269":{"start":{"line":349,"column":2},"end":{"line":355,"column":5}},"270":{"start":{"line":350,"column":29},"end":{"line":350,"column":40}},"271":{"start":{"line":352,"column":6},"end":{"line":352,"column":41}},"272":{"start":{"line":352,"column":34},"end":{"line":352,"column":41}},"273":{"start":{"line":353,"column":6},"end":{"line":353,"column":31}},"274":{"start":{"line":357,"column":2},"end":{"line":362,"column":3}},"275":{"start":{"line":358,"column":4},"end":{"line":358,"column":64}},"276":{"start":{"line":359,"column":4},"end":{"line":359,"column":24}},"277":{"start":{"line":360,"column":4},"end":{"line":360,"column":53}},"278":{"start":{"line":361,"column":4},"end":{"line":361,"column":18}},"279":{"start":{"line":363,"column":2},"end":{"line":395,"column":5}},"280":{"start":{"line":365,"column":6},"end":{"line":365,"column":23}},"281":{"start":{"line":365,"column":24},"end":{"line":365,"column":41}},"282":{"start":{"line":365,"column":42},"end":{"line":365,"column":67}},"283":{"start":{"line":365,"column":68},"end":{"line":365,"column":89}},"284":{"start":{"line":366,"column":6},"end":{"line":366,"column":43}},"285":{"start":{"line":369,"column":6},"end":{"line":369,"column":38}},"286":{"start":{"line":369,"column":31},"end":{"line":369,"column":38}},"287":{"start":{"line":370,"column":6},"end":{"line":373,"column":7}},"288":{"start":{"line":371,"column":8},"end":{"line":371,"column":75}},"289":{"start":{"line":371,"column":32},"end":{"line":371,"column":75}},"290":{"start":{"line":372,"column":8},"end":{"line":372,"column":71}},"291":{"start":{"line":372,"column":26},"end":{"line":372,"column":71}},"292":{"start":{"line":374,"column":6},"end":{"line":375,"column":89}},"293":{"start":{"line":375,"column":8},"end":{"line":375,"column":89}},"294":{"start":{"line":376,"column":6},"end":{"line":376,"column":53}},"295":{"start":{"line":377,"column":6},"end":{"line":378,"column":92}},"296":{"start":{"line":377,"column":19},"end":{"line":378,"column":92}},"297":{"start":{"line":378,"column":8},"end":{"line":378,"column":92}},"298":{"start":{"line":378,"column":77},"end":{"line":378,"column":92}},"299":{"start":{"line":379,"column":6},"end":{"line":384,"column":7}},"300":{"start":{"line":380,"column":8},"end":{"line":380,"column":39}},"301":{"start":{"line":381,"column":8},"end":{"line":381,"column":45}},"302":{"start":{"line":382,"column":8},"end":{"line":382,"column":61}},"303":{"start":{"line":383,"column":8},"end":{"line":383,"column":35}},"304":{"start":{"line":385,"column":6},"end":{"line":385,"column":62}},"305":{"start":{"line":388,"column":6},"end":{"line":388,"column":21}},"306":{"start":{"line":389,"column":6},"end":{"line":389,"column":65}},"307":{"start":{"line":389,"column":49},"end":{"line":389,"column":65}},"308":{"start":{"line":390,"column":6},"end":{"line":390,"column":62}},"309":{"start":{"line":393,"column":6},"end":{"line":393,"column":53}},"310":{"start":{"line":397,"column":2},"end":{"line":408,"column":5}},"311":{"start":{"line":399,"column":6},"end":{"line":399,"column":31}},"312":{"start":{"line":399,"column":32},"end":{"line":399,"column":49}},"313":{"start":{"line":399,"column":50},"end":{"line":399,"column":75}},"314":{"start":{"line":399,"column":76},"end":{"line":399,"column":97}},"315":{"start":{"line":400,"column":6},"end":{"line":400,"column":43}},"316":{"start":{"line":403,"column":6},"end":{"line":403,"column":76}},"317":{"start":{"line":404,"column":6},"end":{"line":404,"column":38}},"318":{"start":{"line":405,"column":6},"end":{"line":405,"column":59}},"319":{"start":{"line":407,"column":27},"end":{"line":407,"column":48}},"320":{"start":{"line":410,"column":2},"end":{"line":419,"column":5}},"321":{"start":{"line":412,"column":6},"end":{"line":412,"column":27}},"322":{"start":{"line":412,"column":28},"end":{"line":412,"column":51}},"323":{"start":{"line":415,"column":6},"end":{"line":415,"column":37}},"324":{"start":{"line":415,"column":30},"end":{"line":415,"column":37}},"325":{"start":{"line":416,"column":6},"end":{"line":416,"column":78}},"326":{"start":{"line":416,"column":58},"end":{"line":416,"column":78}},"327":{"start":{"line":417,"column":6},"end":{"line":417,"column":99}},"328":{"start":{"line":421,"column":2},"end":{"line":434,"column":4}},"329":{"start":{"line":422,"column":4},"end":{"line":422,"column":44}},"330":{"start":{"line":422,"column":24},"end":{"line":422,"column":44}},"331":{"start":{"line":424,"column":4},"end":{"line":424,"column":34}},"332":{"start":{"line":424,"column":15},"end":{"line":424,"column":34}},"333":{"start":{"line":425,"column":4},"end":{"line":425,"column":43}},"334":{"start":{"line":425,"column":24},"end":{"line":425,"column":43}},"335":{"start":{"line":426,"column":4},"end":{"line":429,"column":5}},"336":{"start":{"line":427,"column":6},"end":{"line":427,"column":33}},"337":{"start":{"line":428,"column":6},"end":{"line":428,"column":48}},"338":{"start":{"line":428,"column":28},"end":{"line":428,"column":48}},"339":{"start":{"line":430,"column":4},"end":{"line":430,"column":51}},"340":{"start":{"line":431,"column":4},"end":{"line":431,"column":33}},"341":{"start":{"line":432,"column":4},"end":{"line":432,"column":57}},"342":{"start":{"line":433,"column":4},"end":{"line":433,"column":20}},"343":{"start":{"line":436,"column":2},"end":{"line":448,"column":5}},"344":{"start":{"line":438,"column":6},"end":{"line":438,"column":23}},"345":{"start":{"line":438,"column":24},"end":{"line":438,"column":45}},"346":{"start":{"line":441,"column":6},"end":{"line":441,"column":38}},"347":{"start":{"line":441,"column":31},"end":{"line":441,"column":38}},"348":{"start":{"line":442,"column":6},"end":{"line":442,"column":59}},"349":{"start":{"line":442,"column":52},"end":{"line":442,"column":59}},"350":{"start":{"line":443,"column":6},"end":{"line":446,"column":55}},"351":{"start":{"line":444,"column":8},"end":{"line":444,"column":37}},"352":{"start":{"line":446,"column":8},"end":{"line":446,"column":55}},"353":{"start":{"line":450,"column":2},"end":{"line":462,"column":5}},"354":{"start":{"line":451,"column":30},"end":{"line":451,"column":43}},"355":{"start":{"line":453,"column":6},"end":{"line":460,"column":7}},"356":{"start":{"line":454,"column":8},"end":{"line":454,"column":28}},"357":{"start":{"line":455,"column":8},"end":{"line":455,"column":52}},"358":{"start":{"line":456,"column":8},"end":{"line":456,"column":31}},"359":{"start":{"line":457,"column":8},"end":{"line":459,"column":11}},"360":{"start":{"line":458,"column":10},"end":{"line":458,"column":42}},"361":{"start":{"line":458,"column":21},"end":{"line":458,"column":42}},"362":{"start":{"line":464,"column":2},"end":{"line":475,"column":5}},"363":{"start":{"line":466,"column":6},"end":{"line":466,"column":25}},"364":{"start":{"line":466,"column":26},"end":{"line":466,"column":47}},"365":{"start":{"line":469,"column":6},"end":{"line":472,"column":44}},"366":{"start":{"line":470,"column":8},"end":{"line":470,"column":44}},"367":{"start":{"line":471,"column":11},"end":{"line":472,"column":44}},"368":{"start":{"line":472,"column":8},"end":{"line":472,"column":44}},"369":{"start":{"line":474,"column":27},"end":{"line":474,"column":45}},"370":{"start":{"line":477,"column":2},"end":{"line":483,"column":5}},"371":{"start":{"line":478,"column":34},"end":{"line":478,"column":55}},"372":{"start":{"line":480,"column":6},"end":{"line":480,"column":59}},"373":{"start":{"line":480,"column":28},"end":{"line":480,"column":59}},"374":{"start":{"line":482,"column":31},"end":{"line":482,"column":50}},"375":{"start":{"line":485,"column":2},"end":{"line":491,"column":5}},"376":{"start":{"line":486,"column":37},"end":{"line":486,"column":52}},"377":{"start":{"line":486,"column":53},"end":{"line":486,"column":70}},"378":{"start":{"line":488,"column":6},"end":{"line":489,"column":85}},"379":{"start":{"line":489,"column":8},"end":{"line":489,"column":85}},"380":{"start":{"line":493,"column":2},"end":{"line":499,"column":5}},"381":{"start":{"line":494,"column":31},"end":{"line":494,"column":46}},"382":{"start":{"line":496,"column":6},"end":{"line":497,"column":33}},"383":{"start":{"line":497,"column":8},"end":{"line":497,"column":33}},"384":{"start":{"line":501,"column":2},"end":{"line":511,"column":5}},"385":{"start":{"line":503,"column":6},"end":{"line":503,"column":25}},"386":{"start":{"line":503,"column":26},"end":{"line":503,"column":47}},"387":{"start":{"line":506,"column":6},"end":{"line":506,"column":60}},"388":{"start":{"line":508,"column":31},"end":{"line":508,"column":64}},"389":{"start":{"line":509,"column":27},"end":{"line":509,"column":56}},"390":{"start":{"line":510,"column":27},"end":{"line":510,"column":56}},"391":{"start":{"line":515,"column":2},"end":{"line":515,"column":42}},"392":{"start":{"line":516,"column":2},"end":{"line":523,"column":5}},"393":{"start":{"line":518,"column":32},"end":{"line":518,"column":51}},"394":{"start":{"line":519,"column":31},"end":{"line":519,"column":52}},"395":{"start":{"line":520,"column":26},"end":{"line":520,"column":39}},"396":{"start":{"line":521,"column":27},"end":{"line":521,"column":39}},"397":{"start":{"line":522,"column":26},"end":{"line":522,"column":38}},"398":{"start":{"line":525,"column":2},"end":{"line":525,"column":92}},"399":{"start":{"line":525,"column":52},"end":{"line":525,"column":69}},"400":{"start":{"line":525,"column":70},"end":{"line":525,"column":89}},"401":{"start":{"line":526,"column":2},"end":{"line":533,"column":5}},"402":{"start":{"line":528,"column":27},"end":{"line":528,"column":44}},"403":{"start":{"line":529,"column":29},"end":{"line":529,"column":70}},"404":{"start":{"line":531,"column":6},"end":{"line":531,"column":60}},"405":{"start":{"line":531,"column":22},"end":{"line":531,"column":60}},"406":{"start":{"line":535,"column":2},"end":{"line":539,"column":3}},"407":{"start":{"line":536,"column":4},"end":{"line":536,"column":30}},"408":{"start":{"line":537,"column":4},"end":{"line":538,"column":21}},"409":{"start":{"line":537,"column":30},"end":{"line":537,"column":52}},"410":{"start":{"line":538,"column":9},"end":{"line":538,"column":21}},"411":{"start":{"line":541,"column":2},"end":{"line":551,"column":4}},"412":{"start":{"line":542,"column":4},"end":{"line":542,"column":54}},"413":{"start":{"line":542,"column":21},"end":{"line":542,"column":54}},"414":{"start":{"line":543,"column":4},"end":{"line":543,"column":59}},"415":{"start":{"line":544,"column":4},"end":{"line":547,"column":5}},"416":{"start":{"line":545,"column":6},"end":{"line":545,"column":60}},"417":{"start":{"line":546,"column":6},"end":{"line":546,"column":33}},"418":{"start":{"line":546,"column":17},"end":{"line":546,"column":33}},"419":{"start":{"line":548,"column":4},"end":{"line":548,"column":21}},"420":{"start":{"line":549,"column":4},"end":{"line":549,"column":27}},"421":{"start":{"line":550,"column":4},"end":{"line":550,"column":31}},"422":{"start":{"line":552,"column":2},"end":{"line":685,"column":5}},"423":{"start":{"line":555,"column":6},"end":{"line":555,"column":41}},"424":{"start":{"line":555,"column":28},"end":{"line":555,"column":41}},"425":{"start":{"line":556,"column":6},"end":{"line":556,"column":55}},"426":{"start":{"line":556,"column":38},"end":{"line":556,"column":55}},"427":{"start":{"line":557,"column":6},"end":{"line":557,"column":34}},"428":{"start":{"line":558,"column":6},"end":{"line":564,"column":7}},"429":{"start":{"line":558,"column":35},"end":{"line":564,"column":7}},"430":{"start":{"line":559,"column":8},"end":{"line":559,"column":52}},"431":{"start":{"line":559,"column":32},"end":{"line":559,"column":43}},"432":{"start":{"line":559,"column":44},"end":{"line":559,"column":50}},"433":{"start":{"line":560,"column":8},"end":{"line":563,"column":27}},"434":{"start":{"line":561,"column":10},"end":{"line":561,"column":83}},"435":{"start":{"line":563,"column":10},"end":{"line":563,"column":27}},"436":{"start":{"line":565,"column":6},"end":{"line":565,"column":19}},"437":{"start":{"line":566,"column":6},"end":{"line":566,"column":33}},"438":{"start":{"line":566,"column":15},"end":{"line":566,"column":33}},"439":{"start":{"line":567,"column":6},"end":{"line":567,"column":42}},"440":{"start":{"line":570,"column":6},"end":{"line":570,"column":65}},"441":{"start":{"line":570,"column":27},"end":{"line":570,"column":65}},"442":{"start":{"line":571,"column":6},"end":{"line":571,"column":35}},"443":{"start":{"line":572,"column":6},"end":{"line":573,"column":81}},"444":{"start":{"line":573,"column":8},"end":{"line":573,"column":81}},"445":{"start":{"line":573,"column":59},"end":{"line":573,"column":81}},"446":{"start":{"line":574,"column":6},"end":{"line":574,"column":19}},"447":{"start":{"line":577,"column":6},"end":{"line":577,"column":44}},"448":{"start":{"line":578,"column":6},"end":{"line":581,"column":7}},"449":{"start":{"line":579,"column":8},"end":{"line":579,"column":75}},"450":{"start":{"line":579,"column":45},"end":{"line":579,"column":75}},"451":{"start":{"line":580,"column":8},"end":{"line":580,"column":21}},"452":{"start":{"line":582,"column":6},"end":{"line":582,"column":42}},"453":{"start":{"line":582,"column":29},"end":{"line":582,"column":42}},"454":{"start":{"line":583,"column":6},"end":{"line":583,"column":65}},"455":{"start":{"line":583,"column":27},"end":{"line":583,"column":65}},"456":{"start":{"line":585,"column":6},"end":{"line":585,"column":56}},"457":{"start":{"line":586,"column":6},"end":{"line":593,"column":7}},"458":{"start":{"line":587,"column":8},"end":{"line":587,"column":37}},"459":{"start":{"line":588,"column":8},"end":{"line":588,"column":42}},"460":{"start":{"line":590,"column":8},"end":{"line":590,"column":22}},"461":{"start":{"line":591,"column":8},"end":{"line":591,"column":29}},"462":{"start":{"line":592,"column":8},"end":{"line":592,"column":31}},"463":{"start":{"line":595,"column":6},"end":{"line":595,"column":28}},"464":{"start":{"line":596,"column":6},"end":{"line":596,"column":33}},"465":{"start":{"line":597,"column":6},"end":{"line":597,"column":31}},"466":{"start":{"line":598,"column":6},"end":{"line":598,"column":41}},"467":{"start":{"line":599,"column":6},"end":{"line":599,"column":16}},"468":{"start":{"line":602,"column":6},"end":{"line":602,"column":89}},"469":{"start":{"line":603,"column":6},"end":{"line":603,"column":30}},"470":{"start":{"line":603,"column":17},"end":{"line":603,"column":30}},"471":{"start":{"line":604,"column":6},"end":{"line":604,"column":42}},"472":{"start":{"line":604,"column":29},"end":{"line":604,"column":42}},"473":{"start":{"line":605,"column":6},"end":{"line":605,"column":65}},"474":{"start":{"line":605,"column":27},"end":{"line":605,"column":65}},"475":{"start":{"line":606,"column":6},"end":{"line":606,"column":56}},"476":{"start":{"line":607,"column":6},"end":{"line":607,"column":27}},"477":{"start":{"line":608,"column":6},"end":{"line":608,"column":29}},"478":{"start":{"line":609,"column":6},"end":{"line":609,"column":16}},"479":{"start":{"line":611,"column":40},"end":{"line":611,"column":53}},"480":{"start":{"line":613,"column":6},"end":{"line":617,"column":7}},"481":{"start":{"line":614,"column":8},"end":{"line":614,"column":42}},"482":{"start":{"line":616,"column":8},"end":{"line":616,"column":63}},"483":{"start":{"line":616,"column":38},"end":{"line":616,"column":63}},"484":{"start":{"line":619,"column":6},"end":{"line":622,"column":7}},"485":{"start":{"line":619,"column":26},"end":{"line":622,"column":7}},"486":{"start":{"line":620,"column":8},"end":{"line":620,"column":34}},"487":{"start":{"line":621,"column":8},"end":{"line":621,"column":78}},"488":{"start":{"line":625,"column":6},"end":{"line":625,"column":59}},"489":{"start":{"line":626,"column":6},"end":{"line":630,"column":7}},"490":{"start":{"line":627,"column":8},"end":{"line":627,"column":37}},"491":{"start":{"line":628,"column":8},"end":{"line":628,"column":42}},"492":{"start":{"line":629,"column":8},"end":{"line":629,"column":50}},"493":{"start":{"line":631,"column":6},"end":{"line":631,"column":43}},"494":{"start":{"line":634,"column":6},"end":{"line":635,"column":41}},"495":{"start":{"line":635,"column":8},"end":{"line":635,"column":41}},"496":{"start":{"line":636,"column":6},"end":{"line":636,"column":24}},"497":{"start":{"line":637,"column":6},"end":{"line":638,"column":36}},"498":{"start":{"line":638,"column":8},"end":{"line":638,"column":36}},"499":{"start":{"line":641,"column":6},"end":{"line":644,"column":7}},"500":{"start":{"line":642,"column":8},"end":{"line":642,"column":53}},"501":{"start":{"line":642,"column":24},"end":{"line":642,"column":53}},"502":{"start":{"line":643,"column":8},"end":{"line":643,"column":46}},"503":{"start":{"line":645,"column":6},"end":{"line":645,"column":29}},"504":{"start":{"line":648,"column":6},"end":{"line":648,"column":32}},"505":{"start":{"line":649,"column":6},"end":{"line":649,"column":30}},"506":{"start":{"line":650,"column":6},"end":{"line":650,"column":41}},"507":{"start":{"line":651,"column":6},"end":{"line":651,"column":26}},"508":{"start":{"line":654,"column":6},"end":{"line":657,"column":7}},"509":{"start":{"line":655,"column":8},"end":{"line":655,"column":28}},"510":{"start":{"line":656,"column":8},"end":{"line":656,"column":53}},"511":{"start":{"line":656,"column":24},"end":{"line":656,"column":53}},"512":{"start":{"line":658,"column":6},"end":{"line":658,"column":29}},"513":{"start":{"line":659,"column":6},"end":{"line":664,"column":7}},"514":{"start":{"line":659,"column":41},"end":{"line":664,"column":7}},"515":{"start":{"line":660,"column":8},"end":{"line":663,"column":44}},"516":{"start":{"line":661,"column":10},"end":{"line":661,"column":56}},"517":{"start":{"line":663,"column":10},"end":{"line":663,"column":44}},"518":{"start":{"line":667,"column":6},"end":{"line":670,"column":7}},"519":{"start":{"line":668,"column":8},"end":{"line":668,"column":47}},"520":{"start":{"line":668,"column":40},"end":{"line":668,"column":47}},"521":{"start":{"line":669,"column":8},"end":{"line":669,"column":31}},"522":{"start":{"line":671,"column":6},"end":{"line":671,"column":73}},"523":{"start":{"line":671,"column":66},"end":{"line":671,"column":73}},"524":{"start":{"line":672,"column":6},"end":{"line":672,"column":40}},"525":{"start":{"line":675,"column":6},"end":{"line":676,"column":81}},"526":{"start":{"line":676,"column":8},"end":{"line":676,"column":81}},"527":{"start":{"line":676,"column":44},"end":{"line":676,"column":72}},"528":{"start":{"line":676,"column":73},"end":{"line":676,"column":79}},"529":{"start":{"line":677,"column":6},"end":{"line":677,"column":40}},"530":{"start":{"line":680,"column":6},"end":{"line":681,"column":29}},"531":{"start":{"line":680,"column":35},"end":{"line":681,"column":29}},"532":{"start":{"line":681,"column":8},"end":{"line":681,"column":29}},"533":{"start":{"line":682,"column":6},"end":{"line":682,"column":64}},"534":{"start":{"line":682,"column":22},"end":{"line":682,"column":64}},"535":{"start":{"line":684,"column":29},"end":{"line":684,"column":41}},"536":{"start":{"line":687,"column":2},"end":{"line":687,"column":59}},"537":{"start":{"line":688,"column":2},"end":{"line":690,"column":3}},"538":{"start":{"line":689,"column":4},"end":{"line":689,"column":90}},"539":{"start":{"line":692,"column":2},"end":{"line":699,"column":4}},"540":{"start":{"line":693,"column":4},"end":{"line":693,"column":45}},"541":{"start":{"line":694,"column":4},"end":{"line":694,"column":21}},"542":{"start":{"line":695,"column":4},"end":{"line":695,"column":21}},"543":{"start":{"line":696,"column":4},"end":{"line":696,"column":29}},"544":{"start":{"line":697,"column":4},"end":{"line":697,"column":25}},"545":{"start":{"line":698,"column":4},"end":{"line":698,"column":30}},"546":{"start":{"line":700,"column":2},"end":{"line":742,"column":5}},"547":{"start":{"line":703,"column":6},"end":{"line":703,"column":41}},"548":{"start":{"line":703,"column":28},"end":{"line":703,"column":41}},"549":{"start":{"line":704,"column":6},"end":{"line":704,"column":48}},"550":{"start":{"line":705,"column":6},"end":{"line":710,"column":7}},"551":{"start":{"line":706,"column":8},"end":{"line":706,"column":27}},"552":{"start":{"line":706,"column":15},"end":{"line":706,"column":27}},"553":{"start":{"line":707,"column":8},"end":{"line":707,"column":36}},"554":{"start":{"line":708,"column":8},"end":{"line":708,"column":52}},"555":{"start":{"line":708,"column":33},"end":{"line":708,"column":52}},"556":{"start":{"line":709,"column":8},"end":{"line":709,"column":80}},"557":{"start":{"line":711,"column":6},"end":{"line":711,"column":17}},"558":{"start":{"line":712,"column":6},"end":{"line":713,"column":90}},"559":{"start":{"line":713,"column":8},"end":{"line":713,"column":90}},"560":{"start":{"line":714,"column":6},"end":{"line":714,"column":17}},"561":{"start":{"line":717,"column":6},"end":{"line":726,"column":7}},"562":{"start":{"line":718,"column":8},"end":{"line":718,"column":46}},"563":{"start":{"line":719,"column":8},"end":{"line":724,"column":9}},"564":{"start":{"line":720,"column":10},"end":{"line":720,"column":37}},"565":{"start":{"line":721,"column":10},"end":{"line":721,"column":75}},"566":{"start":{"line":722,"column":10},"end":{"line":722,"column":37}},"567":{"start":{"line":723,"column":10},"end":{"line":723,"column":48}},"568":{"start":{"line":725,"column":8},"end":{"line":725,"column":21}},"569":{"start":{"line":727,"column":6},"end":{"line":727,"column":52}},"570":{"start":{"line":730,"column":6},"end":{"line":737,"column":7}},"571":{"start":{"line":731,"column":8},"end":{"line":731,"column":46}},"572":{"start":{"line":732,"column":8},"end":{"line":732,"column":32}},"573":{"start":{"line":732,"column":19},"end":{"line":732,"column":32}},"574":{"start":{"line":733,"column":8},"end":{"line":733,"column":67}},"575":{"start":{"line":734,"column":8},"end":{"line":734,"column":35}},"576":{"start":{"line":735,"column":8},"end":{"line":735,"column":47}},"577":{"start":{"line":736,"column":8},"end":{"line":736,"column":21}},"578":{"start":{"line":738,"column":6},"end":{"line":738,"column":64}},"579":{"start":{"line":740,"column":34},"end":{"line":740,"column":46}},"580":{"start":{"line":741,"column":28},"end":{"line":741,"column":104}},"581":{"start":{"line":744,"column":2},"end":{"line":758,"column":4}},"582":{"start":{"line":745,"column":4},"end":{"line":745,"column":35}},"583":{"start":{"line":746,"column":4},"end":{"line":746,"column":37}},"584":{"start":{"line":747,"column":4},"end":{"line":757,"column":5}},"585":{"start":{"line":748,"column":6},"end":{"line":748,"column":37}},"586":{"start":{"line":749,"column":6},"end":{"line":753,"column":7}},"587":{"start":{"line":750,"column":8},"end":{"line":750,"column":42}},"588":{"start":{"line":751,"column":8},"end":{"line":751,"column":38}},"589":{"start":{"line":752,"column":8},"end":{"line":752,"column":31}},"590":{"start":{"line":754,"column":11},"end":{"line":757,"column":5}},"591":{"start":{"line":755,"column":6},"end":{"line":755,"column":20}},"592":{"start":{"line":756,"column":6},"end":{"line":756,"column":36}},"593":{"start":{"line":759,"column":2},"end":{"line":787,"column":5}},"594":{"start":{"line":762,"column":6},"end":{"line":762,"column":40}},"595":{"start":{"line":762,"column":28},"end":{"line":762,"column":40}},"596":{"start":{"line":763,"column":6},"end":{"line":763,"column":38}},"597":{"start":{"line":763,"column":26},"end":{"line":763,"column":38}},"598":{"start":{"line":764,"column":6},"end":{"line":764,"column":22}},"599":{"start":{"line":765,"column":6},"end":{"line":780,"column":7}},"600":{"start":{"line":766,"column":8},"end":{"line":766,"column":19}},"601":{"start":{"line":767,"column":8},"end":{"line":776,"column":9}},"602":{"start":{"line":768,"column":10},"end":{"line":768,"column":74}},"603":{"start":{"line":769,"column":10},"end":{"line":774,"column":26}},"604":{"start":{"line":770,"column":12},"end":{"line":770,"column":26}},"605":{"start":{"line":771,"column":15},"end":{"line":774,"column":26}},"606":{"start":{"line":772,"column":12},"end":{"line":772,"column":27}},"607":{"start":{"line":774,"column":12},"end":{"line":774,"column":26}},"608":{"start":{"line":775,"column":10},"end":{"line":775,"column":49}},"609":{"start":{"line":777,"column":8},"end":{"line":777,"column":38}},"610":{"start":{"line":777,"column":21},"end":{"line":777,"column":38}},"611":{"start":{"line":779,"column":8},"end":{"line":779,"column":67}},"612":{"start":{"line":781,"column":6},"end":{"line":781,"column":32}},"613":{"start":{"line":784,"column":6},"end":{"line":785,"column":23}},"614":{"start":{"line":784,"column":30},"end":{"line":784,"column":41}},"615":{"start":{"line":785,"column":11},"end":{"line":785,"column":23}},"616":{"start":{"line":789,"column":2},"end":{"line":793,"column":3}},"617":{"start":{"line":790,"column":4},"end":{"line":790,"column":47}},"618":{"start":{"line":791,"column":4},"end":{"line":791,"column":23}},"619":{"start":{"line":792,"column":4},"end":{"line":792,"column":32}},"620":{"start":{"line":794,"column":2},"end":{"line":798,"column":4}},"621":{"start":{"line":796,"column":29},"end":{"line":796,"column":55}},"622":{"start":{"line":797,"column":32},"end":{"line":797,"column":44}},"623":{"start":{"line":800,"column":2},"end":{"line":808,"column":3}},"624":{"start":{"line":801,"column":4},"end":{"line":801,"column":50}},"625":{"start":{"line":802,"column":4},"end":{"line":802,"column":37}},"626":{"start":{"line":803,"column":4},"end":{"line":806,"column":5}},"627":{"start":{"line":804,"column":6},"end":{"line":804,"column":72}},"628":{"start":{"line":804,"column":43},"end":{"line":804,"column":72}},"629":{"start":{"line":805,"column":6},"end":{"line":805,"column":18}},"630":{"start":{"line":807,"column":4},"end":{"line":807,"column":65}},"631":{"start":{"line":812,"column":2},"end":{"line":815,"column":3}},"632":{"start":{"line":813,"column":4},"end":{"line":813,"column":55}},"633":{"start":{"line":814,"column":4},"end":{"line":814,"column":19}},"634":{"start":{"line":817,"column":2},"end":{"line":819,"column":3}},"635":{"start":{"line":818,"column":4},"end":{"line":818,"column":26}},"636":{"start":{"line":823,"column":2},"end":{"line":857,"column":4}},"637":{"start":{"line":824,"column":4},"end":{"line":824,"column":25}},"638":{"start":{"line":825,"column":4},"end":{"line":825,"column":37}},"639":{"start":{"line":826,"column":4},"end":{"line":826,"column":38}},"640":{"start":{"line":827,"column":4},"end":{"line":827,"column":22}},"641":{"start":{"line":828,"column":4},"end":{"line":828,"column":34}},"642":{"start":{"line":829,"column":4},"end":{"line":829,"column":37}},"643":{"start":{"line":830,"column":4},"end":{"line":830,"column":43}},"644":{"start":{"line":831,"column":4},"end":{"line":831,"column":22}},"645":{"start":{"line":832,"column":4},"end":{"line":832,"column":25}},"646":{"start":{"line":833,"column":4},"end":{"line":833,"column":34}},"647":{"start":{"line":834,"column":4},"end":{"line":834,"column":45}},"648":{"start":{"line":835,"column":4},"end":{"line":835,"column":38}},"649":{"start":{"line":837,"column":4},"end":{"line":856,"column":7}},"650":{"start":{"line":838,"column":6},"end":{"line":838,"column":59}},"651":{"start":{"line":839,"column":6},"end":{"line":839,"column":32}},"652":{"start":{"line":840,"column":6},"end":{"line":840,"column":33}},"653":{"start":{"line":841,"column":6},"end":{"line":841,"column":57}},"654":{"start":{"line":842,"column":6},"end":{"line":842,"column":78}},"655":{"start":{"line":843,"column":6},"end":{"line":843,"column":50}},"656":{"start":{"line":844,"column":6},"end":{"line":844,"column":59}},"657":{"start":{"line":845,"column":6},"end":{"line":845,"column":59}},"658":{"start":{"line":846,"column":6},"end":{"line":846,"column":59}},"659":{"start":{"line":847,"column":6},"end":{"line":847,"column":61}},"660":{"start":{"line":848,"column":6},"end":{"line":848,"column":59}},"661":{"start":{"line":849,"column":6},"end":{"line":849,"column":52}},"662":{"start":{"line":850,"column":6},"end":{"line":850,"column":52}},"663":{"start":{"line":851,"column":6},"end":{"line":851,"column":52}},"664":{"start":{"line":852,"column":6},"end":{"line":852,"column":26}},"665":{"start":{"line":854,"column":6},"end":{"line":855,"column":26}},"666":{"start":{"line":854,"column":16},"end":{"line":855,"column":26}},"667":{"start":{"line":855,"column":8},"end":{"line":855,"column":26}},"668":{"start":{"line":859,"column":2},"end":{"line":861,"column":4}},"669":{"start":{"line":860,"column":4},"end":{"line":860,"column":86}},"670":{"start":{"line":863,"column":2},"end":{"line":863,"column":16}},"671":{"start":{"line":864,"column":2},"end":{"line":864,"column":41}},"672":{"start":{"line":864,"column":28},"end":{"line":864,"column":38}},"673":{"start":{"line":866,"column":2},"end":{"line":871,"column":4}},"674":{"start":{"line":867,"column":4},"end":{"line":867,"column":17}},"675":{"start":{"line":868,"column":4},"end":{"line":868,"column":17}},"676":{"start":{"line":869,"column":4},"end":{"line":870,"column":25}},"677":{"start":{"line":869,"column":10},"end":{"line":869,"column":21}},"678":{"start":{"line":870,"column":14},"end":{"line":870,"column":23}},"679":{"start":{"line":873,"column":2},"end":{"line":876,"column":4}},"680":{"start":{"line":874,"column":4},"end":{"line":874,"column":31}},"681":{"start":{"line":875,"column":4},"end":{"line":875,"column":37}},"682":{"start":{"line":877,"column":2},"end":{"line":877,"column":62}},"683":{"start":{"line":878,"column":2},"end":{"line":878,"column":53}},"684":{"start":{"line":880,"column":2},"end":{"line":880,"column":14}},"685":{"start":{"line":881,"column":2},"end":{"line":888,"column":4}},"686":{"start":{"line":882,"column":4},"end":{"line":882,"column":29}},"687":{"start":{"line":883,"column":4},"end":{"line":883,"column":25}},"688":{"start":{"line":884,"column":4},"end":{"line":884,"column":43}},"689":{"start":{"line":884,"column":32},"end":{"line":884,"column":43}},"690":{"start":{"line":885,"column":4},"end":{"line":885,"column":18}},"691":{"start":{"line":886,"column":4},"end":{"line":887,"column":33}},"692":{"start":{"line":886,"column":10},"end":{"line":886,"column":21}},"693":{"start":{"line":887,"column":14},"end":{"line":887,"column":31}},"694":{"start":{"line":890,"column":2},"end":{"line":892,"column":4}},"695":{"start":{"line":891,"column":4},"end":{"line":891,"column":64}},"696":{"start":{"line":891,"column":40},"end":{"line":891,"column":64}},"697":{"start":{"line":894,"column":2},"end":{"line":894,"column":57}},"698":{"start":{"line":895,"column":2},"end":{"line":912,"column":3}},"699":{"start":{"line":896,"column":4},"end":{"line":896,"column":43}},"700":{"start":{"line":896,"column":21},"end":{"line":896,"column":43}},"701":{"start":{"line":898,"column":4},"end":{"line":898,"column":29}},"702":{"start":{"line":899,"column":4},"end":{"line":902,"column":6}},"703":{"start":{"line":900,"column":6},"end":{"line":901,"column":47}},"704":{"start":{"line":901,"column":8},"end":{"line":901,"column":47}},"705":{"start":{"line":903,"column":4},"end":{"line":903,"column":21}},"706":{"start":{"line":904,"column":4},"end":{"line":909,"column":5}},"707":{"start":{"line":905,"column":6},"end":{"line":906,"column":37}},"708":{"start":{"line":906,"column":8},"end":{"line":906,"column":37}},"709":{"start":{"line":907,"column":6},"end":{"line":907,"column":30}},"710":{"start":{"line":908,"column":6},"end":{"line":908,"column":48}},"711":{"start":{"line":910,"column":4},"end":{"line":910,"column":23}},"712":{"start":{"line":911,"column":4},"end":{"line":911,"column":15}},"713":{"start":{"line":914,"column":2},"end":{"line":920,"column":3}},"714":{"start":{"line":915,"column":4},"end":{"line":915,"column":55}},"715":{"start":{"line":916,"column":4},"end":{"line":916,"column":27}},"716":{"start":{"line":916,"column":28},"end":{"line":916,"column":45}},"717":{"start":{"line":917,"column":4},"end":{"line":917,"column":20}},"718":{"start":{"line":918,"column":4},"end":{"line":918,"column":30}},"719":{"start":{"line":918,"column":31},"end":{"line":918,"column":51}},"720":{"start":{"line":919,"column":4},"end":{"line":919,"column":17}},"721":{"start":{"line":924,"column":2},"end":{"line":930,"column":4}},"722":{"start":{"line":925,"column":4},"end":{"line":925,"column":33}},"723":{"start":{"line":926,"column":4},"end":{"line":926,"column":21}},"724":{"start":{"line":927,"column":4},"end":{"line":927,"column":32}},"725":{"start":{"line":928,"column":4},"end":{"line":928,"column":28}},"726":{"start":{"line":929,"column":4},"end":{"line":929,"column":28}},"727":{"start":{"line":931,"column":2},"end":{"line":940,"column":5}},"728":{"start":{"line":934,"column":6},"end":{"line":938,"column":7}},"729":{"start":{"line":935,"column":8},"end":{"line":935,"column":34}},"730":{"start":{"line":936,"column":8},"end":{"line":936,"column":32}},"731":{"start":{"line":936,"column":19},"end":{"line":936,"column":32}},"732":{"start":{"line":937,"column":8},"end":{"line":937,"column":56}},"733":{"start":{"line":937,"column":21},"end":{"line":937,"column":56}},"734":{"start":{"line":942,"column":2},"end":{"line":946,"column":3}},"735":{"start":{"line":943,"column":4},"end":{"line":944,"column":24}},"736":{"start":{"line":944,"column":6},"end":{"line":944,"column":24}},"737":{"start":{"line":945,"column":4},"end":{"line":945,"column":16}},"738":{"start":{"line":951,"column":2},"end":{"line":954,"column":3}},"739":{"start":{"line":952,"column":4},"end":{"line":952,"column":40}},"740":{"start":{"line":953,"column":4},"end":{"line":953,"column":69}},"741":{"start":{"line":953,"column":12},"end":{"line":953,"column":69}},"742":{"start":{"line":956,"column":2},"end":{"line":956,"column":22}},"743":{"start":{"line":957,"column":2},"end":{"line":965,"column":3}},"744":{"start":{"line":958,"column":4},"end":{"line":964,"column":5}},"745":{"start":{"line":959,"column":6},"end":{"line":959,"column":86}},"746":{"start":{"line":959,"column":50},"end":{"line":959,"column":81}},"747":{"start":{"line":959,"column":64},"end":{"line":959,"column":81}},"748":{"start":{"line":960,"column":6},"end":{"line":960,"column":18}},"749":{"start":{"line":962,"column":6},"end":{"line":962,"column":40}},"750":{"start":{"line":962,"column":27},"end":{"line":962,"column":40}},"751":{"start":{"line":963,"column":6},"end":{"line":963,"column":14}},"752":{"start":{"line":967,"column":2},"end":{"line":976,"column":3}},"753":{"start":{"line":968,"column":4},"end":{"line":968,"column":36}},"754":{"start":{"line":969,"column":4},"end":{"line":975,"column":5}},"755":{"start":{"line":970,"column":6},"end":{"line":970,"column":75}},"756":{"start":{"line":971,"column":6},"end":{"line":971,"column":40}},"757":{"start":{"line":972,"column":6},"end":{"line":972,"column":18}},"758":{"start":{"line":974,"column":6},"end":{"line":974,"column":33}},"759":{"start":{"line":978,"column":2},"end":{"line":1010,"column":3}},"760":{"start":{"line":980,"column":4},"end":{"line":980,"column":67}},"761":{"start":{"line":980,"column":45},"end":{"line":980,"column":67}},"762":{"start":{"line":981,"column":4},"end":{"line":981,"column":23}},"763":{"start":{"line":982,"column":4},"end":{"line":1009,"column":6}},"764":{"start":{"line":984,"column":6},"end":{"line":1008,"column":9}},"765":{"start":{"line":985,"column":8},"end":{"line":985,"column":37}},"766":{"start":{"line":986,"column":8},"end":{"line":986,"column":33}},"767":{"start":{"line":987,"column":8},"end":{"line":987,"column":30}},"768":{"start":{"line":988,"column":8},"end":{"line":988,"column":64}},"769":{"start":{"line":989,"column":8},"end":{"line":993,"column":9}},"770":{"start":{"line":990,"column":10},"end":{"line":990,"column":70}},"771":{"start":{"line":991,"column":10},"end":{"line":992,"column":37}},"772":{"start":{"line":991,"column":48},"end":{"line":992,"column":37}},"773":{"start":{"line":992,"column":12},"end":{"line":992,"column":37}},"774":{"start":{"line":994,"column":8},"end":{"line":994,"column":107}},"775":{"start":{"line":995,"column":8},"end":{"line":995,"column":65}},"776":{"start":{"line":995,"column":46},"end":{"line":995,"column":65}},"777":{"start":{"line":996,"column":8},"end":{"line":996,"column":86}},"778":{"start":{"line":997,"column":8},"end":{"line":997,"column":52}},"779":{"start":{"line":998,"column":8},"end":{"line":1002,"column":9}},"780":{"start":{"line":999,"column":10},"end":{"line":999,"column":61}},"781":{"start":{"line":1000,"column":10},"end":{"line":1000,"column":66}},"782":{"start":{"line":1001,"column":10},"end":{"line":1001,"column":74}},"783":{"start":{"line":1001,"column":48},"end":{"line":1001,"column":74}},"784":{"start":{"line":1003,"column":8},"end":{"line":1003,"column":31}},"785":{"start":{"line":1004,"column":8},"end":{"line":1004,"column":66}},"786":{"start":{"line":1005,"column":8},"end":{"line":1005,"column":65}},"787":{"start":{"line":1006,"column":8},"end":{"line":1006,"column":33}},"788":{"start":{"line":1007,"column":8},"end":{"line":1007,"column":39}},"789":{"start":{"line":1012,"column":2},"end":{"line":1049,"column":3}},"790":{"start":{"line":1013,"column":4},"end":{"line":1013,"column":27}},"791":{"start":{"line":1014,"column":4},"end":{"line":1014,"column":50}},"792":{"start":{"line":1014,"column":43},"end":{"line":1014,"column":50}},"793":{"start":{"line":1015,"column":4},"end":{"line":1015,"column":29}},"794":{"start":{"line":1016,"column":4},"end":{"line":1017,"column":52}},"795":{"start":{"line":1017,"column":6},"end":{"line":1017,"column":52}},"796":{"start":{"line":1019,"column":4},"end":{"line":1035,"column":5}},"797":{"start":{"line":1020,"column":6},"end":{"line":1020,"column":45}},"798":{"start":{"line":1020,"column":38},"end":{"line":1020,"column":45}},"799":{"start":{"line":1021,"column":6},"end":{"line":1034,"column":7}},"800":{"start":{"line":1022,"column":8},"end":{"line":1022,"column":50}},"801":{"start":{"line":1023,"column":8},"end":{"line":1023,"column":28}},"802":{"start":{"line":1023,"column":19},"end":{"line":1023,"column":28}},"803":{"start":{"line":1024,"column":8},"end":{"line":1024,"column":33}},"804":{"start":{"line":1025,"column":8},"end":{"line":1030,"column":24}},"805":{"start":{"line":1026,"column":10},"end":{"line":1026,"column":22}},"806":{"start":{"line":1027,"column":15},"end":{"line":1030,"column":24}},"807":{"start":{"line":1028,"column":10},"end":{"line":1028,"column":34}},"808":{"start":{"line":1029,"column":10},"end":{"line":1029,"column":29}},"809":{"start":{"line":1030,"column":15},"end":{"line":1030,"column":24}},"810":{"start":{"line":1031,"column":8},"end":{"line":1031,"column":43}},"811":{"start":{"line":1031,"column":28},"end":{"line":1031,"column":43}},"812":{"start":{"line":1032,"column":8},"end":{"line":1032,"column":54}},"813":{"start":{"line":1033,"column":8},"end":{"line":1033,"column":32}},"814":{"start":{"line":1033,"column":19},"end":{"line":1033,"column":32}},"815":{"start":{"line":1037,"column":4},"end":{"line":1037,"column":49}},"816":{"start":{"line":1038,"column":4},"end":{"line":1039,"column":50}},"817":{"start":{"line":1039,"column":6},"end":{"line":1039,"column":50}},"818":{"start":{"line":1041,"column":4},"end":{"line":1048,"column":5}},"819":{"start":{"line":1042,"column":6},"end":{"line":1042,"column":53}},"820":{"start":{"line":1042,"column":19},"end":{"line":1042,"column":53}},"821":{"start":{"line":1043,"column":6},"end":{"line":1043,"column":44}},"822":{"start":{"line":1044,"column":6},"end":{"line":1044,"column":37}},"823":{"start":{"line":1045,"column":6},"end":{"line":1045,"column":76}},"824":{"start":{"line":1045,"column":59},"end":{"line":1045,"column":73}},"825":{"start":{"line":1046,"column":6},"end":{"line":1046,"column":38}},"826":{"start":{"line":1047,"column":6},"end":{"line":1047,"column":18}},"827":{"start":{"line":1053,"column":2},"end":{"line":1055,"column":3}},"828":{"start":{"line":1054,"column":4},"end":{"line":1054,"column":50}},"829":{"start":{"line":1056,"column":2},"end":{"line":1063,"column":3}},"830":{"start":{"line":1057,"column":4},"end":{"line":1057,"column":51}},"831":{"start":{"line":1057,"column":35},"end":{"line":1057,"column":51}},"832":{"start":{"line":1058,"column":4},"end":{"line":1058,"column":71}},"833":{"start":{"line":1058,"column":42},"end":{"line":1058,"column":71}},"834":{"start":{"line":1059,"column":4},"end":{"line":1059,"column":132}},"835":{"start":{"line":1059,"column":38},"end":{"line":1059,"column":132}},"836":{"start":{"line":1059,"column":85},"end":{"line":1059,"column":113}},"837":{"start":{"line":1060,"column":4},"end":{"line":1060,"column":132}},"838":{"start":{"line":1060,"column":37},"end":{"line":1060,"column":132}},"839":{"start":{"line":1060,"column":82},"end":{"line":1060,"column":113}},"840":{"start":{"line":1061,"column":4},"end":{"line":1061,"column":77}},"841":{"start":{"line":1061,"column":36},"end":{"line":1061,"column":77}},"842":{"start":{"line":1062,"column":4},"end":{"line":1062,"column":14}},"843":{"start":{"line":1065,"column":2},"end":{"line":1069,"column":3}},"844":{"start":{"line":1066,"column":4},"end":{"line":1068,"column":38}},"845":{"start":{"line":1071,"column":2},"end":{"line":1073,"column":3}},"846":{"start":{"line":1072,"column":4},"end":{"line":1072,"column":48}},"847":{"start":{"line":1075,"column":2},"end":{"line":1160,"column":5}},"848":{"start":{"line":1077,"column":6},"end":{"line":1077,"column":50}},"849":{"start":{"line":1077,"column":24},"end":{"line":1077,"column":50}},"850":{"start":{"line":1080,"column":6},"end":{"line":1080,"column":37}},"851":{"start":{"line":1081,"column":6},"end":{"line":1081,"column":47}},"852":{"start":{"line":1084,"column":6},"end":{"line":1087,"column":60}},"853":{"start":{"line":1085,"column":8},"end":{"line":1085,"column":41}},"854":{"start":{"line":1087,"column":8},"end":{"line":1087,"column":60}},"855":{"start":{"line":1088,"column":6},"end":{"line":1088,"column":40}},"856":{"start":{"line":1091,"column":6},"end":{"line":1091,"column":26}},"857":{"start":{"line":1094,"column":6},"end":{"line":1094,"column":53}},"858":{"start":{"line":1095,"column":6},"end":{"line":1095,"column":37}},"859":{"start":{"line":1096,"column":6},"end":{"line":1107,"column":7}},"860":{"start":{"line":1097,"column":8},"end":{"line":1097,"column":34}},"861":{"start":{"line":1098,"column":8},"end":{"line":1098,"column":41}},"862":{"start":{"line":1099,"column":8},"end":{"line":1106,"column":9}},"863":{"start":{"line":1100,"column":10},"end":{"line":1100,"column":44}},"864":{"start":{"line":1102,"column":10},"end":{"line":1102,"column":28}},"865":{"start":{"line":1103,"column":10},"end":{"line":1103,"column":27}},"866":{"start":{"line":1104,"column":10},"end":{"line":1104,"column":32}},"867":{"start":{"line":1105,"column":10},"end":{"line":1105,"column":51}},"868":{"start":{"line":1108,"column":6},"end":{"line":1108,"column":104}},"869":{"start":{"line":1109,"column":6},"end":{"line":1109,"column":37}},"870":{"start":{"line":1110,"column":6},"end":{"line":1113,"column":7}},"871":{"start":{"line":1111,"column":8},"end":{"line":1111,"column":54}},"872":{"start":{"line":1112,"column":8},"end":{"line":1112,"column":46}},"873":{"start":{"line":1114,"column":6},"end":{"line":1114,"column":72}},"874":{"start":{"line":1117,"column":6},"end":{"line":1118,"column":57}},"875":{"start":{"line":1118,"column":8},"end":{"line":1118,"column":57}},"876":{"start":{"line":1119,"column":6},"end":{"line":1119,"column":46}},"877":{"start":{"line":1122,"column":6},"end":{"line":1122,"column":63}},"878":{"start":{"line":1123,"column":6},"end":{"line":1130,"column":7}},"879":{"start":{"line":1124,"column":8},"end":{"line":1124,"column":42}},"880":{"start":{"line":1125,"column":8},"end":{"line":1125,"column":41}},"881":{"start":{"line":1126,"column":8},"end":{"line":1126,"column":45}},"882":{"start":{"line":1127,"column":8},"end":{"line":1127,"column":99}},"883":{"start":{"line":1127,"column":33},"end":{"line":1127,"column":99}},"884":{"start":{"line":1129,"column":8},"end":{"line":1129,"column":54}},"885":{"start":{"line":1133,"column":6},"end":{"line":1133,"column":73}},"886":{"start":{"line":1134,"column":6},"end":{"line":1138,"column":7}},"887":{"start":{"line":1135,"column":8},"end":{"line":1135,"column":40}},"888":{"start":{"line":1136,"column":8},"end":{"line":1136,"column":64}},"889":{"start":{"line":1137,"column":8},"end":{"line":1137,"column":57}},"890":{"start":{"line":1137,"column":23},"end":{"line":1137,"column":57}},"891":{"start":{"line":1141,"column":6},"end":{"line":1141,"column":28}},"892":{"start":{"line":1142,"column":6},"end":{"line":1142,"column":66}},"893":{"start":{"line":1142,"column":27},"end":{"line":1142,"column":66}},"894":{"start":{"line":1143,"column":6},"end":{"line":1144,"column":35}},"895":{"start":{"line":1144,"column":8},"end":{"line":1144,"column":35}},"896":{"start":{"line":1147,"column":6},"end":{"line":1148,"column":57}},"897":{"start":{"line":1148,"column":8},"end":{"line":1148,"column":57}},"898":{"start":{"line":1149,"column":6},"end":{"line":1149,"column":46}},"899":{"start":{"line":1152,"column":6},"end":{"line":1153,"column":57}},"900":{"start":{"line":1153,"column":8},"end":{"line":1153,"column":57}},"901":{"start":{"line":1154,"column":6},"end":{"line":1154,"column":44}},"902":{"start":{"line":1157,"column":6},"end":{"line":1158,"column":47}},"903":{"start":{"line":1158,"column":8},"end":{"line":1158,"column":47}},"904":{"start":{"line":1161,"column":2},"end":{"line":1161,"column":61}},"905":{"start":{"line":1163,"column":2},"end":{"line":1163,"column":62}},"906":{"start":{"line":1163,"column":27},"end":{"line":1163,"column":61}},"907":{"start":{"line":1163,"column":43},"end":{"line":1163,"column":61}},"908":{"start":{"line":1164,"column":2},"end":{"line":1165,"column":69}},"909":{"start":{"line":1166,"column":2},"end":{"line":1168,"column":4}},"910":{"start":{"line":1167,"column":4},"end":{"line":1167,"column":34}},"911":{"start":{"line":1172,"column":2},"end":{"line":1186,"column":3}},"912":{"start":{"line":1173,"column":4},"end":{"line":1173,"column":40}},"913":{"start":{"line":1174,"column":4},"end":{"line":1174,"column":68}},"914":{"start":{"line":1174,"column":52},"end":{"line":1174,"column":68}},"915":{"start":{"line":1175,"column":4},"end":{"line":1178,"column":5}},"916":{"start":{"line":1176,"column":6},"end":{"line":1176,"column":56}},"917":{"start":{"line":1176,"column":40},"end":{"line":1176,"column":56}},"918":{"start":{"line":1177,"column":6},"end":{"line":1177,"column":64}},"919":{"start":{"line":1177,"column":40},"end":{"line":1177,"column":64}},"920":{"start":{"line":1179,"column":4},"end":{"line":1184,"column":5}},"921":{"start":{"line":1180,"column":6},"end":{"line":1180,"column":56}},"922":{"start":{"line":1181,"column":6},"end":{"line":1181,"column":49}},"923":{"start":{"line":1181,"column":19},"end":{"line":1181,"column":49}},"924":{"start":{"line":1182,"column":11},"end":{"line":1184,"column":5}},"925":{"start":{"line":1183,"column":6},"end":{"line":1183,"column":26}},"926":{"start":{"line":1185,"column":4},"end":{"line":1185,"column":17}},"927":{"start":{"line":1187,"column":2},"end":{"line":1190,"column":3}},"928":{"start":{"line":1188,"column":4},"end":{"line":1188,"column":33}},"929":{"start":{"line":1189,"column":4},"end":{"line":1189,"column":36}},"930":{"start":{"line":1189,"column":13},"end":{"line":1189,"column":36}},"931":{"start":{"line":1192,"column":2},"end":{"line":1199,"column":3}},"932":{"start":{"line":1193,"column":4},"end":{"line":1198,"column":5}},"933":{"start":{"line":1194,"column":34},"end":{"line":1194,"column":48}},"934":{"start":{"line":1195,"column":14},"end":{"line":1195,"column":29}},"935":{"start":{"line":1196,"column":19},"end":{"line":1196,"column":33}},"936":{"start":{"line":1197,"column":32},"end":{"line":1197,"column":45}},"937":{"start":{"line":1200,"column":2},"end":{"line":1205,"column":3}},"938":{"start":{"line":1201,"column":4},"end":{"line":1204,"column":5}},"939":{"start":{"line":1203,"column":34},"end":{"line":1203,"column":46}},"940":{"start":{"line":1206,"column":2},"end":{"line":1217,"column":3}},"941":{"start":{"line":1207,"column":4},"end":{"line":1207,"column":57}},"942":{"start":{"line":1207,"column":20},"end":{"line":1207,"column":57}},"943":{"start":{"line":1208,"column":4},"end":{"line":1216,"column":5}},"944":{"start":{"line":1209,"column":20},"end":{"line":1209,"column":35}},"945":{"start":{"line":1210,"column":19},"end":{"line":1210,"column":33}},"946":{"start":{"line":1211,"column":19},"end":{"line":1211,"column":33}},"947":{"start":{"line":1214,"column":6},"end":{"line":1214,"column":36}},"948":{"start":{"line":1214,"column":23},"end":{"line":1214,"column":36}},"949":{"start":{"line":1215,"column":6},"end":{"line":1215,"column":43}},"950":{"start":{"line":1219,"column":2},"end":{"line":1226,"column":3}},"951":{"start":{"line":1220,"column":4},"end":{"line":1220,"column":38}},"952":{"start":{"line":1220,"column":30},"end":{"line":1220,"column":38}},"953":{"start":{"line":1221,"column":4},"end":{"line":1221,"column":28}},"954":{"start":{"line":1221,"column":20},"end":{"line":1221,"column":28}},"955":{"start":{"line":1222,"column":4},"end":{"line":1222,"column":25}},"956":{"start":{"line":1223,"column":4},"end":{"line":1223,"column":23}},"957":{"start":{"line":1224,"column":4},"end":{"line":1224,"column":23}},"958":{"start":{"line":1225,"column":4},"end":{"line":1225,"column":17}},"959":{"start":{"line":1228,"column":2},"end":{"line":1234,"column":3}},"960":{"start":{"line":1229,"column":4},"end":{"line":1233,"column":5}},"961":{"start":{"line":1230,"column":6},"end":{"line":1230,"column":32}},"962":{"start":{"line":1231,"column":6},"end":{"line":1231,"column":46}},"963":{"start":{"line":1231,"column":38},"end":{"line":1231,"column":46}},"964":{"start":{"line":1232,"column":6},"end":{"line":1232,"column":61}},"965":{"start":{"line":1236,"column":2},"end":{"line":1238,"column":3}},"966":{"start":{"line":1237,"column":4},"end":{"line":1237,"column":75}},"967":{"start":{"line":1240,"column":2},"end":{"line":1266,"column":3}},"968":{"start":{"line":1242,"column":6},"end":{"line":1242,"column":46}},"969":{"start":{"line":1245,"column":6},"end":{"line":1245,"column":41}},"970":{"start":{"line":1246,"column":6},"end":{"line":1246,"column":39}},"971":{"start":{"line":1247,"column":6},"end":{"line":1247,"column":62}},"972":{"start":{"line":1250,"column":6},"end":{"line":1250,"column":59}},"973":{"start":{"line":1253,"column":6},"end":{"line":1256,"column":7}},"974":{"start":{"line":1254,"column":8},"end":{"line":1254,"column":37}},"975":{"start":{"line":1255,"column":8},"end":{"line":1255,"column":73}},"976":{"start":{"line":1259,"column":6},"end":{"line":1261,"column":76}},"977":{"start":{"line":1260,"column":8},"end":{"line":1261,"column":76}},"978":{"start":{"line":1261,"column":10},"end":{"line":1261,"column":76}},"979":{"start":{"line":1264,"column":6},"end":{"line":1264,"column":78}},"980":{"start":{"line":1268,"column":2},"end":{"line":1271,"column":3}},"981":{"start":{"line":1269,"column":4},"end":{"line":1269,"column":50}},"982":{"start":{"line":1270,"column":4},"end":{"line":1270,"column":49}},"983":{"start":{"line":1270,"column":19},"end":{"line":1270,"column":49}},"984":{"start":{"line":1273,"column":2},"end":{"line":1276,"column":3}},"985":{"start":{"line":1274,"column":4},"end":{"line":1274,"column":38}},"986":{"start":{"line":1275,"column":4},"end":{"line":1275,"column":57}},"987":{"start":{"line":1278,"column":2},"end":{"line":1282,"column":3}},"988":{"start":{"line":1279,"column":4},"end":{"line":1279,"column":49}},"989":{"start":{"line":1279,"column":43},"end":{"line":1279,"column":49}},"990":{"start":{"line":1280,"column":4},"end":{"line":1280,"column":77}},"991":{"start":{"line":1281,"column":4},"end":{"line":1281,"column":38}},"992":{"start":{"line":1284,"column":2},"end":{"line":1332,"column":3}},"993":{"start":{"line":1285,"column":4},"end":{"line":1285,"column":45}},"994":{"start":{"line":1285,"column":26},"end":{"line":1285,"column":45}},"995":{"start":{"line":1287,"column":4},"end":{"line":1287,"column":48}},"996":{"start":{"line":1288,"column":4},"end":{"line":1301,"column":5}},"997":{"start":{"line":1289,"column":6},"end":{"line":1300,"column":7}},"998":{"start":{"line":1290,"column":8},"end":{"line":1290,"column":18}},"999":{"start":{"line":1292,"column":8},"end":{"line":1292,"column":60}},"1000":{"start":{"line":1293,"column":8},"end":{"line":1293,"column":42}},"1001":{"start":{"line":1294,"column":8},"end":{"line":1299,"column":9}},"1002":{"start":{"line":1295,"column":10},"end":{"line":1295,"column":24}},"1003":{"start":{"line":1297,"column":10},"end":{"line":1297,"column":26}},"1004":{"start":{"line":1298,"column":10},"end":{"line":1298,"column":47}},"1005":{"start":{"line":1302,"column":4},"end":{"line":1302,"column":57}},"1006":{"start":{"line":1303,"column":4},"end":{"line":1303,"column":55}},"1007":{"start":{"line":1303,"column":17},"end":{"line":1303,"column":55}},"1008":{"start":{"line":1305,"column":4},"end":{"line":1331,"column":6}},"1009":{"start":{"line":1306,"column":6},"end":{"line":1306,"column":37}},"1010":{"start":{"line":1307,"column":6},"end":{"line":1308,"column":63}},"1011":{"start":{"line":1308,"column":8},"end":{"line":1308,"column":63}},"1012":{"start":{"line":1308,"column":43},"end":{"line":1308,"column":63}},"1013":{"start":{"line":1309,"column":6},"end":{"line":1309,"column":94}},"1014":{"start":{"line":1310,"column":6},"end":{"line":1310,"column":45}},"1015":{"start":{"line":1312,"column":6},"end":{"line":1312,"column":39}},"1016":{"start":{"line":1313,"column":6},"end":{"line":1313,"column":27}},"1017":{"start":{"line":1314,"column":6},"end":{"line":1314,"column":50}},"1018":{"start":{"line":1315,"column":6},"end":{"line":1329,"column":7}},"1019":{"start":{"line":1316,"column":8},"end":{"line":1316,"column":36}},"1020":{"start":{"line":1317,"column":8},"end":{"line":1317,"column":50}},"1021":{"start":{"line":1317,"column":42},"end":{"line":1317,"column":50}},"1022":{"start":{"line":1318,"column":8},"end":{"line":1318,"column":43}},"1023":{"start":{"line":1319,"column":8},"end":{"line":1325,"column":9}},"1024":{"start":{"line":1320,"column":10},"end":{"line":1320,"column":24}},"1025":{"start":{"line":1322,"column":10},"end":{"line":1322,"column":74}},"1026":{"start":{"line":1323,"column":10},"end":{"line":1323,"column":35}},"1027":{"start":{"line":1324,"column":10},"end":{"line":1324,"column":81}},"1028":{"start":{"line":1324,"column":36},"end":{"line":1324,"column":81}},"1029":{"start":{"line":1326,"column":8},"end":{"line":1326,"column":42}},"1030":{"start":{"line":1327,"column":8},"end":{"line":1327,"column":47}},"1031":{"start":{"line":1328,"column":8},"end":{"line":1328,"column":49}},"1032":{"start":{"line":1328,"column":22},"end":{"line":1328,"column":49}},"1033":{"start":{"line":1330,"column":6},"end":{"line":1330,"column":15}},"1034":{"start":{"line":1334,"column":2},"end":{"line":1363,"column":3}},"1035":{"start":{"line":1335,"column":4},"end":{"line":1335,"column":58}},"1036":{"start":{"line":1336,"column":4},"end":{"line":1348,"column":5}},"1037":{"start":{"line":1337,"column":6},"end":{"line":1337,"column":36}},"1038":{"start":{"line":1338,"column":6},"end":{"line":1346,"column":7}},"1039":{"start":{"line":1339,"column":8},"end":{"line":1339,"column":29}},"1040":{"start":{"line":1340,"column":8},"end":{"line":1345,"column":36}},"1041":{"start":{"line":1341,"column":10},"end":{"line":1341,"column":23}},"1042":{"start":{"line":1342,"column":13},"end":{"line":1345,"column":36}},"1043":{"start":{"line":1343,"column":10},"end":{"line":1343,"column":28}},"1044":{"start":{"line":1345,"column":10},"end":{"line":1345,"column":36}},"1045":{"start":{"line":1347,"column":6},"end":{"line":1347,"column":35}},"1046":{"start":{"line":1347,"column":22},"end":{"line":1347,"column":35}},"1047":{"start":{"line":1350,"column":4},"end":{"line":1362,"column":5}},"1048":{"start":{"line":1351,"column":6},"end":{"line":1351,"column":20}},"1049":{"start":{"line":1352,"column":6},"end":{"line":1353,"column":45}},"1050":{"start":{"line":1353,"column":8},"end":{"line":1353,"column":45}},"1051":{"start":{"line":1354,"column":6},"end":{"line":1354,"column":27}},"1052":{"start":{"line":1355,"column":11},"end":{"line":1362,"column":5}},"1053":{"start":{"line":1356,"column":6},"end":{"line":1356,"column":62}},"1054":{"start":{"line":1358,"column":6},"end":{"line":1358,"column":27}},"1055":{"start":{"line":1359,"column":6},"end":{"line":1360,"column":68}},"1056":{"start":{"line":1360,"column":8},"end":{"line":1360,"column":68}},"1057":{"start":{"line":1360,"column":25},"end":{"line":1360,"column":68}},"1058":{"start":{"line":1361,"column":6},"end":{"line":1361,"column":28}},"1059":{"start":{"line":1365,"column":2},"end":{"line":1371,"column":3}},"1060":{"start":{"line":1366,"column":4},"end":{"line":1370,"column":6}},"1061":{"start":{"line":1367,"column":6},"end":{"line":1367,"column":35}},"1062":{"start":{"line":1368,"column":6},"end":{"line":1368,"column":32}},"1063":{"start":{"line":1368,"column":15},"end":{"line":1368,"column":32}},"1064":{"start":{"line":1369,"column":6},"end":{"line":1369,"column":15}},"1065":{"start":{"line":1372,"column":2},"end":{"line":1378,"column":3}},"1066":{"start":{"line":1373,"column":4},"end":{"line":1377,"column":6}},"1067":{"start":{"line":1374,"column":6},"end":{"line":1374,"column":31}},"1068":{"start":{"line":1374,"column":16},"end":{"line":1374,"column":31}},"1069":{"start":{"line":1375,"column":6},"end":{"line":1375,"column":32}},"1070":{"start":{"line":1376,"column":6},"end":{"line":1376,"column":17}},"1071":{"start":{"line":1380,"column":2},"end":{"line":1618,"column":4}},"1072":{"start":{"line":1382,"column":6},"end":{"line":1382,"column":58}},"1073":{"start":{"line":1385,"column":6},"end":{"line":1385,"column":48}},"1074":{"start":{"line":1386,"column":6},"end":{"line":1397,"column":7}},"1075":{"start":{"line":1387,"column":8},"end":{"line":1387,"column":37}},"1076":{"start":{"line":1388,"column":8},"end":{"line":1396,"column":9}},"1077":{"start":{"line":1389,"column":10},"end":{"line":1395,"column":11}},"1078":{"start":{"line":1390,"column":12},"end":{"line":1390,"column":24}},"1079":{"start":{"line":1392,"column":12},"end":{"line":1392,"column":82}},"1080":{"start":{"line":1393,"column":12},"end":{"line":1394,"column":40}},"1081":{"start":{"line":1393,"column":23},"end":{"line":1393,"column":36}},"1082":{"start":{"line":1394,"column":17},"end":{"line":1394,"column":40}},"1083":{"start":{"line":1399,"column":6},"end":{"line":1399,"column":52}},"1084":{"start":{"line":1400,"column":6},"end":{"line":1400,"column":65}},"1085":{"start":{"line":1400,"column":24},"end":{"line":1400,"column":65}},"1086":{"start":{"line":1401,"column":6},"end":{"line":1401,"column":28}},"1087":{"start":{"line":1403,"column":6},"end":{"line":1421,"column":8}},"1088":{"start":{"line":1404,"column":8},"end":{"line":1420,"column":9}},"1089":{"start":{"line":1405,"column":10},"end":{"line":1405,"column":56}},"1090":{"start":{"line":1406,"column":10},"end":{"line":1406,"column":51}},"1091":{"start":{"line":1406,"column":42},"end":{"line":1406,"column":51}},"1092":{"start":{"line":1408,"column":10},"end":{"line":1408,"column":50}},"1093":{"start":{"line":1409,"column":10},"end":{"line":1416,"column":11}},"1094":{"start":{"line":1410,"column":12},"end":{"line":1410,"column":27}},"1095":{"start":{"line":1412,"column":12},"end":{"line":1412,"column":54}},"1096":{"start":{"line":1413,"column":12},"end":{"line":1413,"column":35}},"1097":{"start":{"line":1414,"column":12},"end":{"line":1415,"column":56}},"1098":{"start":{"line":1415,"column":14},"end":{"line":1415,"column":56}},"1099":{"start":{"line":1417,"column":10},"end":{"line":1417,"column":49}},"1100":{"start":{"line":1418,"column":10},"end":{"line":1419,"column":75}},"1101":{"start":{"line":1419,"column":12},"end":{"line":1419,"column":75}},"1102":{"start":{"line":1422,"column":6},"end":{"line":1422,"column":17}},"1103":{"start":{"line":1425,"column":6},"end":{"line":1425,"column":48}},"1104":{"start":{"line":1426,"column":6},"end":{"line":1426,"column":43}},"1105":{"start":{"line":1426,"column":28},"end":{"line":1426,"column":43}},"1106":{"start":{"line":1427,"column":6},"end":{"line":1427,"column":32}},"1107":{"start":{"line":1428,"column":6},"end":{"line":1431,"column":73}},"1108":{"start":{"line":1429,"column":8},"end":{"line":1429,"column":63}},"1109":{"start":{"line":1431,"column":8},"end":{"line":1431,"column":73}},"1110":{"start":{"line":1432,"column":6},"end":{"line":1433,"column":41}},"1111":{"start":{"line":1433,"column":8},"end":{"line":1433,"column":41}},"1112":{"start":{"line":1434,"column":6},"end":{"line":1434,"column":64}},"1113":{"start":{"line":1435,"column":6},"end":{"line":1435,"column":59}},"1114":{"start":{"line":1435,"column":19},"end":{"line":1435,"column":59}},"1115":{"start":{"line":1436,"column":6},"end":{"line":1436,"column":16}},"1116":{"start":{"line":1440,"column":6},"end":{"line":1441,"column":49}},"1117":{"start":{"line":1441,"column":8},"end":{"line":1441,"column":49}},"1118":{"start":{"line":1442,"column":6},"end":{"line":1442,"column":47}},"1119":{"start":{"line":1445,"column":6},"end":{"line":1445,"column":41}},"1120":{"start":{"line":1446,"column":6},"end":{"line":1446,"column":43}},"1121":{"start":{"line":1449,"column":6},"end":{"line":1449,"column":41}},"1122":{"start":{"line":1450,"column":6},"end":{"line":1450,"column":20}},"1123":{"start":{"line":1453,"column":6},"end":{"line":1466,"column":7}},"1124":{"start":{"line":1454,"column":8},"end":{"line":1454,"column":42}},"1125":{"start":{"line":1455,"column":8},"end":{"line":1455,"column":43}},"1126":{"start":{"line":1456,"column":8},"end":{"line":1456,"column":70}},"1127":{"start":{"line":1456,"column":56},"end":{"line":1456,"column":70}},"1128":{"start":{"line":1457,"column":8},"end":{"line":1457,"column":70}},"1129":{"start":{"line":1457,"column":56},"end":{"line":1457,"column":70}},"1130":{"start":{"line":1458,"column":8},"end":{"line":1458,"column":30}},"1131":{"start":{"line":1459,"column":8},"end":{"line":1459,"column":48}},"1132":{"start":{"line":1460,"column":8},"end":{"line":1460,"column":48}},"1133":{"start":{"line":1461,"column":8},"end":{"line":1461,"column":22}},"1134":{"start":{"line":1463,"column":8},"end":{"line":1463,"column":39}},"1135":{"start":{"line":1464,"column":8},"end":{"line":1464,"column":40}},"1136":{"start":{"line":1465,"column":8},"end":{"line":1465,"column":64}},"1137":{"start":{"line":1469,"column":6},"end":{"line":1469,"column":21}},"1138":{"start":{"line":1470,"column":6},"end":{"line":1476,"column":7}},"1139":{"start":{"line":1471,"column":8},"end":{"line":1471,"column":42}},"1140":{"start":{"line":1472,"column":8},"end":{"line":1473,"column":100}},"1141":{"start":{"line":1473,"column":10},"end":{"line":1473,"column":100}},"1142":{"start":{"line":1474,"column":13},"end":{"line":1476,"column":7}},"1143":{"start":{"line":1475,"column":8},"end":{"line":1475,"column":29}},"1144":{"start":{"line":1478,"column":6},"end":{"line":1483,"column":7}},"1145":{"start":{"line":1479,"column":8},"end":{"line":1479,"column":40}},"1146":{"start":{"line":1480,"column":8},"end":{"line":1480,"column":21}},"1147":{"start":{"line":1482,"column":8},"end":{"line":1482,"column":51}},"1148":{"start":{"line":1485,"column":6},"end":{"line":1511,"column":7}},"1149":{"start":{"line":1486,"column":8},"end":{"line":1486,"column":49}},"1150":{"start":{"line":1487,"column":8},"end":{"line":1487,"column":62}},"1151":{"start":{"line":1487,"column":34},"end":{"line":1487,"column":62}},"1152":{"start":{"line":1488,"column":8},"end":{"line":1503,"column":9}},"1153":{"start":{"line":1493,"column":10},"end":{"line":1493,"column":102}},"1154":{"start":{"line":1494,"column":10},"end":{"line":1502,"column":11}},"1155":{"start":{"line":1495,"column":12},"end":{"line":1495,"column":40}},"1156":{"start":{"line":1496,"column":12},"end":{"line":1496,"column":122}},"1157":{"start":{"line":1497,"column":12},"end":{"line":1500,"column":15}},"1158":{"start":{"line":1498,"column":14},"end":{"line":1499,"column":74}},"1159":{"start":{"line":1499,"column":16},"end":{"line":1499,"column":74}},"1160":{"start":{"line":1501,"column":12},"end":{"line":1501,"column":23}},"1161":{"start":{"line":1505,"column":8},"end":{"line":1505,"column":67}},"1162":{"start":{"line":1506,"column":8},"end":{"line":1506,"column":31}},"1163":{"start":{"line":1507,"column":8},"end":{"line":1508,"column":75}},"1164":{"start":{"line":1508,"column":10},"end":{"line":1508,"column":75}},"1165":{"start":{"line":1510,"column":8},"end":{"line":1510,"column":45}},"1166":{"start":{"line":1512,"column":6},"end":{"line":1512,"column":17}},"1167":{"start":{"line":1515,"column":6},"end":{"line":1515,"column":35}},"1168":{"start":{"line":1516,"column":6},"end":{"line":1516,"column":36}},"1169":{"start":{"line":1519,"column":6},"end":{"line":1519,"column":37}},"1170":{"start":{"line":1520,"column":6},"end":{"line":1520,"column":41}},"1171":{"start":{"line":1521,"column":6},"end":{"line":1521,"column":40}},"1172":{"start":{"line":1524,"column":6},"end":{"line":1525,"column":36}},"1173":{"start":{"line":1525,"column":8},"end":{"line":1525,"column":36}},"1174":{"start":{"line":1527,"column":6},"end":{"line":1528,"column":51}},"1175":{"start":{"line":1528,"column":8},"end":{"line":1528,"column":51}},"1176":{"start":{"line":1529,"column":6},"end":{"line":1529,"column":45}},"1177":{"start":{"line":1530,"column":6},"end":{"line":1530,"column":26}},"1178":{"start":{"line":1531,"column":6},"end":{"line":1531,"column":76}},"1179":{"start":{"line":1532,"column":6},"end":{"line":1532,"column":43}},"1180":{"start":{"line":1533,"column":6},"end":{"line":1533,"column":81}},"1181":{"start":{"line":1536,"column":6},"end":{"line":1537,"column":51}},"1182":{"start":{"line":1537,"column":8},"end":{"line":1537,"column":51}},"1183":{"start":{"line":1538,"column":6},"end":{"line":1538,"column":47}},"1184":{"start":{"line":1539,"column":6},"end":{"line":1558,"column":7}},"1185":{"start":{"line":1540,"column":8},"end":{"line":1540,"column":52}},"1186":{"start":{"line":1541,"column":8},"end":{"line":1541,"column":48}},"1187":{"start":{"line":1542,"column":8},"end":{"line":1544,"column":38}},"1188":{"start":{"line":1544,"column":10},"end":{"line":1544,"column":38}},"1189":{"start":{"line":1545,"column":8},"end":{"line":1545,"column":76}},"1190":{"start":{"line":1546,"column":13},"end":{"line":1558,"column":7}},"1191":{"start":{"line":1547,"column":8},"end":{"line":1547,"column":47}},"1192":{"start":{"line":1548,"column":8},"end":{"line":1548,"column":90}},"1193":{"start":{"line":1549,"column":8},"end":{"line":1549,"column":54}},"1194":{"start":{"line":1551,"column":8},"end":{"line":1551,"column":47}},"1195":{"start":{"line":1552,"column":8},"end":{"line":1553,"column":38}},"1196":{"start":{"line":1553,"column":10},"end":{"line":1553,"column":38}},"1197":{"start":{"line":1554,"column":8},"end":{"line":1554,"column":47}},"1198":{"start":{"line":1555,"column":8},"end":{"line":1556,"column":64}},"1199":{"start":{"line":1556,"column":10},"end":{"line":1556,"column":64}},"1200":{"start":{"line":1557,"column":8},"end":{"line":1557,"column":79}},"1201":{"start":{"line":1561,"column":6},"end":{"line":1561,"column":36}},"1202":{"start":{"line":1562,"column":6},"end":{"line":1569,"column":7}},"1203":{"start":{"line":1563,"column":8},"end":{"line":1563,"column":50}},"1204":{"start":{"line":1564,"column":8},"end":{"line":1564,"column":42}},"1205":{"start":{"line":1565,"column":8},"end":{"line":1568,"column":30}},"1206":{"start":{"line":1566,"column":10},"end":{"line":1566,"column":40}},"1207":{"start":{"line":1567,"column":13},"end":{"line":1568,"column":30}},"1208":{"start":{"line":1568,"column":10},"end":{"line":1568,"column":30}},"1209":{"start":{"line":1570,"column":6},"end":{"line":1570,"column":64}},"1210":{"start":{"line":1573,"column":6},"end":{"line":1578,"column":7}},"1211":{"start":{"line":1574,"column":8},"end":{"line":1574,"column":49}},"1212":{"start":{"line":1575,"column":8},"end":{"line":1577,"column":67}},"1213":{"start":{"line":1576,"column":10},"end":{"line":1577,"column":67}},"1214":{"start":{"line":1579,"column":6},"end":{"line":1579,"column":38}},"1215":{"start":{"line":1582,"column":6},"end":{"line":1582,"column":27}},"1216":{"start":{"line":1585,"column":6},"end":{"line":1585,"column":50}},"1217":{"start":{"line":1588,"column":6},"end":{"line":1588,"column":31}},"1218":{"start":{"line":1591,"column":6},"end":{"line":1592,"column":48}},"1219":{"start":{"line":1592,"column":8},"end":{"line":1592,"column":48}},"1220":{"start":{"line":1593,"column":6},"end":{"line":1593,"column":19}},"1221":{"start":{"line":1596,"column":6},"end":{"line":1596,"column":34}},"1222":{"start":{"line":1597,"column":6},"end":{"line":1598,"column":58}},"1223":{"start":{"line":1598,"column":8},"end":{"line":1598,"column":58}},"1224":{"start":{"line":1599,"column":6},"end":{"line":1599,"column":90}},"1225":{"start":{"line":1602,"column":6},"end":{"line":1602,"column":58}},"1226":{"start":{"line":1603,"column":6},"end":{"line":1607,"column":7}},"1227":{"start":{"line":1604,"column":8},"end":{"line":1604,"column":52}},"1228":{"start":{"line":1604,"column":32},"end":{"line":1604,"column":52}},"1229":{"start":{"line":1605,"column":8},"end":{"line":1605,"column":48}},"1230":{"start":{"line":1605,"column":26},"end":{"line":1605,"column":48}},"1231":{"start":{"line":1606,"column":8},"end":{"line":1606,"column":26}},"1232":{"start":{"line":1608,"column":6},"end":{"line":1615,"column":7}},"1233":{"start":{"line":1609,"column":8},"end":{"line":1614,"column":9}},"1234":{"start":{"line":1610,"column":10},"end":{"line":1611,"column":86}},"1235":{"start":{"line":1613,"column":10},"end":{"line":1613,"column":45}},"1236":{"start":{"line":1616,"column":6},"end":{"line":1616,"column":37}},"1237":{"start":{"line":1619,"column":2},"end":{"line":1619,"column":80}},"1238":{"start":{"line":1621,"column":2},"end":{"line":1624,"column":3}},"1239":{"start":{"line":1622,"column":4},"end":{"line":1622,"column":46}},"1240":{"start":{"line":1623,"column":4},"end":{"line":1623,"column":61}},"1241":{"start":{"line":1626,"column":2},"end":{"line":1628,"column":3}},"1242":{"start":{"line":1627,"column":4},"end":{"line":1627,"column":78}},"1243":{"start":{"line":1630,"column":2},"end":{"line":1702,"column":5}},"1244":{"start":{"line":1632,"column":6},"end":{"line":1632,"column":46}},"1245":{"start":{"line":1636,"column":6},"end":{"line":1636,"column":48}},"1246":{"start":{"line":1637,"column":6},"end":{"line":1637,"column":32}},"1247":{"start":{"line":1638,"column":6},"end":{"line":1638,"column":39}},"1248":{"start":{"line":1639,"column":6},"end":{"line":1639,"column":64}},"1249":{"start":{"line":1640,"column":6},"end":{"line":1640,"column":45}},"1250":{"start":{"line":1644,"column":6},"end":{"line":1644,"column":34}},"1251":{"start":{"line":1648,"column":6},"end":{"line":1657,"column":7}},"1252":{"start":{"line":1649,"column":8},"end":{"line":1649,"column":40}},"1253":{"start":{"line":1650,"column":8},"end":{"line":1656,"column":9}},"1254":{"start":{"line":1651,"column":10},"end":{"line":1651,"column":49}},"1255":{"start":{"line":1652,"column":10},"end":{"line":1653,"column":56}},"1256":{"start":{"line":1653,"column":12},"end":{"line":1653,"column":56}},"1257":{"start":{"line":1654,"column":15},"end":{"line":1656,"column":9}},"1258":{"start":{"line":1655,"column":10},"end":{"line":1655,"column":65}},"1259":{"start":{"line":1661,"column":6},"end":{"line":1661,"column":80}},"1260":{"start":{"line":1665,"column":6},"end":{"line":1665,"column":33}},"1261":{"start":{"line":1665,"column":26},"end":{"line":1665,"column":33}},"1262":{"start":{"line":1666,"column":6},"end":{"line":1666,"column":58}},"1263":{"start":{"line":1667,"column":6},"end":{"line":1670,"column":7}},"1264":{"start":{"line":1668,"column":8},"end":{"line":1668,"column":53}},"1265":{"start":{"line":1668,"column":32},"end":{"line":1668,"column":53}},"1266":{"start":{"line":1669,"column":8},"end":{"line":1669,"column":27}},"1267":{"start":{"line":1671,"column":6},"end":{"line":1671,"column":42}},"1268":{"start":{"line":1675,"column":6},"end":{"line":1675,"column":44}},"1269":{"start":{"line":1676,"column":6},"end":{"line":1687,"column":7}},"1270":{"start":{"line":1678,"column":8},"end":{"line":1678,"column":35}},"1271":{"start":{"line":1679,"column":8},"end":{"line":1679,"column":44}},"1272":{"start":{"line":1680,"column":8},"end":{"line":1686,"column":9}},"1273":{"start":{"line":1681,"column":10},"end":{"line":1682,"column":61}},"1274":{"start":{"line":1682,"column":12},"end":{"line":1682,"column":61}},"1275":{"start":{"line":1683,"column":10},"end":{"line":1683,"column":68}},"1276":{"start":{"line":1685,"column":10},"end":{"line":1685,"column":63}},"1277":{"start":{"line":1688,"column":6},"end":{"line":1688,"column":39}},"1278":{"start":{"line":1692,"column":6},"end":{"line":1692,"column":50}},"1279":{"start":{"line":1693,"column":6},"end":{"line":1696,"column":57}},"1280":{"start":{"line":1694,"column":8},"end":{"line":1694,"column":42}},"1281":{"start":{"line":1696,"column":8},"end":{"line":1696,"column":57}},"1282":{"start":{"line":1697,"column":6},"end":{"line":1699,"column":98}},"1283":{"start":{"line":1700,"column":6},"end":{"line":1700,"column":38}},"1284":{"start":{"line":1706,"column":2},"end":{"line":1712,"column":4}},"1285":{"start":{"line":1707,"column":4},"end":{"line":1707,"column":62}},"1286":{"start":{"line":1707,"column":44},"end":{"line":1707,"column":62}},"1287":{"start":{"line":1708,"column":4},"end":{"line":1708,"column":12}},"1288":{"start":{"line":1709,"column":4},"end":{"line":1710,"column":63}},"1289":{"start":{"line":1709,"column":10},"end":{"line":1709,"column":43}},"1290":{"start":{"line":1710,"column":15},"end":{"line":1710,"column":61}},"1291":{"start":{"line":1711,"column":4},"end":{"line":1711,"column":15}},"1292":{"start":{"line":1716,"column":2},"end":{"line":1731,"column":4}},"1293":{"start":{"line":1717,"column":4},"end":{"line":1717,"column":49}},"1294":{"start":{"line":1717,"column":32},"end":{"line":1717,"column":49}},"1295":{"start":{"line":1719,"column":4},"end":{"line":1719,"column":50}},"1296":{"start":{"line":1719,"column":15},"end":{"line":1719,"column":50}},"1297":{"start":{"line":1720,"column":4},"end":{"line":1720,"column":43}},"1298":{"start":{"line":1722,"column":4},"end":{"line":1722,"column":36}},"1299":{"start":{"line":1722,"column":16},"end":{"line":1722,"column":36}},"1300":{"start":{"line":1723,"column":4},"end":{"line":1723,"column":23}},"1301":{"start":{"line":1725,"column":4},"end":{"line":1725,"column":52}},"1302":{"start":{"line":1726,"column":4},"end":{"line":1726,"column":59}},"1303":{"start":{"line":1726,"column":19},"end":{"line":1726,"column":59}},"1304":{"start":{"line":1727,"column":4},"end":{"line":1727,"column":51}},"1305":{"start":{"line":1728,"column":4},"end":{"line":1728,"column":60}},"1306":{"start":{"line":1728,"column":19},"end":{"line":1728,"column":60}},"1307":{"start":{"line":1730,"column":4},"end":{"line":1730,"column":24}},"1308":{"start":{"line":1735,"column":2},"end":{"line":1747,"column":4}},"1309":{"start":{"line":1736,"column":4},"end":{"line":1736,"column":50}},"1310":{"start":{"line":1737,"column":4},"end":{"line":1737,"column":18}},"1311":{"start":{"line":1738,"column":4},"end":{"line":1738,"column":28}},"1312":{"start":{"line":1739,"column":4},"end":{"line":1746,"column":5}},"1313":{"start":{"line":1740,"column":6},"end":{"line":1740,"column":32}},"1314":{"start":{"line":1741,"column":6},"end":{"line":1744,"column":7}},"1315":{"start":{"line":1742,"column":8},"end":{"line":1742,"column":48}},"1316":{"start":{"line":1743,"column":8},"end":{"line":1743,"column":64}},"1317":{"start":{"line":1743,"column":44},"end":{"line":1743,"column":64}},"1318":{"start":{"line":1745,"column":6},"end":{"line":1745,"column":46}},"1319":{"start":{"line":1745,"column":24},"end":{"line":1745,"column":46}},"1320":{"start":{"line":1749,"column":2},"end":{"line":1759,"column":3}},"1321":{"start":{"line":1750,"column":4},"end":{"line":1750,"column":37}},"1322":{"start":{"line":1751,"column":4},"end":{"line":1751,"column":74}},"1323":{"start":{"line":1751,"column":38},"end":{"line":1751,"column":59}},"1324":{"start":{"line":1751,"column":60},"end":{"line":1751,"column":72}},"1325":{"start":{"line":1752,"column":4},"end":{"line":1758,"column":5}},"1326":{"start":{"line":1753,"column":6},"end":{"line":1753,"column":85}},"1327":{"start":{"line":1753,"column":23},"end":{"line":1753,"column":85}},"1328":{"start":{"line":1753,"column":44},"end":{"line":1753,"column":82}},"1329":{"start":{"line":1754,"column":6},"end":{"line":1754,"column":120}},"1330":{"start":{"line":1754,"column":32},"end":{"line":1754,"column":117}},"1331":{"start":{"line":1756,"column":6},"end":{"line":1756,"column":74}},"1332":{"start":{"line":1756,"column":23},"end":{"line":1756,"column":74}},"1333":{"start":{"line":1756,"column":44},"end":{"line":1756,"column":71}},"1334":{"start":{"line":1757,"column":6},"end":{"line":1757,"column":109}},"1335":{"start":{"line":1757,"column":32},"end":{"line":1757,"column":106}},"1336":{"start":{"line":1761,"column":2},"end":{"line":1782,"column":4}},"1337":{"start":{"line":1762,"column":4},"end":{"line":1762,"column":45}},"1338":{"start":{"line":1762,"column":38},"end":{"line":1762,"column":45}},"1339":{"start":{"line":1763,"column":4},"end":{"line":1763,"column":32}},"1340":{"start":{"line":1764,"column":4},"end":{"line":1770,"column":5}},"1341":{"start":{"line":1765,"column":6},"end":{"line":1765,"column":31}},"1342":{"start":{"line":1766,"column":6},"end":{"line":1769,"column":25}},"1343":{"start":{"line":1767,"column":8},"end":{"line":1767,"column":34}},"1344":{"start":{"line":1769,"column":8},"end":{"line":1769,"column":25}},"1345":{"start":{"line":1771,"column":4},"end":{"line":1771,"column":47}},"1346":{"start":{"line":1771,"column":28},"end":{"line":1771,"column":47}},"1347":{"start":{"line":1773,"column":4},"end":{"line":1781,"column":5}},"1348":{"start":{"line":1773,"column":22},"end":{"line":1781,"column":5}},"1349":{"start":{"line":1774,"column":6},"end":{"line":1774,"column":30}},"1350":{"start":{"line":1775,"column":6},"end":{"line":1780,"column":7}},"1351":{"start":{"line":1776,"column":8},"end":{"line":1776,"column":36}},"1352":{"start":{"line":1777,"column":8},"end":{"line":1777,"column":42}},"1353":{"start":{"line":1777,"column":24},"end":{"line":1777,"column":42}},"1354":{"start":{"line":1778,"column":13},"end":{"line":1780,"column":7}},"1355":{"start":{"line":1779,"column":8},"end":{"line":1779,"column":22}},"1356":{"start":{"line":1783,"column":2},"end":{"line":1783,"column":30}},"1357":{"start":{"line":1784,"column":2},"end":{"line":1793,"column":4}},"1358":{"start":{"line":1785,"column":4},"end":{"line":1785,"column":50}},"1359":{"start":{"line":1785,"column":38},"end":{"line":1785,"column":50}},"1360":{"start":{"line":1786,"column":4},"end":{"line":1786,"column":32}},"1361":{"start":{"line":1787,"column":4},"end":{"line":1792,"column":5}},"1362":{"start":{"line":1788,"column":6},"end":{"line":1788,"column":29}},"1363":{"start":{"line":1789,"column":6},"end":{"line":1790,"column":27}},"1364":{"start":{"line":1790,"column":8},"end":{"line":1790,"column":27}},"1365":{"start":{"line":1791,"column":6},"end":{"line":1791,"column":21}},"1366":{"start":{"line":1794,"column":2},"end":{"line":1799,"column":4}},"1367":{"start":{"line":1795,"column":4},"end":{"line":1795,"column":53}},"1368":{"start":{"line":1795,"column":46},"end":{"line":1795,"column":53}},"1369":{"start":{"line":1796,"column":4},"end":{"line":1796,"column":26}},"1370":{"start":{"line":1797,"column":4},"end":{"line":1797,"column":28}},"1371":{"start":{"line":1798,"column":4},"end":{"line":1798,"column":72}},"1372":{"start":{"line":1798,"column":47},"end":{"line":1798,"column":72}},"1373":{"start":{"line":1803,"column":2},"end":{"line":1811,"column":3}},"1374":{"start":{"line":1804,"column":4},"end":{"line":1804,"column":20}},"1375":{"start":{"line":1805,"column":4},"end":{"line":1805,"column":35}},"1376":{"start":{"line":1806,"column":4},"end":{"line":1809,"column":5}},"1377":{"start":{"line":1806,"column":15},"end":{"line":1809,"column":5}},"1378":{"start":{"line":1807,"column":6},"end":{"line":1807,"column":39}},"1379":{"start":{"line":1808,"column":6},"end":{"line":1808,"column":37}},"1380":{"start":{"line":1808,"column":26},"end":{"line":1808,"column":37}},"1381":{"start":{"line":1810,"column":4},"end":{"line":1810,"column":17}},"1382":{"start":{"line":1813,"column":2},"end":{"line":1821,"column":3}},"1383":{"start":{"line":1814,"column":4},"end":{"line":1814,"column":30}},"1384":{"start":{"line":1815,"column":4},"end":{"line":1815,"column":43}},"1385":{"start":{"line":1816,"column":4},"end":{"line":1816,"column":45}},"1386":{"start":{"line":1817,"column":4},"end":{"line":1817,"column":86}},"1387":{"start":{"line":1818,"column":4},"end":{"line":1818,"column":108}},"1388":{"start":{"line":1819,"column":4},"end":{"line":1819,"column":42}},"1389":{"start":{"line":1820,"column":4},"end":{"line":1820,"column":17}},"1390":{"start":{"line":1823,"column":2},"end":{"line":1830,"column":3}},"1391":{"start":{"line":1824,"column":4},"end":{"line":1824,"column":36}},"1392":{"start":{"line":1824,"column":23},"end":{"line":1824,"column":36}},"1393":{"start":{"line":1825,"column":4},"end":{"line":1828,"column":5}},"1394":{"start":{"line":1826,"column":6},"end":{"line":1826,"column":84}},"1395":{"start":{"line":1826,"column":33},"end":{"line":1826,"column":84}},"1396":{"start":{"line":1827,"column":6},"end":{"line":1827,"column":25}},"1397":{"start":{"line":1829,"column":4},"end":{"line":1829,"column":47}},"1398":{"start":{"line":1832,"column":2},"end":{"line":1845,"column":3}},"1399":{"start":{"line":1833,"column":4},"end":{"line":1833,"column":56}},"1400":{"start":{"line":1834,"column":4},"end":{"line":1834,"column":25}},"1401":{"start":{"line":1834,"column":13},"end":{"line":1834,"column":25}},"1402":{"start":{"line":1835,"column":4},"end":{"line":1835,"column":26}},"1403":{"start":{"line":1836,"column":4},"end":{"line":1843,"column":5}},"1404":{"start":{"line":1837,"column":6},"end":{"line":1838,"column":47}},"1405":{"start":{"line":1838,"column":8},"end":{"line":1838,"column":47}},"1406":{"start":{"line":1839,"column":6},"end":{"line":1839,"column":22}},"1407":{"start":{"line":1840,"column":6},"end":{"line":1841,"column":47}},"1408":{"start":{"line":1841,"column":8},"end":{"line":1841,"column":47}},"1409":{"start":{"line":1842,"column":6},"end":{"line":1842,"column":51}},"1410":{"start":{"line":1844,"column":4},"end":{"line":1844,"column":36}},"1411":{"start":{"line":1847,"column":2},"end":{"line":1934,"column":4}},"1412":{"start":{"line":1849,"column":6},"end":{"line":1849,"column":61}},"1413":{"start":{"line":1852,"column":6},"end":{"line":1852,"column":26}},"1414":{"start":{"line":1855,"column":6},"end":{"line":1855,"column":26}},"1415":{"start":{"line":1858,"column":6},"end":{"line":1858,"column":31}},"1416":{"start":{"line":1861,"column":6},"end":{"line":1861,"column":31}},"1417":{"start":{"line":1864,"column":6},"end":{"line":1864,"column":74}},"1418":{"start":{"line":1867,"column":6},"end":{"line":1867,"column":43}},"1419":{"start":{"line":1870,"column":6},"end":{"line":1870,"column":20}},"1420":{"start":{"line":1873,"column":6},"end":{"line":1873,"column":56}},"1421":{"start":{"line":1873,"column":41},"end":{"line":1873,"column":56}},"1422":{"start":{"line":1874,"column":6},"end":{"line":1878,"column":7}},"1423":{"start":{"line":1875,"column":8},"end":{"line":1875,"column":45}},"1424":{"start":{"line":1876,"column":8},"end":{"line":1876,"column":46}},"1425":{"start":{"line":1877,"column":8},"end":{"line":1877,"column":70}},"1426":{"start":{"line":1877,"column":56},"end":{"line":1877,"column":70}},"1427":{"start":{"line":1879,"column":6},"end":{"line":1879,"column":20}},"1428":{"start":{"line":1882,"column":6},"end":{"line":1882,"column":41}},"1429":{"start":{"line":1885,"column":6},"end":{"line":1885,"column":43}},"1430":{"start":{"line":1886,"column":6},"end":{"line":1886,"column":63}},"1431":{"start":{"line":1889,"column":6},"end":{"line":1889,"column":49}},"1432":{"start":{"line":1890,"column":6},"end":{"line":1890,"column":67}},"1433":{"start":{"line":1893,"column":6},"end":{"line":1893,"column":61}},"1434":{"start":{"line":1894,"column":6},"end":{"line":1894,"column":59}},"1435":{"start":{"line":1895,"column":6},"end":{"line":1895,"column":31}},"1436":{"start":{"line":1895,"column":18},"end":{"line":1895,"column":31}},"1437":{"start":{"line":1896,"column":6},"end":{"line":1896,"column":35}},"1438":{"start":{"line":1899,"column":6},"end":{"line":1899,"column":66}},"1439":{"start":{"line":1902,"column":6},"end":{"line":1902,"column":79}},"1440":{"start":{"line":1903,"column":6},"end":{"line":1903,"column":41}},"1441":{"start":{"line":1903,"column":15},"end":{"line":1903,"column":41}},"1442":{"start":{"line":1904,"column":6},"end":{"line":1904,"column":39}},"1443":{"start":{"line":1904,"column":26},"end":{"line":1904,"column":39}},"1444":{"start":{"line":1905,"column":6},"end":{"line":1905,"column":39}},"1445":{"start":{"line":1908,"column":6},"end":{"line":1908,"column":76}},"1446":{"start":{"line":1909,"column":6},"end":{"line":1909,"column":41}},"1447":{"start":{"line":1909,"column":15},"end":{"line":1909,"column":41}},"1448":{"start":{"line":1910,"column":6},"end":{"line":1910,"column":19}},"1449":{"start":{"line":1913,"column":6},"end":{"line":1913,"column":47}},"1450":{"start":{"line":1916,"column":6},"end":{"line":1916,"column":27}},"1451":{"start":{"line":1919,"column":6},"end":{"line":1919,"column":31}},"1452":{"start":{"line":1922,"column":6},"end":{"line":1922,"column":27}},"1453":{"start":{"line":1925,"column":6},"end":{"line":1925,"column":19}},"1454":{"start":{"line":1928,"column":6},"end":{"line":1928,"column":71}},"1455":{"start":{"line":1931,"column":6},"end":{"line":1931,"column":42}},"1456":{"start":{"line":1932,"column":6},"end":{"line":1932,"column":37}},"1457":{"start":{"line":1936,"column":2},"end":{"line":1939,"column":3}},"1458":{"start":{"line":1937,"column":4},"end":{"line":1937,"column":39}},"1459":{"start":{"line":1938,"column":4},"end":{"line":1938,"column":48}},"1460":{"start":{"line":1941,"column":2},"end":{"line":1964,"column":5}},"1461":{"start":{"line":1943,"column":6},"end":{"line":1943,"column":45}},"1462":{"start":{"line":1946,"column":6},"end":{"line":1946,"column":48}},"1463":{"start":{"line":1949,"column":6},"end":{"line":1949,"column":55}},"1464":{"start":{"line":1949,"column":25},"end":{"line":1949,"column":55}},"1465":{"start":{"line":1950,"column":6},"end":{"line":1950,"column":66}},"1466":{"start":{"line":1950,"column":34},"end":{"line":1950,"column":66}},"1467":{"start":{"line":1953,"column":6},"end":{"line":1953,"column":31}},"1468":{"start":{"line":1956,"column":6},"end":{"line":1956,"column":23}},"1469":{"start":{"line":1959,"column":6},"end":{"line":1959,"column":23}},"1470":{"start":{"line":1962,"column":6},"end":{"line":1962,"column":23}},"1471":{"start":{"line":1965,"column":2},"end":{"line":1974,"column":20}},"1472":{"start":{"line":1967,"column":6},"end":{"line":1967,"column":39}},"1473":{"start":{"line":1968,"column":6},"end":{"line":1968,"column":64}},"1474":{"start":{"line":1971,"column":6},"end":{"line":1971,"column":55}},"1475":{"start":{"line":1971,"column":25},"end":{"line":1971,"column":55}},"1476":{"start":{"line":1972,"column":6},"end":{"line":1972,"column":38}},"1477":{"start":{"line":1976,"column":2},"end":{"line":1982,"column":4}},"1478":{"start":{"line":1977,"column":4},"end":{"line":1980,"column":6}},"1479":{"start":{"line":1978,"column":6},"end":{"line":1978,"column":70}},"1480":{"start":{"line":1978,"column":57},"end":{"line":1978,"column":70}},"1481":{"start":{"line":1979,"column":6},"end":{"line":1979,"column":50}},"1482":{"start":{"line":1981,"column":4},"end":{"line":1981,"column":94}},"1483":{"start":{"line":1984,"column":2},"end":{"line":1991,"column":4}},"1484":{"start":{"line":1985,"column":4},"end":{"line":1989,"column":6}},"1485":{"start":{"line":1986,"column":6},"end":{"line":1986,"column":60}},"1486":{"start":{"line":1986,"column":47},"end":{"line":1986,"column":60}},"1487":{"start":{"line":1987,"column":6},"end":{"line":1987,"column":70}},"1488":{"start":{"line":1987,"column":57},"end":{"line":1987,"column":70}},"1489":{"start":{"line":1988,"column":6},"end":{"line":1988,"column":50}},"1490":{"start":{"line":1990,"column":4},"end":{"line":1990,"column":91}},"1491":{"start":{"line":1993,"column":2},"end":{"line":1995,"column":4}},"1492":{"start":{"line":1994,"column":4},"end":{"line":1994,"column":45}},"1493":{"start":{"line":1999,"column":2},"end":{"line":2016,"column":4}},"1494":{"start":{"line":2000,"column":4},"end":{"line":2000,"column":19}},"1495":{"start":{"line":2001,"column":4},"end":{"line":2009,"column":5}},"1496":{"start":{"line":2002,"column":6},"end":{"line":2008,"column":7}},"1497":{"start":{"line":2003,"column":8},"end":{"line":2003,"column":42}},"1498":{"start":{"line":2004,"column":8},"end":{"line":2004,"column":46}},"1499":{"start":{"line":2004,"column":27},"end":{"line":2004,"column":46}},"1500":{"start":{"line":2005,"column":8},"end":{"line":2005,"column":42}},"1501":{"start":{"line":2005,"column":25},"end":{"line":2005,"column":42}},"1502":{"start":{"line":2006,"column":8},"end":{"line":2006,"column":54}},"1503":{"start":{"line":2007,"column":8},"end":{"line":2007,"column":37}},"1504":{"start":{"line":2007,"column":25},"end":{"line":2007,"column":37}},"1505":{"start":{"line":2010,"column":4},"end":{"line":2015,"column":5}},"1506":{"start":{"line":2011,"column":6},"end":{"line":2011,"column":19}},"1507":{"start":{"line":2013,"column":6},"end":{"line":2013,"column":34}},"1508":{"start":{"line":2013,"column":19},"end":{"line":2013,"column":34}},"1509":{"start":{"line":2014,"column":6},"end":{"line":2014,"column":14}},"1510":{"start":{"line":2018,"column":2},"end":{"line":2061,"column":4}},"1511":{"start":{"line":2019,"column":48},"end":{"line":2019,"column":88}},"1512":{"start":{"line":2021,"column":6},"end":{"line":2025,"column":7}},"1513":{"start":{"line":2022,"column":8},"end":{"line":2022,"column":38}},"1514":{"start":{"line":2023,"column":8},"end":{"line":2024,"column":59}},"1515":{"start":{"line":2024,"column":10},"end":{"line":2024,"column":59}},"1516":{"start":{"line":2027,"column":40},"end":{"line":2027,"column":79}},"1517":{"start":{"line":2028,"column":35},"end":{"line":2028,"column":49}},"1518":{"start":{"line":2029,"column":41},"end":{"line":2029,"column":99}},"1519":{"start":{"line":2030,"column":53},"end":{"line":2030,"column":77}},"1520":{"start":{"line":2031,"column":50},"end":{"line":2031,"column":75}},"1521":{"start":{"line":2033,"column":6},"end":{"line":2033,"column":90}},"1522":{"start":{"line":2033,"column":65},"end":{"line":2033,"column":90}},"1523":{"start":{"line":2036,"column":6},"end":{"line":2044,"column":7}},"1524":{"start":{"line":2037,"column":8},"end":{"line":2037,"column":38}},"1525":{"start":{"line":2038,"column":8},"end":{"line":2043,"column":9}},"1526":{"start":{"line":2039,"column":10},"end":{"line":2039,"column":64}},"1527":{"start":{"line":2040,"column":10},"end":{"line":2041,"column":38}},"1528":{"start":{"line":2041,"column":12},"end":{"line":2041,"column":38}},"1529":{"start":{"line":2042,"column":10},"end":{"line":2042,"column":16}},"1530":{"start":{"line":2050,"column":6},"end":{"line":2050,"column":88}},"1531":{"start":{"line":2051,"column":6},"end":{"line":2056,"column":7}},"1532":{"start":{"line":2052,"column":8},"end":{"line":2054,"column":37}},"1533":{"start":{"line":2055,"column":8},"end":{"line":2055,"column":51}},"1534":{"start":{"line":2055,"column":20},"end":{"line":2055,"column":51}},"1535":{"start":{"line":2059,"column":6},"end":{"line":2059,"column":52}},"1536":{"start":{"line":2059,"column":31},"end":{"line":2059,"column":52}},"1537":{"start":{"line":2062,"column":2},"end":{"line":2062,"column":72}},"1538":{"start":{"line":2064,"column":2},"end":{"line":2076,"column":4}},"1539":{"start":{"line":2065,"column":4},"end":{"line":2065,"column":53}},"1540":{"start":{"line":2066,"column":4},"end":{"line":2066,"column":20}},"1541":{"start":{"line":2067,"column":4},"end":{"line":2074,"column":5}},"1542":{"start":{"line":2068,"column":6},"end":{"line":2068,"column":52}},"1543":{"start":{"line":2069,"column":6},"end":{"line":2073,"column":9}},"1544":{"start":{"line":2070,"column":8},"end":{"line":2070,"column":51}},"1545":{"start":{"line":2071,"column":8},"end":{"line":2071,"column":95}},"1546":{"start":{"line":2072,"column":8},"end":{"line":2072,"column":27}},"1547":{"start":{"line":2075,"column":4},"end":{"line":2075,"column":49}},"1548":{"start":{"line":2080,"column":2},"end":{"line":2080,"column":23}},"1549":{"start":{"line":2082,"column":2},"end":{"line":2082,"column":60}},"1550":{"start":{"line":2082,"column":42},"end":{"line":2082,"column":57}},"1551":{"start":{"line":2083,"column":2},"end":{"line":2083,"column":53}},"1552":{"start":{"line":2083,"column":34},"end":{"line":2083,"column":50}},"1553":{"start":{"line":2085,"column":2},"end":{"line":2087,"column":4}},"1554":{"start":{"line":2086,"column":4},"end":{"line":2086,"column":32}},"1555":{"start":{"line":2089,"column":2},"end":{"line":2100,"column":4}},"1556":{"start":{"line":2090,"column":4},"end":{"line":2097,"column":5}},"1557":{"start":{"line":2091,"column":6},"end":{"line":2092,"column":72}},"1558":{"start":{"line":2092,"column":65},"end":{"line":2092,"column":72}},"1559":{"start":{"line":2093,"column":6},"end":{"line":2096,"column":7}},"1560":{"start":{"line":2094,"column":8},"end":{"line":2094,"column":53}},"1561":{"start":{"line":2094,"column":27},"end":{"line":2094,"column":53}},"1562":{"start":{"line":2095,"column":8},"end":{"line":2095,"column":36}},"1563":{"start":{"line":2095,"column":29},"end":{"line":2095,"column":36}},"1564":{"start":{"line":2098,"column":4},"end":{"line":2099,"column":49}},"1565":{"start":{"line":2102,"column":2},"end":{"line":2109,"column":5}},"1566":{"start":{"line":2104,"column":6},"end":{"line":2104,"column":76}},"1567":{"start":{"line":2107,"column":6},"end":{"line":2107,"column":34}},"1568":{"start":{"line":2111,"column":2},"end":{"line":2145,"column":4}},"1569":{"start":{"line":2113,"column":4},"end":{"line":2115,"column":5}},"1570":{"start":{"line":2114,"column":6},"end":{"line":2114,"column":30}},"1571":{"start":{"line":2116,"column":4},"end":{"line":2116,"column":87}},"1572":{"start":{"line":2116,"column":18},"end":{"line":2116,"column":87}},"1573":{"start":{"line":2118,"column":4},"end":{"line":2128,"column":5}},"1574":{"start":{"line":2120,"column":6},"end":{"line":2126,"column":7}},"1575":{"start":{"line":2122,"column":8},"end":{"line":2124,"column":9}},"1576":{"start":{"line":2123,"column":10},"end":{"line":2123,"column":23}},"1577":{"start":{"line":2125,"column":8},"end":{"line":2125,"column":26}},"1578":{"start":{"line":2127,"column":6},"end":{"line":2127,"column":18}},"1579":{"start":{"line":2130,"column":4},"end":{"line":2144,"column":28}},"1580":{"start":{"line":2132,"column":8},"end":{"line":2132,"column":60}},"1581":{"start":{"line":2132,"column":53},"end":{"line":2132,"column":60}},"1582":{"start":{"line":2133,"column":8},"end":{"line":2133,"column":92}},"1583":{"start":{"line":2133,"column":68},"end":{"line":2133,"column":92}},"1584":{"start":{"line":2136,"column":8},"end":{"line":2136,"column":63}},"1585":{"start":{"line":2136,"column":56},"end":{"line":2136,"column":63}},"1586":{"start":{"line":2137,"column":8},"end":{"line":2138,"column":85}},"1587":{"start":{"line":2138,"column":10},"end":{"line":2138,"column":85}},"1588":{"start":{"line":2138,"column":52},"end":{"line":2138,"column":85}},"1589":{"start":{"line":2141,"column":8},"end":{"line":2141,"column":43}},"1590":{"start":{"line":2141,"column":36},"end":{"line":2141,"column":43}},"1591":{"start":{"line":2142,"column":8},"end":{"line":2142,"column":109}},"1592":{"start":{"line":2142,"column":79},"end":{"line":2142,"column":109}},"1593":{"start":{"line":2149,"column":2},"end":{"line":2155,"column":4}},"1594":{"start":{"line":2150,"column":4},"end":{"line":2152,"column":7}},"1595":{"start":{"line":2151,"column":6},"end":{"line":2151,"column":24}},"1596":{"start":{"line":2153,"column":4},"end":{"line":2154,"column":44}},"1597":{"start":{"line":2153,"column":15},"end":{"line":2153,"column":39}},"1598":{"start":{"line":2154,"column":9},"end":{"line":2154,"column":44}},"1599":{"start":{"line":2157,"column":2},"end":{"line":2160,"column":4}},"1600":{"start":{"line":2158,"column":4},"end":{"line":2158,"column":48}},"1601":{"start":{"line":2159,"column":4},"end":{"line":2159,"column":33}},"1602":{"start":{"line":2165,"column":2},"end":{"line":2165,"column":44}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":32}},{"start":{"line":16,"column":36},"end":{"line":16,"column":61}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"4":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":33}},{"start":{"line":19,"column":37},"end":{"line":19,"column":47}}]},"5":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":15}},{"start":{"line":21,"column":20},"end":{"line":21,"column":34}}]},"6":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"7":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":13}},{"start":{"line":26,"column":17},"end":{"line":26,"column":31}},{"start":{"line":26,"column":35},"end":{"line":26,"column":43}},{"start":{"line":26,"column":47},"end":{"line":26,"column":60}}]},"8":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"9":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":15},"end":{"line":72,"column":21}},{"start":{"line":72,"column":25},"end":{"line":72,"column":35}}]},"10":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"11":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"12":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":34}},{"start":{"line":75,"column":38},"end":{"line":75,"column":59}}]},"13":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":13},"end":{"line":77,"column":13}},{"start":{"line":77,"column":13},"end":{"line":77,"column":13}}]},"14":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":17},"end":{"line":77,"column":40}},{"start":{"line":77,"column":44},"end":{"line":77,"column":73}}]},"15":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]},"16":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"17":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":10},"end":{"line":90,"column":25}},{"start":{"line":90,"column":30},"end":{"line":90,"column":52}},{"start":{"line":90,"column":56},"end":{"line":90,"column":68}},{"start":{"line":90,"column":72},"end":{"line":90,"column":95}}]},"18":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":6},"end":{"line":91,"column":6}},{"start":{"line":91,"column":6},"end":{"line":91,"column":6}}]},"19":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":10},"end":{"line":91,"column":16}},{"start":{"line":91,"column":20},"end":{"line":91,"column":40}}]},"20":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":7},"end":{"line":92,"column":19}},{"start":{"line":92,"column":24},"end":{"line":92,"column":41}}]},"21":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":6},"end":{"line":94,"column":6}},{"start":{"line":94,"column":6},"end":{"line":94,"column":6}}]},"22":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"23":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":19},"end":{"line":101,"column":29}},{"start":{"line":101,"column":34},"end":{"line":101,"column":66}}]},"24":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":6}},{"start":{"line":102,"column":6},"end":{"line":102,"column":6}}]},"25":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":8}},{"start":{"line":119,"column":8},"end":{"line":119,"column":8}}]},"26":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":8}},{"start":{"line":125,"column":8},"end":{"line":125,"column":8}}]},"27":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":126,"column":8}},{"start":{"line":126,"column":8},"end":{"line":126,"column":8}}]},"28":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":8}},{"start":{"line":127,"column":8},"end":{"line":127,"column":8}}]},"29":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":8}},{"start":{"line":134,"column":8},"end":{"line":134,"column":8}}]},"30":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"31":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":10},"end":{"line":138,"column":33}},{"start":{"line":138,"column":37},"end":{"line":138,"column":52}}]},"32":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":6}},{"start":{"line":139,"column":6},"end":{"line":139,"column":6}}]},"33":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":6}},{"start":{"line":144,"column":6},"end":{"line":144,"column":6}}]},"34":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":6}},{"start":{"line":145,"column":6},"end":{"line":145,"column":6}}]},"35":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":6}},{"start":{"line":147,"column":6},"end":{"line":147,"column":6}}]},"36":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":22},"end":{"line":154,"column":31}},{"start":{"line":154,"column":35},"end":{"line":154,"column":62}}]},"37":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]},"38":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":8}},{"start":{"line":157,"column":8},"end":{"line":157,"column":8}}]},"39":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":160,"column":6}},{"start":{"line":160,"column":6},"end":{"line":160,"column":6}}]},"40":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":8}},{"start":{"line":162,"column":8},"end":{"line":162,"column":8}}]},"41":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":13},"end":{"line":163,"column":13}},{"start":{"line":163,"column":13},"end":{"line":163,"column":13}}]},"42":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":10},"end":{"line":166,"column":10}},{"start":{"line":166,"column":10},"end":{"line":166,"column":10}}]},"43":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":21},"end":{"line":172,"column":36}},{"start":{"line":172,"column":40},"end":{"line":172,"column":76}}]},"44":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":6},"end":{"line":173,"column":6}},{"start":{"line":173,"column":6},"end":{"line":173,"column":6}}]},"45":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"46":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":8}},{"start":{"line":178,"column":8},"end":{"line":178,"column":8}}]},"47":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":16}},{"start":{"line":178,"column":20},"end":{"line":178,"column":35}}]},"48":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":8}},{"start":{"line":184,"column":8},"end":{"line":184,"column":8}}]},"49":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":12},"end":{"line":184,"column":16}},{"start":{"line":184,"column":20},"end":{"line":184,"column":36}},{"start":{"line":184,"column":40},"end":{"line":184,"column":53}},{"start":{"line":184,"column":57},"end":{"line":184,"column":68}},{"start":{"line":184,"column":72},"end":{"line":184,"column":101}}]},"50":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]},"51":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":6},"end":{"line":192,"column":6}},{"start":{"line":192,"column":6},"end":{"line":192,"column":6}}]},"52":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":34},"end":{"line":196,"column":34}},{"start":{"line":196,"column":34},"end":{"line":196,"column":34}}]},"53":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":10},"end":{"line":197,"column":10}},{"start":{"line":197,"column":10},"end":{"line":197,"column":10}}]},"54":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":8}},{"start":{"line":201,"column":8},"end":{"line":201,"column":8}}]},"55":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":54},"end":{"line":205,"column":68}},{"start":{"line":205,"column":71},"end":{"line":205,"column":75}}]},"56":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":6},"end":{"line":214,"column":6}},{"start":{"line":214,"column":6},"end":{"line":214,"column":6}}]},"57":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":8}},{"start":{"line":216,"column":8},"end":{"line":216,"column":8}}]},"58":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":6},"end":{"line":219,"column":6}},{"start":{"line":219,"column":6},"end":{"line":219,"column":6}}]},"59":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"60":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":8},"end":{"line":225,"column":14}},{"start":{"line":225,"column":18},"end":{"line":225,"column":24}}]},"61":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"62":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":8},"end":{"line":230,"column":10}},{"start":{"line":230,"column":14},"end":{"line":230,"column":24}}]},"63":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":4}},{"start":{"line":231,"column":4},"end":{"line":231,"column":4}}]},"64":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":8},"end":{"line":231,"column":10}},{"start":{"line":231,"column":14},"end":{"line":231,"column":20}}]},"65":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":4},"end":{"line":232,"column":4}},{"start":{"line":232,"column":4},"end":{"line":232,"column":4}}]},"66":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"67":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":4},"end":{"line":234,"column":4}},{"start":{"line":234,"column":4},"end":{"line":234,"column":4}}]},"68":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":6},"end":{"line":236,"column":6}},{"start":{"line":236,"column":6},"end":{"line":236,"column":6}}]},"69":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":6},"end":{"line":238,"column":6}},{"start":{"line":238,"column":6},"end":{"line":238,"column":6}}]},"70":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":10},"end":{"line":238,"column":17}},{"start":{"line":238,"column":21},"end":{"line":238,"column":59}}]},"71":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":11},"end":{"line":239,"column":11}},{"start":{"line":239,"column":11},"end":{"line":239,"column":11}}]},"72":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":8}},{"start":{"line":243,"column":8},"end":{"line":243,"column":8}}]},"73":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":12},"end":{"line":243,"column":27}},{"start":{"line":243,"column":31},"end":{"line":243,"column":83}}]},"74":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":6}},{"start":{"line":247,"column":6},"end":{"line":247,"column":6}}]},"75":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":10},"end":{"line":247,"column":16}},{"start":{"line":247,"column":20},"end":{"line":247,"column":26}},{"start":{"line":247,"column":30},"end":{"line":247,"column":65}}]},"76":{"line":248,"type":"cond-expr","locations":[{"start":{"line":248,"column":31},"end":{"line":248,"column":32}},{"start":{"line":248,"column":35},"end":{"line":248,"column":36}}]},"77":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":11},"end":{"line":249,"column":11}},{"start":{"line":249,"column":11},"end":{"line":249,"column":11}}]},"78":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":6},"end":{"line":250,"column":6}},{"start":{"line":250,"column":6},"end":{"line":250,"column":6}}]},"79":{"line":250,"type":"binary-expr","locations":[{"start":{"line":250,"column":10},"end":{"line":250,"column":40}},{"start":{"line":251,"column":10},"end":{"line":251,"column":90}},{"start":{"line":252,"column":10},"end":{"line":252,"column":53}},{"start":{"line":252,"column":57},"end":{"line":252,"column":96}}]},"80":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":8},"end":{"line":266,"column":8}},{"start":{"line":266,"column":8},"end":{"line":266,"column":8}}]},"81":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":6}},{"start":{"line":280,"column":6},"end":{"line":280,"column":6}}]},"82":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":11},"end":{"line":281,"column":11}},{"start":{"line":281,"column":11},"end":{"line":281,"column":11}}]},"83":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":11},"end":{"line":282,"column":11}},{"start":{"line":282,"column":11},"end":{"line":282,"column":11}}]},"84":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":11},"end":{"line":283,"column":11}},{"start":{"line":283,"column":11},"end":{"line":283,"column":11}}]},"85":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":8},"end":{"line":284,"column":8}},{"start":{"line":284,"column":8},"end":{"line":284,"column":8}}]},"86":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":12},"end":{"line":284,"column":16}},{"start":{"line":284,"column":20},"end":{"line":284,"column":40}}]},"87":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":17},"end":{"line":288,"column":23}},{"start":{"line":288,"column":27},"end":{"line":288,"column":28}}]},"88":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":33},"end":{"line":288,"column":36}},{"start":{"line":288,"column":40},"end":{"line":288,"column":41}}]},"89":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":46},"end":{"line":288,"column":50}},{"start":{"line":288,"column":54},"end":{"line":288,"column":55}}]},"90":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":60},"end":{"line":288,"column":64}},{"start":{"line":288,"column":68},"end":{"line":288,"column":69}}]},"91":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":4},"end":{"line":289,"column":4}},{"start":{"line":289,"column":4},"end":{"line":289,"column":4}}]},"92":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"93":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":6},"end":{"line":295,"column":6}},{"start":{"line":295,"column":6},"end":{"line":295,"column":6}}]},"94":{"line":296,"type":"cond-expr","locations":[{"start":{"line":296,"column":46},"end":{"line":296,"column":47}},{"start":{"line":296,"column":50},"end":{"line":296,"column":51}}]},"95":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":13},"end":{"line":297,"column":13}},{"start":{"line":297,"column":13},"end":{"line":297,"column":13}}]},"96":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":49},"end":{"line":299,"column":49}},{"start":{"line":299,"column":49},"end":{"line":299,"column":49}}]},"97":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":8},"end":{"line":300,"column":8}},{"start":{"line":300,"column":8},"end":{"line":300,"column":8}}]},"98":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":13},"end":{"line":301,"column":13}},{"start":{"line":301,"column":13},"end":{"line":301,"column":13}}]},"99":{"line":302,"type":"cond-expr","locations":[{"start":{"line":302,"column":26},"end":{"line":302,"column":29}},{"start":{"line":302,"column":32},"end":{"line":302,"column":33}}]},"100":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":6},"end":{"line":304,"column":6}},{"start":{"line":304,"column":6},"end":{"line":304,"column":6}}]},"101":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":27},"end":{"line":317,"column":27}},{"start":{"line":317,"column":27},"end":{"line":317,"column":27}}]},"102":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":6},"end":{"line":326,"column":6}},{"start":{"line":326,"column":6},"end":{"line":326,"column":6}}]},"103":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":6},"end":{"line":331,"column":6}},{"start":{"line":331,"column":6},"end":{"line":331,"column":6}}]},"104":{"line":331,"type":"binary-expr","locations":[{"start":{"line":331,"column":10},"end":{"line":331,"column":28}},{"start":{"line":331,"column":32},"end":{"line":331,"column":57}}]},"105":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":6},"end":{"line":341,"column":6}},{"start":{"line":341,"column":6},"end":{"line":341,"column":6}}]},"106":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":6},"end":{"line":343,"column":6}},{"start":{"line":343,"column":6},"end":{"line":343,"column":6}}]},"107":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":6},"end":{"line":352,"column":6}},{"start":{"line":352,"column":6},"end":{"line":352,"column":6}}]},"108":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":6},"end":{"line":369,"column":6}},{"start":{"line":369,"column":6},"end":{"line":369,"column":6}}]},"109":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":8},"end":{"line":371,"column":8}},{"start":{"line":371,"column":8},"end":{"line":371,"column":8}}]},"110":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":8},"end":{"line":372,"column":8}},{"start":{"line":372,"column":8},"end":{"line":372,"column":8}}]},"111":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":6},"end":{"line":374,"column":6}},{"start":{"line":374,"column":6},"end":{"line":374,"column":6}}]},"112":{"line":375,"type":"cond-expr","locations":[{"start":{"line":375,"column":64},"end":{"line":375,"column":78}},{"start":{"line":375,"column":81},"end":{"line":375,"column":87}}]},"113":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":6},"end":{"line":377,"column":6}},{"start":{"line":377,"column":6},"end":{"line":377,"column":6}}]},"114":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":8},"end":{"line":378,"column":8}},{"start":{"line":378,"column":8},"end":{"line":378,"column":8}}]},"115":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":12},"end":{"line":378,"column":22}},{"start":{"line":378,"column":26},"end":{"line":378,"column":39}},{"start":{"line":378,"column":43},"end":{"line":378,"column":75}}]},"116":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":6},"end":{"line":379,"column":6}},{"start":{"line":379,"column":6},"end":{"line":379,"column":6}}]},"117":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":6},"end":{"line":415,"column":6}},{"start":{"line":415,"column":6},"end":{"line":415,"column":6}}]},"118":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":6},"end":{"line":416,"column":6}},{"start":{"line":416,"column":6},"end":{"line":416,"column":6}}]},"119":{"line":416,"type":"binary-expr","locations":[{"start":{"line":416,"column":10},"end":{"line":416,"column":19}},{"start":{"line":416,"column":23},"end":{"line":416,"column":56}}]},"120":{"line":417,"type":"cond-expr","locations":[{"start":{"line":417,"column":66},"end":{"line":417,"column":71}},{"start":{"line":417,"column":74},"end":{"line":417,"column":75}}]},"121":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":422,"column":4}},{"start":{"line":422,"column":4},"end":{"line":422,"column":4}}]},"122":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]},"123":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":425,"column":4}},{"start":{"line":425,"column":4},"end":{"line":425,"column":4}}]},"124":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":6},"end":{"line":428,"column":6}},{"start":{"line":428,"column":6},"end":{"line":428,"column":6}}]},"125":{"line":430,"type":"binary-expr","locations":[{"start":{"line":430,"column":32},"end":{"line":430,"column":36}},{"start":{"line":430,"column":40},"end":{"line":430,"column":49}}]},"126":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":6},"end":{"line":441,"column":6}},{"start":{"line":441,"column":6},"end":{"line":441,"column":6}}]},"127":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":6},"end":{"line":442,"column":6}},{"start":{"line":442,"column":6},"end":{"line":442,"column":6}}]},"128":{"line":442,"type":"binary-expr","locations":[{"start":{"line":442,"column":25},"end":{"line":442,"column":35}},{"start":{"line":442,"column":39},"end":{"line":442,"column":40}}]},"129":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":6},"end":{"line":443,"column":6}},{"start":{"line":443,"column":6},"end":{"line":443,"column":6}}]},"130":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":6},"end":{"line":453,"column":6}},{"start":{"line":453,"column":6},"end":{"line":453,"column":6}}]},"131":{"line":453,"type":"binary-expr","locations":[{"start":{"line":453,"column":10},"end":{"line":453,"column":26}},{"start":{"line":453,"column":30},"end":{"line":453,"column":40}}]},"132":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":10},"end":{"line":458,"column":10}},{"start":{"line":458,"column":10},"end":{"line":458,"column":10}}]},"133":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":6},"end":{"line":469,"column":6}},{"start":{"line":469,"column":6},"end":{"line":469,"column":6}}]},"134":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":11},"end":{"line":471,"column":11}},{"start":{"line":471,"column":11},"end":{"line":471,"column":11}}]},"135":{"line":471,"type":"binary-expr","locations":[{"start":{"line":471,"column":15},"end":{"line":471,"column":29}},{"start":{"line":471,"column":33},"end":{"line":471,"column":59}}]},"136":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":6},"end":{"line":480,"column":6}},{"start":{"line":480,"column":6},"end":{"line":480,"column":6}}]},"137":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":6},"end":{"line":488,"column":6}},{"start":{"line":488,"column":6},"end":{"line":488,"column":6}}]},"138":{"line":488,"type":"binary-expr","locations":[{"start":{"line":488,"column":10},"end":{"line":488,"column":26}},{"start":{"line":488,"column":30},"end":{"line":488,"column":37}}]},"139":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":6},"end":{"line":496,"column":6}},{"start":{"line":496,"column":6},"end":{"line":496,"column":6}}]},"140":{"line":496,"type":"binary-expr","locations":[{"start":{"line":496,"column":10},"end":{"line":496,"column":27}},{"start":{"line":496,"column":31},"end":{"line":496,"column":65}}]},"141":{"line":529,"type":"binary-expr","locations":[{"start":{"line":529,"column":36},"end":{"line":529,"column":60}},{"start":{"line":529,"column":64},"end":{"line":529,"column":69}}]},"142":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":6},"end":{"line":531,"column":6}},{"start":{"line":531,"column":6},"end":{"line":531,"column":6}}]},"143":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":4},"end":{"line":537,"column":4}},{"start":{"line":537,"column":4},"end":{"line":537,"column":4}}]},"144":{"line":537,"type":"binary-expr","locations":[{"start":{"line":537,"column":8},"end":{"line":537,"column":16}},{"start":{"line":537,"column":20},"end":{"line":537,"column":28}}]},"145":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":4},"end":{"line":542,"column":4}},{"start":{"line":542,"column":4},"end":{"line":542,"column":4}}]},"146":{"line":543,"type":"cond-expr","locations":[{"start":{"line":543,"column":34},"end":{"line":543,"column":50}},{"start":{"line":543,"column":53},"end":{"line":543,"column":58}}]},"147":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":4},"end":{"line":544,"column":4}},{"start":{"line":544,"column":4},"end":{"line":544,"column":4}}]},"148":{"line":544,"type":"binary-expr","locations":[{"start":{"line":544,"column":8},"end":{"line":544,"column":13}},{"start":{"line":544,"column":17},"end":{"line":544,"column":42}},{"start":{"line":544,"column":46},"end":{"line":544,"column":51}},{"start":{"line":544,"column":55},"end":{"line":544,"column":65}},{"start":{"line":544,"column":69},"end":{"line":544,"column":90}}]},"149":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":6},"end":{"line":546,"column":6}},{"start":{"line":546,"column":6},"end":{"line":546,"column":6}}]},"150":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":6},"end":{"line":555,"column":6}},{"start":{"line":555,"column":6},"end":{"line":555,"column":6}}]},"151":{"line":556,"type":"if","locations":[{"start":{"line":556,"column":6},"end":{"line":556,"column":6}},{"start":{"line":556,"column":6},"end":{"line":556,"column":6}}]},"152":{"line":556,"type":"binary-expr","locations":[{"start":{"line":556,"column":10},"end":{"line":556,"column":23}},{"start":{"line":556,"column":27},"end":{"line":556,"column":36}}]},"153":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":35},"end":{"line":558,"column":35}},{"start":{"line":558,"column":35},"end":{"line":558,"column":35}}]},"154":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":8},"end":{"line":559,"column":8}},{"start":{"line":559,"column":8},"end":{"line":559,"column":8}}]},"155":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":8},"end":{"line":560,"column":8}},{"start":{"line":560,"column":8},"end":{"line":560,"column":8}}]},"156":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":6},"end":{"line":566,"column":6}},{"start":{"line":566,"column":6},"end":{"line":566,"column":6}}]},"157":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":6},"end":{"line":570,"column":6}},{"start":{"line":570,"column":6},"end":{"line":570,"column":6}}]},"158":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":6},"end":{"line":572,"column":6}},{"start":{"line":572,"column":6},"end":{"line":572,"column":6}}]},"159":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":33},"end":{"line":573,"column":34}},{"start":{"line":573,"column":38},"end":{"line":573,"column":44}}]},"160":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":6},"end":{"line":578,"column":6}},{"start":{"line":578,"column":6},"end":{"line":578,"column":6}}]},"161":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":8},"end":{"line":579,"column":8}},{"start":{"line":579,"column":8},"end":{"line":579,"column":8}}]},"162":{"line":579,"type":"binary-expr","locations":[{"start":{"line":579,"column":12},"end":{"line":579,"column":22}},{"start":{"line":579,"column":26},"end":{"line":579,"column":43}}]},"163":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":6},"end":{"line":582,"column":6}},{"start":{"line":582,"column":6},"end":{"line":582,"column":6}}]},"164":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":6},"end":{"line":583,"column":6}},{"start":{"line":583,"column":6},"end":{"line":583,"column":6}}]},"165":{"line":585,"type":"binary-expr","locations":[{"start":{"line":585,"column":15},"end":{"line":585,"column":30}},{"start":{"line":585,"column":34},"end":{"line":585,"column":55}}]},"166":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":6},"end":{"line":586,"column":6}},{"start":{"line":586,"column":6},"end":{"line":586,"column":6}}]},"167":{"line":602,"type":"binary-expr","locations":[{"start":{"line":602,"column":18},"end":{"line":602,"column":42}},{"start":{"line":602,"column":47},"end":{"line":602,"column":62}},{"start":{"line":602,"column":66},"end":{"line":602,"column":87}}]},"168":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":6},"end":{"line":603,"column":6}},{"start":{"line":603,"column":6},"end":{"line":603,"column":6}}]},"169":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":6},"end":{"line":604,"column":6}},{"start":{"line":604,"column":6},"end":{"line":604,"column":6}}]},"170":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":6},"end":{"line":605,"column":6}},{"start":{"line":605,"column":6},"end":{"line":605,"column":6}}]},"171":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":6},"end":{"line":613,"column":6}},{"start":{"line":613,"column":6},"end":{"line":613,"column":6}}]},"172":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":8},"end":{"line":616,"column":8}},{"start":{"line":616,"column":8},"end":{"line":616,"column":8}}]},"173":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":6},"end":{"line":619,"column":6}},{"start":{"line":619,"column":6},"end":{"line":619,"column":6}}]},"174":{"line":621,"type":"cond-expr","locations":[{"start":{"line":621,"column":24},"end":{"line":621,"column":55}},{"start":{"line":621,"column":58},"end":{"line":621,"column":77}}]},"175":{"line":625,"type":"binary-expr","locations":[{"start":{"line":625,"column":18},"end":{"line":625,"column":33}},{"start":{"line":625,"column":37},"end":{"line":625,"column":58}}]},"176":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":6},"end":{"line":626,"column":6}},{"start":{"line":626,"column":6},"end":{"line":626,"column":6}}]},"177":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":6},"end":{"line":634,"column":6}},{"start":{"line":634,"column":6},"end":{"line":634,"column":6}}]},"178":{"line":634,"type":"binary-expr","locations":[{"start":{"line":634,"column":10},"end":{"line":634,"column":20}},{"start":{"line":634,"column":24},"end":{"line":634,"column":39}}]},"179":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":6},"end":{"line":637,"column":6}},{"start":{"line":637,"column":6},"end":{"line":637,"column":6}}]},"180":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":6},"end":{"line":641,"column":6}},{"start":{"line":641,"column":6},"end":{"line":641,"column":6}}]},"181":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":8},"end":{"line":642,"column":8}},{"start":{"line":642,"column":8},"end":{"line":642,"column":8}}]},"182":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":6},"end":{"line":654,"column":6}},{"start":{"line":654,"column":6},"end":{"line":654,"column":6}}]},"183":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":8},"end":{"line":656,"column":8}},{"start":{"line":656,"column":8},"end":{"line":656,"column":8}}]},"184":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":8},"end":{"line":660,"column":8}},{"start":{"line":660,"column":8},"end":{"line":660,"column":8}}]},"185":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":6},"end":{"line":667,"column":6}},{"start":{"line":667,"column":6},"end":{"line":667,"column":6}}]},"186":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":6},"end":{"line":671,"column":6}},{"start":{"line":671,"column":6},"end":{"line":671,"column":6}}]},"187":{"line":671,"type":"binary-expr","locations":[{"start":{"line":671,"column":10},"end":{"line":671,"column":21}},{"start":{"line":671,"column":25},"end":{"line":671,"column":39}},{"start":{"line":671,"column":43},"end":{"line":671,"column":64}}]},"188":{"line":676,"type":"if","locations":[{"start":{"line":676,"column":8},"end":{"line":676,"column":8}},{"start":{"line":676,"column":8},"end":{"line":676,"column":8}}]},"189":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":35},"end":{"line":680,"column":35}},{"start":{"line":680,"column":35},"end":{"line":680,"column":35}}]},"190":{"line":680,"type":"binary-expr","locations":[{"start":{"line":680,"column":39},"end":{"line":680,"column":52}},{"start":{"line":680,"column":56},"end":{"line":680,"column":77}}]},"191":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":6},"end":{"line":682,"column":6}},{"start":{"line":682,"column":6},"end":{"line":682,"column":6}}]},"192":{"line":689,"type":"binary-expr","locations":[{"start":{"line":689,"column":11},"end":{"line":689,"column":30}},{"start":{"line":689,"column":34},"end":{"line":689,"column":45}},{"start":{"line":689,"column":49},"end":{"line":689,"column":63}},{"start":{"line":689,"column":67},"end":{"line":689,"column":89}}]},"193":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":6},"end":{"line":703,"column":6}},{"start":{"line":703,"column":6},"end":{"line":703,"column":6}}]},"194":{"line":704,"type":"cond-expr","locations":[{"start":{"line":704,"column":33},"end":{"line":704,"column":39}},{"start":{"line":704,"column":42},"end":{"line":704,"column":47}}]},"195":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":8},"end":{"line":706,"column":8}},{"start":{"line":706,"column":8},"end":{"line":706,"column":8}}]},"196":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":8},"end":{"line":708,"column":8}},{"start":{"line":708,"column":8},"end":{"line":708,"column":8}}]},"197":{"line":708,"type":"binary-expr","locations":[{"start":{"line":708,"column":12},"end":{"line":708,"column":16}},{"start":{"line":708,"column":20},"end":{"line":708,"column":31}}]},"198":{"line":709,"type":"cond-expr","locations":[{"start":{"line":709,"column":31},"end":{"line":709,"column":73}},{"start":{"line":709,"column":76},"end":{"line":709,"column":79}}]},"199":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":6},"end":{"line":712,"column":6}},{"start":{"line":712,"column":6},"end":{"line":712,"column":6}}]},"200":{"line":713,"type":"cond-expr","locations":[{"start":{"line":713,"column":41},"end":{"line":713,"column":82}},{"start":{"line":713,"column":85},"end":{"line":713,"column":88}}]},"201":{"line":717,"type":"if","locations":[{"start":{"line":717,"column":6},"end":{"line":717,"column":6}},{"start":{"line":717,"column":6},"end":{"line":717,"column":6}}]},"202":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":8},"end":{"line":719,"column":8}},{"start":{"line":719,"column":8},"end":{"line":719,"column":8}}]},"203":{"line":721,"type":"binary-expr","locations":[{"start":{"line":721,"column":36},"end":{"line":721,"column":45}},{"start":{"line":721,"column":49},"end":{"line":721,"column":73}}]},"204":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":6},"end":{"line":730,"column":6}},{"start":{"line":730,"column":6},"end":{"line":730,"column":6}}]},"205":{"line":732,"type":"if","locations":[{"start":{"line":732,"column":8},"end":{"line":732,"column":8}},{"start":{"line":732,"column":8},"end":{"line":732,"column":8}}]},"206":{"line":741,"type":"binary-expr","locations":[{"start":{"line":741,"column":35},"end":{"line":741,"column":50}},{"start":{"line":741,"column":54},"end":{"line":741,"column":103}}]},"207":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":4},"end":{"line":747,"column":4}},{"start":{"line":747,"column":4},"end":{"line":747,"column":4}}]},"208":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":11},"end":{"line":754,"column":11}},{"start":{"line":754,"column":11},"end":{"line":754,"column":11}}]},"209":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":6},"end":{"line":762,"column":6}},{"start":{"line":762,"column":6},"end":{"line":762,"column":6}}]},"210":{"line":763,"type":"if","locations":[{"start":{"line":763,"column":6},"end":{"line":763,"column":6}},{"start":{"line":763,"column":6},"end":{"line":763,"column":6}}]},"211":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":6},"end":{"line":765,"column":6}},{"start":{"line":765,"column":6},"end":{"line":765,"column":6}}]},"212":{"line":769,"type":"if","locations":[{"start":{"line":769,"column":10},"end":{"line":769,"column":10}},{"start":{"line":769,"column":10},"end":{"line":769,"column":10}}]},"213":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":15},"end":{"line":771,"column":15}},{"start":{"line":771,"column":15},"end":{"line":771,"column":15}}]},"214":{"line":775,"type":"cond-expr","locations":[{"start":{"line":775,"column":32},"end":{"line":775,"column":36}},{"start":{"line":775,"column":39},"end":{"line":775,"column":41}}]},"215":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":8},"end":{"line":777,"column":8}},{"start":{"line":777,"column":8},"end":{"line":777,"column":8}}]},"216":{"line":784,"type":"if","locations":[{"start":{"line":784,"column":6},"end":{"line":784,"column":6}},{"start":{"line":784,"column":6},"end":{"line":784,"column":6}}]},"217":{"line":803,"type":"if","locations":[{"start":{"line":803,"column":4},"end":{"line":803,"column":4}},{"start":{"line":803,"column":4},"end":{"line":803,"column":4}}]},"218":{"line":804,"type":"if","locations":[{"start":{"line":804,"column":6},"end":{"line":804,"column":6}},{"start":{"line":804,"column":6},"end":{"line":804,"column":6}}]},"219":{"line":804,"type":"binary-expr","locations":[{"start":{"line":804,"column":10},"end":{"line":804,"column":20}},{"start":{"line":804,"column":24},"end":{"line":804,"column":41}}]},"220":{"line":813,"type":"binary-expr","locations":[{"start":{"line":813,"column":15},"end":{"line":813,"column":29}},{"start":{"line":813,"column":34},"end":{"line":813,"column":53}}]},"221":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":6},"end":{"line":854,"column":6}},{"start":{"line":854,"column":6},"end":{"line":854,"column":6}}]},"222":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":4},"end":{"line":884,"column":4}},{"start":{"line":884,"column":4},"end":{"line":884,"column":4}}]},"223":{"line":884,"type":"binary-expr","locations":[{"start":{"line":884,"column":8},"end":{"line":884,"column":14}},{"start":{"line":884,"column":18},"end":{"line":884,"column":30}}]},"224":{"line":891,"type":"if","locations":[{"start":{"line":891,"column":4},"end":{"line":891,"column":4}},{"start":{"line":891,"column":4},"end":{"line":891,"column":4}}]},"225":{"line":896,"type":"if","locations":[{"start":{"line":896,"column":4},"end":{"line":896,"column":4}},{"start":{"line":896,"column":4},"end":{"line":896,"column":4}}]},"226":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":6},"end":{"line":900,"column":6}},{"start":{"line":900,"column":6},"end":{"line":900,"column":6}}]},"227":{"line":905,"type":"if","locations":[{"start":{"line":905,"column":6},"end":{"line":905,"column":6}},{"start":{"line":905,"column":6},"end":{"line":905,"column":6}}]},"228":{"line":905,"type":"binary-expr","locations":[{"start":{"line":905,"column":10},"end":{"line":905,"column":17}},{"start":{"line":905,"column":21},"end":{"line":905,"column":41}}]},"229":{"line":925,"type":"binary-expr","locations":[{"start":{"line":925,"column":19},"end":{"line":925,"column":23}},{"start":{"line":925,"column":27},"end":{"line":925,"column":31}}]},"230":{"line":936,"type":"if","locations":[{"start":{"line":936,"column":8},"end":{"line":936,"column":8}},{"start":{"line":936,"column":8},"end":{"line":936,"column":8}}]},"231":{"line":937,"type":"if","locations":[{"start":{"line":937,"column":8},"end":{"line":937,"column":8}},{"start":{"line":937,"column":8},"end":{"line":937,"column":8}}]},"232":{"line":943,"type":"binary-expr","locations":[{"start":{"line":943,"column":11},"end":{"line":943,"column":24}},{"start":{"line":943,"column":28},"end":{"line":943,"column":41}},{"start":{"line":943,"column":46},"end":{"line":943,"column":61}},{"start":{"line":943,"column":65},"end":{"line":943,"column":77}},{"start":{"line":943,"column":81},"end":{"line":943,"column":105}}]},"233":{"line":953,"type":"if","locations":[{"start":{"line":953,"column":4},"end":{"line":953,"column":4}},{"start":{"line":953,"column":4},"end":{"line":953,"column":4}}]},"234":{"line":953,"type":"binary-expr","locations":[{"start":{"line":953,"column":35},"end":{"line":953,"column":54}},{"start":{"line":953,"column":58},"end":{"line":953,"column":59}}]},"235":{"line":959,"type":"if","locations":[{"start":{"line":959,"column":50},"end":{"line":959,"column":50}},{"start":{"line":959,"column":50},"end":{"line":959,"column":50}}]},"236":{"line":962,"type":"if","locations":[{"start":{"line":962,"column":6},"end":{"line":962,"column":6}},{"start":{"line":962,"column":6},"end":{"line":962,"column":6}}]},"237":{"line":969,"type":"if","locations":[{"start":{"line":969,"column":4},"end":{"line":969,"column":4}},{"start":{"line":969,"column":4},"end":{"line":969,"column":4}}]},"238":{"line":969,"type":"binary-expr","locations":[{"start":{"line":969,"column":8},"end":{"line":969,"column":29}},{"start":{"line":969,"column":33},"end":{"line":969,"column":38}},{"start":{"line":969,"column":42},"end":{"line":969,"column":56}},{"start":{"line":969,"column":60},"end":{"line":969,"column":92}}]},"239":{"line":991,"type":"if","locations":[{"start":{"line":991,"column":48},"end":{"line":991,"column":48}},{"start":{"line":991,"column":48},"end":{"line":991,"column":48}}]},"240":{"line":991,"type":"binary-expr","locations":[{"start":{"line":991,"column":52},"end":{"line":991,"column":71}},{"start":{"line":991,"column":75},"end":{"line":991,"column":90}}]},"241":{"line":994,"type":"cond-expr","locations":[{"start":{"line":994,"column":59},"end":{"line":994,"column":92}},{"start":{"line":994,"column":95},"end":{"line":994,"column":106}}]},"242":{"line":998,"type":"if","locations":[{"start":{"line":998,"column":8},"end":{"line":998,"column":8}},{"start":{"line":998,"column":8},"end":{"line":998,"column":8}}]},"243":{"line":1014,"type":"if","locations":[{"start":{"line":1014,"column":4},"end":{"line":1014,"column":4}},{"start":{"line":1014,"column":4},"end":{"line":1014,"column":4}}]},"244":{"line":1014,"type":"binary-expr","locations":[{"start":{"line":1014,"column":8},"end":{"line":1014,"column":23}},{"start":{"line":1014,"column":27},"end":{"line":1014,"column":41}}]},"245":{"line":1016,"type":"if","locations":[{"start":{"line":1016,"column":4},"end":{"line":1016,"column":4}},{"start":{"line":1016,"column":4},"end":{"line":1016,"column":4}}]},"246":{"line":1016,"type":"binary-expr","locations":[{"start":{"line":1016,"column":8},"end":{"line":1016,"column":25}},{"start":{"line":1016,"column":29},"end":{"line":1016,"column":76}}]},"247":{"line":1020,"type":"if","locations":[{"start":{"line":1020,"column":6},"end":{"line":1020,"column":6}},{"start":{"line":1020,"column":6},"end":{"line":1020,"column":6}}]},"248":{"line":1020,"type":"binary-expr","locations":[{"start":{"line":1020,"column":10},"end":{"line":1020,"column":19}},{"start":{"line":1020,"column":23},"end":{"line":1020,"column":36}}]},"249":{"line":1023,"type":"if","locations":[{"start":{"line":1023,"column":8},"end":{"line":1023,"column":8}},{"start":{"line":1023,"column":8},"end":{"line":1023,"column":8}}]},"250":{"line":1025,"type":"if","locations":[{"start":{"line":1025,"column":8},"end":{"line":1025,"column":8}},{"start":{"line":1025,"column":8},"end":{"line":1025,"column":8}}]},"251":{"line":1027,"type":"if","locations":[{"start":{"line":1027,"column":15},"end":{"line":1027,"column":15}},{"start":{"line":1027,"column":15},"end":{"line":1027,"column":15}}]},"252":{"line":1031,"type":"if","locations":[{"start":{"line":1031,"column":8},"end":{"line":1031,"column":8}},{"start":{"line":1031,"column":8},"end":{"line":1031,"column":8}}]},"253":{"line":1033,"type":"if","locations":[{"start":{"line":1033,"column":8},"end":{"line":1033,"column":8}},{"start":{"line":1033,"column":8},"end":{"line":1033,"column":8}}]},"254":{"line":1038,"type":"binary-expr","locations":[{"start":{"line":1038,"column":20},"end":{"line":1038,"column":30}},{"start":{"line":1038,"column":34},"end":{"line":1038,"column":52}}]},"255":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":4},"end":{"line":1041,"column":4}},{"start":{"line":1041,"column":4},"end":{"line":1041,"column":4}}]},"256":{"line":1042,"type":"if","locations":[{"start":{"line":1042,"column":6},"end":{"line":1042,"column":6}},{"start":{"line":1042,"column":6},"end":{"line":1042,"column":6}}]},"257":{"line":1045,"type":"cond-expr","locations":[{"start":{"line":1045,"column":37},"end":{"line":1045,"column":43}},{"start":{"line":1045,"column":46},"end":{"line":1045,"column":75}}]},"258":{"line":1057,"type":"if","locations":[{"start":{"line":1057,"column":4},"end":{"line":1057,"column":4}},{"start":{"line":1057,"column":4},"end":{"line":1057,"column":4}}]},"259":{"line":1058,"type":"if","locations":[{"start":{"line":1058,"column":4},"end":{"line":1058,"column":4}},{"start":{"line":1058,"column":4},"end":{"line":1058,"column":4}}]},"260":{"line":1059,"type":"if","locations":[{"start":{"line":1059,"column":4},"end":{"line":1059,"column":4}},{"start":{"line":1059,"column":4},"end":{"line":1059,"column":4}}]},"261":{"line":1060,"type":"if","locations":[{"start":{"line":1060,"column":4},"end":{"line":1060,"column":4}},{"start":{"line":1060,"column":4},"end":{"line":1060,"column":4}}]},"262":{"line":1060,"type":"cond-expr","locations":[{"start":{"line":1060,"column":93},"end":{"line":1060,"column":107}},{"start":{"line":1060,"column":110},"end":{"line":1060,"column":112}}]},"263":{"line":1061,"type":"if","locations":[{"start":{"line":1061,"column":4},"end":{"line":1061,"column":4}},{"start":{"line":1061,"column":4},"end":{"line":1061,"column":4}}]},"264":{"line":1066,"type":"binary-expr","locations":[{"start":{"line":1066,"column":11},"end":{"line":1066,"column":45}},{"start":{"line":1066,"column":49},"end":{"line":1066,"column":67}},{"start":{"line":1067,"column":6},"end":{"line":1067,"column":40}},{"start":{"line":1068,"column":6},"end":{"line":1068,"column":37}}]},"265":{"line":1072,"type":"binary-expr","locations":[{"start":{"line":1072,"column":33},"end":{"line":1072,"column":38}},{"start":{"line":1072,"column":42},"end":{"line":1072,"column":47}}]},"266":{"line":1077,"type":"if","locations":[{"start":{"line":1077,"column":6},"end":{"line":1077,"column":6}},{"start":{"line":1077,"column":6},"end":{"line":1077,"column":6}}]},"267":{"line":1084,"type":"if","locations":[{"start":{"line":1084,"column":6},"end":{"line":1084,"column":6}},{"start":{"line":1084,"column":6},"end":{"line":1084,"column":6}}]},"268":{"line":1099,"type":"if","locations":[{"start":{"line":1099,"column":8},"end":{"line":1099,"column":8}},{"start":{"line":1099,"column":8},"end":{"line":1099,"column":8}}]},"269":{"line":1108,"type":"binary-expr","locations":[{"start":{"line":1108,"column":28},"end":{"line":1108,"column":35}},{"start":{"line":1108,"column":39},"end":{"line":1108,"column":51}}]},"270":{"line":1110,"type":"if","locations":[{"start":{"line":1110,"column":6},"end":{"line":1110,"column":6}},{"start":{"line":1110,"column":6},"end":{"line":1110,"column":6}}]},"271":{"line":1112,"type":"cond-expr","locations":[{"start":{"line":1112,"column":22},"end":{"line":1112,"column":27}},{"start":{"line":1112,"column":30},"end":{"line":1112,"column":35}}]},"272":{"line":1114,"type":"cond-expr","locations":[{"start":{"line":1114,"column":44},"end":{"line":1114,"column":56}},{"start":{"line":1114,"column":59},"end":{"line":1114,"column":70}}]},"273":{"line":1117,"type":"if","locations":[{"start":{"line":1117,"column":6},"end":{"line":1117,"column":6}},{"start":{"line":1117,"column":6},"end":{"line":1117,"column":6}}]},"274":{"line":1117,"type":"binary-expr","locations":[{"start":{"line":1117,"column":10},"end":{"line":1117,"column":21}},{"start":{"line":1117,"column":25},"end":{"line":1117,"column":58}}]},"275":{"line":1123,"type":"if","locations":[{"start":{"line":1123,"column":6},"end":{"line":1123,"column":6}},{"start":{"line":1123,"column":6},"end":{"line":1123,"column":6}}]},"276":{"line":1127,"type":"if","locations":[{"start":{"line":1127,"column":8},"end":{"line":1127,"column":8}},{"start":{"line":1127,"column":8},"end":{"line":1127,"column":8}}]},"277":{"line":1127,"type":"binary-expr","locations":[{"start":{"line":1127,"column":12},"end":{"line":1127,"column":16}},{"start":{"line":1127,"column":20},"end":{"line":1127,"column":31}}]},"278":{"line":1133,"type":"cond-expr","locations":[{"start":{"line":1133,"column":45},"end":{"line":1133,"column":65}},{"start":{"line":1133,"column":68},"end":{"line":1133,"column":73}}]},"279":{"line":1137,"type":"if","locations":[{"start":{"line":1137,"column":8},"end":{"line":1137,"column":8}},{"start":{"line":1137,"column":8},"end":{"line":1137,"column":8}}]},"280":{"line":1142,"type":"if","locations":[{"start":{"line":1142,"column":6},"end":{"line":1142,"column":6}},{"start":{"line":1142,"column":6},"end":{"line":1142,"column":6}}]},"281":{"line":1147,"type":"if","locations":[{"start":{"line":1147,"column":6},"end":{"line":1147,"column":6}},{"start":{"line":1147,"column":6},"end":{"line":1147,"column":6}}]},"282":{"line":1147,"type":"binary-expr","locations":[{"start":{"line":1147,"column":10},"end":{"line":1147,"column":21}},{"start":{"line":1147,"column":25},"end":{"line":1147,"column":53}}]},"283":{"line":1152,"type":"if","locations":[{"start":{"line":1152,"column":6},"end":{"line":1152,"column":6}},{"start":{"line":1152,"column":6},"end":{"line":1152,"column":6}}]},"284":{"line":1152,"type":"binary-expr","locations":[{"start":{"line":1152,"column":10},"end":{"line":1152,"column":21}},{"start":{"line":1152,"column":25},"end":{"line":1152,"column":34}},{"start":{"line":1152,"column":38},"end":{"line":1152,"column":66}}]},"285":{"line":1163,"type":"if","locations":[{"start":{"line":1163,"column":27},"end":{"line":1163,"column":27}},{"start":{"line":1163,"column":27},"end":{"line":1163,"column":27}}]},"286":{"line":1173,"type":"binary-expr","locations":[{"start":{"line":1173,"column":14},"end":{"line":1173,"column":27}},{"start":{"line":1173,"column":31},"end":{"line":1173,"column":39}}]},"287":{"line":1174,"type":"if","locations":[{"start":{"line":1174,"column":4},"end":{"line":1174,"column":4}},{"start":{"line":1174,"column":4},"end":{"line":1174,"column":4}}]},"288":{"line":1174,"type":"binary-expr","locations":[{"start":{"line":1174,"column":8},"end":{"line":1174,"column":22}},{"start":{"line":1174,"column":26},"end":{"line":1174,"column":50}}]},"289":{"line":1175,"type":"if","locations":[{"start":{"line":1175,"column":4},"end":{"line":1175,"column":4}},{"start":{"line":1175,"column":4},"end":{"line":1175,"column":4}}]},"290":{"line":1176,"type":"if","locations":[{"start":{"line":1176,"column":6},"end":{"line":1176,"column":6}},{"start":{"line":1176,"column":6},"end":{"line":1176,"column":6}}]},"291":{"line":1177,"type":"if","locations":[{"start":{"line":1177,"column":6},"end":{"line":1177,"column":6}},{"start":{"line":1177,"column":6},"end":{"line":1177,"column":6}}]},"292":{"line":1179,"type":"if","locations":[{"start":{"line":1179,"column":4},"end":{"line":1179,"column":4}},{"start":{"line":1179,"column":4},"end":{"line":1179,"column":4}}]},"293":{"line":1181,"type":"if","locations":[{"start":{"line":1181,"column":6},"end":{"line":1181,"column":6}},{"start":{"line":1181,"column":6},"end":{"line":1181,"column":6}}]},"294":{"line":1182,"type":"if","locations":[{"start":{"line":1182,"column":11},"end":{"line":1182,"column":11}},{"start":{"line":1182,"column":11},"end":{"line":1182,"column":11}}]},"295":{"line":1189,"type":"if","locations":[{"start":{"line":1189,"column":4},"end":{"line":1189,"column":4}},{"start":{"line":1189,"column":4},"end":{"line":1189,"column":4}}]},"296":{"line":1193,"type":"switch","locations":[{"start":{"line":1194,"column":4},"end":{"line":1194,"column":13}},{"start":{"line":1194,"column":14},"end":{"line":1194,"column":23}},{"start":{"line":1194,"column":24},"end":{"line":1194,"column":48}},{"start":{"line":1195,"column":4},"end":{"line":1195,"column":29}},{"start":{"line":1196,"column":4},"end":{"line":1196,"column":33}},{"start":{"line":1197,"column":4},"end":{"line":1197,"column":16}},{"start":{"line":1197,"column":17},"end":{"line":1197,"column":45}}]},"297":{"line":1201,"type":"switch","locations":[{"start":{"line":1202,"column":4},"end":{"line":1202,"column":14}},{"start":{"line":1202,"column":15},"end":{"line":1202,"column":25}},{"start":{"line":1202,"column":26},"end":{"line":1202,"column":37}},{"start":{"line":1202,"column":38},"end":{"line":1202,"column":49}},{"start":{"line":1202,"column":50},"end":{"line":1202,"column":59}},{"start":{"line":1202,"column":60},"end":{"line":1202,"column":69}},{"start":{"line":1202,"column":70},"end":{"line":1202,"column":80}},{"start":{"line":1202,"column":81},"end":{"line":1202,"column":91}},{"start":{"line":1203,"column":4},"end":{"line":1203,"column":14}},{"start":{"line":1203,"column":15},"end":{"line":1203,"column":46}}]},"298":{"line":1207,"type":"if","locations":[{"start":{"line":1207,"column":4},"end":{"line":1207,"column":4}},{"start":{"line":1207,"column":4},"end":{"line":1207,"column":4}}]},"299":{"line":1208,"type":"switch","locations":[{"start":{"line":1209,"column":4},"end":{"line":1209,"column":35}},{"start":{"line":1210,"column":4},"end":{"line":1210,"column":33}},{"start":{"line":1211,"column":4},"end":{"line":1211,"column":33}},{"start":{"line":1212,"column":4},"end":{"line":1212,"column":18}},{"start":{"line":1213,"column":4},"end":{"line":1215,"column":43}}]},"300":{"line":1214,"type":"if","locations":[{"start":{"line":1214,"column":6},"end":{"line":1214,"column":6}},{"start":{"line":1214,"column":6},"end":{"line":1214,"column":6}}]},"301":{"line":1220,"type":"if","locations":[{"start":{"line":1220,"column":4},"end":{"line":1220,"column":4}},{"start":{"line":1220,"column":4},"end":{"line":1220,"column":4}}]},"302":{"line":1220,"type":"binary-expr","locations":[{"start":{"line":1220,"column":8},"end":{"line":1220,"column":14}},{"start":{"line":1220,"column":18},"end":{"line":1220,"column":28}}]},"303":{"line":1221,"type":"if","locations":[{"start":{"line":1221,"column":4},"end":{"line":1221,"column":4}},{"start":{"line":1221,"column":4},"end":{"line":1221,"column":4}}]},"304":{"line":1231,"type":"if","locations":[{"start":{"line":1231,"column":6},"end":{"line":1231,"column":6}},{"start":{"line":1231,"column":6},"end":{"line":1231,"column":6}}]},"305":{"line":1237,"type":"binary-expr","locations":[{"start":{"line":1237,"column":11},"end":{"line":1237,"column":35}},{"start":{"line":1237,"column":39},"end":{"line":1237,"column":75}}]},"306":{"line":1260,"type":"if","locations":[{"start":{"line":1260,"column":8},"end":{"line":1260,"column":8}},{"start":{"line":1260,"column":8},"end":{"line":1260,"column":8}}]},"307":{"line":1270,"type":"if","locations":[{"start":{"line":1270,"column":4},"end":{"line":1270,"column":4}},{"start":{"line":1270,"column":4},"end":{"line":1270,"column":4}}]},"308":{"line":1275,"type":"cond-expr","locations":[{"start":{"line":1275,"column":28},"end":{"line":1275,"column":47}},{"start":{"line":1275,"column":50},"end":{"line":1275,"column":57}}]},"309":{"line":1279,"type":"if","locations":[{"start":{"line":1279,"column":4},"end":{"line":1279,"column":4}},{"start":{"line":1279,"column":4},"end":{"line":1279,"column":4}}]},"310":{"line":1279,"type":"binary-expr","locations":[{"start":{"line":1279,"column":8},"end":{"line":1279,"column":22}},{"start":{"line":1279,"column":26},"end":{"line":1279,"column":41}}]},"311":{"line":1285,"type":"if","locations":[{"start":{"line":1285,"column":4},"end":{"line":1285,"column":4}},{"start":{"line":1285,"column":4},"end":{"line":1285,"column":4}}]},"312":{"line":1285,"type":"binary-expr","locations":[{"start":{"line":1285,"column":8},"end":{"line":1285,"column":13}},{"start":{"line":1285,"column":17},"end":{"line":1285,"column":24}}]},"313":{"line":1288,"type":"if","locations":[{"start":{"line":1288,"column":4},"end":{"line":1288,"column":4}},{"start":{"line":1288,"column":4},"end":{"line":1288,"column":4}}]},"314":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":6},"end":{"line":1289,"column":6}},{"start":{"line":1289,"column":6},"end":{"line":1289,"column":6}}]},"315":{"line":1289,"type":"binary-expr","locations":[{"start":{"line":1289,"column":10},"end":{"line":1289,"column":43}},{"start":{"line":1289,"column":47},"end":{"line":1289,"column":76}}]},"316":{"line":1294,"type":"if","locations":[{"start":{"line":1294,"column":8},"end":{"line":1294,"column":8}},{"start":{"line":1294,"column":8},"end":{"line":1294,"column":8}}]},"317":{"line":1294,"type":"binary-expr","locations":[{"start":{"line":1294,"column":12},"end":{"line":1294,"column":19}},{"start":{"line":1294,"column":24},"end":{"line":1294,"column":76}}]},"318":{"line":1302,"type":"binary-expr","locations":[{"start":{"line":1302,"column":29},"end":{"line":1302,"column":33}},{"start":{"line":1302,"column":37},"end":{"line":1302,"column":56}}]},"319":{"line":1303,"type":"if","locations":[{"start":{"line":1303,"column":4},"end":{"line":1303,"column":4}},{"start":{"line":1303,"column":4},"end":{"line":1303,"column":4}}]},"320":{"line":1305,"type":"binary-expr","locations":[{"start":{"line":1305,"column":30},"end":{"line":1305,"column":37}},{"start":{"line":1305,"column":41},"end":{"line":1305,"column":44}}]},"321":{"line":1308,"type":"if","locations":[{"start":{"line":1308,"column":8},"end":{"line":1308,"column":8}},{"start":{"line":1308,"column":8},"end":{"line":1308,"column":8}}]},"322":{"line":1309,"type":"cond-expr","locations":[{"start":{"line":1309,"column":37},"end":{"line":1309,"column":55}},{"start":{"line":1309,"column":58},"end":{"line":1309,"column":94}}]},"323":{"line":1310,"type":"binary-expr","locations":[{"start":{"line":1310,"column":22},"end":{"line":1310,"column":29}},{"start":{"line":1310,"column":33},"end":{"line":1310,"column":37}},{"start":{"line":1310,"column":41},"end":{"line":1310,"column":45}}]},"324":{"line":1317,"type":"if","locations":[{"start":{"line":1317,"column":8},"end":{"line":1317,"column":8}},{"start":{"line":1317,"column":8},"end":{"line":1317,"column":8}}]},"325":{"line":1319,"type":"if","locations":[{"start":{"line":1319,"column":8},"end":{"line":1319,"column":8}},{"start":{"line":1319,"column":8},"end":{"line":1319,"column":8}}]},"326":{"line":1319,"type":"binary-expr","locations":[{"start":{"line":1319,"column":12},"end":{"line":1319,"column":26}},{"start":{"line":1319,"column":30},"end":{"line":1319,"column":50}}]},"327":{"line":1322,"type":"cond-expr","locations":[{"start":{"line":1322,"column":36},"end":{"line":1322,"column":38}},{"start":{"line":1322,"column":41},"end":{"line":1322,"column":46}}]},"328":{"line":1324,"type":"if","locations":[{"start":{"line":1324,"column":10},"end":{"line":1324,"column":10}},{"start":{"line":1324,"column":10},"end":{"line":1324,"column":10}}]},"329":{"line":1328,"type":"if","locations":[{"start":{"line":1328,"column":8},"end":{"line":1328,"column":8}},{"start":{"line":1328,"column":8},"end":{"line":1328,"column":8}}]},"330":{"line":1335,"type":"binary-expr","locations":[{"start":{"line":1335,"column":16},"end":{"line":1335,"column":35}},{"start":{"line":1335,"column":39},"end":{"line":1335,"column":58}}]},"331":{"line":1336,"type":"if","locations":[{"start":{"line":1336,"column":4},"end":{"line":1336,"column":4}},{"start":{"line":1336,"column":4},"end":{"line":1336,"column":4}}]},"332":{"line":1340,"type":"if","locations":[{"start":{"line":1340,"column":8},"end":{"line":1340,"column":8}},{"start":{"line":1340,"column":8},"end":{"line":1340,"column":8}}]},"333":{"line":1342,"type":"if","locations":[{"start":{"line":1342,"column":13},"end":{"line":1342,"column":13}},{"start":{"line":1342,"column":13},"end":{"line":1342,"column":13}}]},"334":{"line":1342,"type":"binary-expr","locations":[{"start":{"line":1342,"column":17},"end":{"line":1342,"column":38}},{"start":{"line":1342,"column":43},"end":{"line":1342,"column":50}},{"start":{"line":1342,"column":54},"end":{"line":1342,"column":81}}]},"335":{"line":1347,"type":"if","locations":[{"start":{"line":1347,"column":6},"end":{"line":1347,"column":6}},{"start":{"line":1347,"column":6},"end":{"line":1347,"column":6}}]},"336":{"line":1350,"type":"if","locations":[{"start":{"line":1350,"column":4},"end":{"line":1350,"column":4}},{"start":{"line":1350,"column":4},"end":{"line":1350,"column":4}}]},"337":{"line":1355,"type":"if","locations":[{"start":{"line":1355,"column":11},"end":{"line":1355,"column":11}},{"start":{"line":1355,"column":11},"end":{"line":1355,"column":11}}]},"338":{"line":1356,"type":"binary-expr","locations":[{"start":{"line":1356,"column":21},"end":{"line":1356,"column":32}},{"start":{"line":1356,"column":36},"end":{"line":1356,"column":61}}]},"339":{"line":1360,"type":"if","locations":[{"start":{"line":1360,"column":8},"end":{"line":1360,"column":8}},{"start":{"line":1360,"column":8},"end":{"line":1360,"column":8}}]},"340":{"line":1368,"type":"if","locations":[{"start":{"line":1368,"column":6},"end":{"line":1368,"column":6}},{"start":{"line":1368,"column":6},"end":{"line":1368,"column":6}}]},"341":{"line":1374,"type":"if","locations":[{"start":{"line":1374,"column":6},"end":{"line":1374,"column":6}},{"start":{"line":1374,"column":6},"end":{"line":1374,"column":6}}]},"342":{"line":1388,"type":"if","locations":[{"start":{"line":1388,"column":8},"end":{"line":1388,"column":8}},{"start":{"line":1388,"column":8},"end":{"line":1388,"column":8}}]},"343":{"line":1389,"type":"if","locations":[{"start":{"line":1389,"column":10},"end":{"line":1389,"column":10}},{"start":{"line":1389,"column":10},"end":{"line":1389,"column":10}}]},"344":{"line":1389,"type":"binary-expr","locations":[{"start":{"line":1389,"column":14},"end":{"line":1389,"column":42}},{"start":{"line":1389,"column":46},"end":{"line":1389,"column":70}}]},"345":{"line":1393,"type":"if","locations":[{"start":{"line":1393,"column":12},"end":{"line":1393,"column":12}},{"start":{"line":1393,"column":12},"end":{"line":1393,"column":12}}]},"346":{"line":1400,"type":"if","locations":[{"start":{"line":1400,"column":6},"end":{"line":1400,"column":6}},{"start":{"line":1400,"column":6},"end":{"line":1400,"column":6}}]},"347":{"line":1403,"type":"binary-expr","locations":[{"start":{"line":1403,"column":22},"end":{"line":1403,"column":34}},{"start":{"line":1403,"column":38},"end":{"line":1403,"column":43}}]},"348":{"line":1406,"type":"if","locations":[{"start":{"line":1406,"column":10},"end":{"line":1406,"column":10}},{"start":{"line":1406,"column":10},"end":{"line":1406,"column":10}}]},"349":{"line":1409,"type":"if","locations":[{"start":{"line":1409,"column":10},"end":{"line":1409,"column":10}},{"start":{"line":1409,"column":10},"end":{"line":1409,"column":10}}]},"350":{"line":1409,"type":"binary-expr","locations":[{"start":{"line":1409,"column":14},"end":{"line":1409,"column":27}},{"start":{"line":1409,"column":31},"end":{"line":1409,"column":49}}]},"351":{"line":1414,"type":"if","locations":[{"start":{"line":1414,"column":12},"end":{"line":1414,"column":12}},{"start":{"line":1414,"column":12},"end":{"line":1414,"column":12}}]},"352":{"line":1418,"type":"if","locations":[{"start":{"line":1418,"column":10},"end":{"line":1418,"column":10}},{"start":{"line":1418,"column":10},"end":{"line":1418,"column":10}}]},"353":{"line":1426,"type":"if","locations":[{"start":{"line":1426,"column":6},"end":{"line":1426,"column":6}},{"start":{"line":1426,"column":6},"end":{"line":1426,"column":6}}]},"354":{"line":1426,"type":"binary-expr","locations":[{"start":{"line":1426,"column":10},"end":{"line":1426,"column":14}},{"start":{"line":1426,"column":18},"end":{"line":1426,"column":26}}]},"355":{"line":1428,"type":"if","locations":[{"start":{"line":1428,"column":6},"end":{"line":1428,"column":6}},{"start":{"line":1428,"column":6},"end":{"line":1428,"column":6}}]},"356":{"line":1432,"type":"if","locations":[{"start":{"line":1432,"column":6},"end":{"line":1432,"column":6}},{"start":{"line":1432,"column":6},"end":{"line":1432,"column":6}}]},"357":{"line":1434,"type":"binary-expr","locations":[{"start":{"line":1434,"column":6},"end":{"line":1434,"column":38}},{"start":{"line":1434,"column":42},"end":{"line":1434,"column":63}}]},"358":{"line":1435,"type":"if","locations":[{"start":{"line":1435,"column":6},"end":{"line":1435,"column":6}},{"start":{"line":1435,"column":6},"end":{"line":1435,"column":6}}]},"359":{"line":1453,"type":"if","locations":[{"start":{"line":1453,"column":6},"end":{"line":1453,"column":6}},{"start":{"line":1453,"column":6},"end":{"line":1453,"column":6}}]},"360":{"line":1456,"type":"if","locations":[{"start":{"line":1456,"column":8},"end":{"line":1456,"column":8}},{"start":{"line":1456,"column":8},"end":{"line":1456,"column":8}}]},"361":{"line":1456,"type":"binary-expr","locations":[{"start":{"line":1456,"column":12},"end":{"line":1456,"column":31}},{"start":{"line":1456,"column":35},"end":{"line":1456,"column":54}}]},"362":{"line":1457,"type":"if","locations":[{"start":{"line":1457,"column":8},"end":{"line":1457,"column":8}},{"start":{"line":1457,"column":8},"end":{"line":1457,"column":8}}]},"363":{"line":1457,"type":"binary-expr","locations":[{"start":{"line":1457,"column":12},"end":{"line":1457,"column":31}},{"start":{"line":1457,"column":35},"end":{"line":1457,"column":54}}]},"364":{"line":1465,"type":"cond-expr","locations":[{"start":{"line":1465,"column":47},"end":{"line":1465,"column":54}},{"start":{"line":1465,"column":57},"end":{"line":1465,"column":63}}]},"365":{"line":1470,"type":"if","locations":[{"start":{"line":1470,"column":6},"end":{"line":1470,"column":6}},{"start":{"line":1470,"column":6},"end":{"line":1470,"column":6}}]},"366":{"line":1472,"type":"if","locations":[{"start":{"line":1472,"column":8},"end":{"line":1472,"column":8}},{"start":{"line":1472,"column":8},"end":{"line":1472,"column":8}}]},"367":{"line":1473,"type":"cond-expr","locations":[{"start":{"line":1473,"column":57},"end":{"line":1473,"column":92}},{"start":{"line":1473,"column":95},"end":{"line":1473,"column":100}}]},"368":{"line":1474,"type":"if","locations":[{"start":{"line":1474,"column":13},"end":{"line":1474,"column":13}},{"start":{"line":1474,"column":13},"end":{"line":1474,"column":13}}]},"369":{"line":1474,"type":"binary-expr","locations":[{"start":{"line":1474,"column":17},"end":{"line":1474,"column":22}},{"start":{"line":1474,"column":26},"end":{"line":1474,"column":56}}]},"370":{"line":1478,"type":"if","locations":[{"start":{"line":1478,"column":6},"end":{"line":1478,"column":6}},{"start":{"line":1478,"column":6},"end":{"line":1478,"column":6}}]},"371":{"line":1478,"type":"binary-expr","locations":[{"start":{"line":1478,"column":10},"end":{"line":1478,"column":23}},{"start":{"line":1478,"column":27},"end":{"line":1478,"column":47}},{"start":{"line":1478,"column":51},"end":{"line":1478,"column":72}}]},"372":{"line":1485,"type":"if","locations":[{"start":{"line":1485,"column":6},"end":{"line":1485,"column":6}},{"start":{"line":1485,"column":6},"end":{"line":1485,"column":6}}]},"373":{"line":1487,"type":"if","locations":[{"start":{"line":1487,"column":8},"end":{"line":1487,"column":8}},{"start":{"line":1487,"column":8},"end":{"line":1487,"column":8}}]},"374":{"line":1488,"type":"if","locations":[{"start":{"line":1488,"column":8},"end":{"line":1488,"column":8}},{"start":{"line":1488,"column":8},"end":{"line":1488,"column":8}}]},"375":{"line":1493,"type":"binary-expr","locations":[{"start":{"line":1493,"column":74},"end":{"line":1493,"column":79}},{"start":{"line":1493,"column":83},"end":{"line":1493,"column":101}}]},"376":{"line":1494,"type":"if","locations":[{"start":{"line":1494,"column":10},"end":{"line":1494,"column":10}},{"start":{"line":1494,"column":10},"end":{"line":1494,"column":10}}]},"377":{"line":1496,"type":"binary-expr","locations":[{"start":{"line":1496,"column":28},"end":{"line":1496,"column":65}},{"start":{"line":1496,"column":69},"end":{"line":1496,"column":88}},{"start":{"line":1496,"column":92},"end":{"line":1496,"column":121}}]},"378":{"line":1498,"type":"if","locations":[{"start":{"line":1498,"column":14},"end":{"line":1498,"column":14}},{"start":{"line":1498,"column":14},"end":{"line":1498,"column":14}}]},"379":{"line":1498,"type":"binary-expr","locations":[{"start":{"line":1498,"column":18},"end":{"line":1498,"column":23}},{"start":{"line":1498,"column":27},"end":{"line":1498,"column":46}},{"start":{"line":1498,"column":50},"end":{"line":1498,"column":63}}]},"380":{"line":1499,"type":"cond-expr","locations":[{"start":{"line":1499,"column":60},"end":{"line":1499,"column":63}},{"start":{"line":1499,"column":66},"end":{"line":1499,"column":71}}]},"381":{"line":1507,"type":"if","locations":[{"start":{"line":1507,"column":8},"end":{"line":1507,"column":8}},{"start":{"line":1507,"column":8},"end":{"line":1507,"column":8}}]},"382":{"line":1524,"type":"if","locations":[{"start":{"line":1524,"column":6},"end":{"line":1524,"column":6}},{"start":{"line":1524,"column":6},"end":{"line":1524,"column":6}}]},"383":{"line":1524,"type":"binary-expr","locations":[{"start":{"line":1524,"column":10},"end":{"line":1524,"column":42}},{"start":{"line":1524,"column":46},"end":{"line":1524,"column":77}}]},"384":{"line":1531,"type":"binary-expr","locations":[{"start":{"line":1531,"column":40},"end":{"line":1531,"column":44}},{"start":{"line":1531,"column":48},"end":{"line":1531,"column":73}}]},"385":{"line":1539,"type":"if","locations":[{"start":{"line":1539,"column":6},"end":{"line":1539,"column":6}},{"start":{"line":1539,"column":6},"end":{"line":1539,"column":6}}]},"386":{"line":1542,"type":"if","locations":[{"start":{"line":1542,"column":8},"end":{"line":1542,"column":8}},{"start":{"line":1542,"column":8},"end":{"line":1542,"column":8}}]},"387":{"line":1542,"type":"binary-expr","locations":[{"start":{"line":1542,"column":12},"end":{"line":1542,"column":19}},{"start":{"line":1542,"column":24},"end":{"line":1542,"column":39}},{"start":{"line":1542,"column":43},"end":{"line":1542,"column":59}},{"start":{"line":1543,"column":12},"end":{"line":1543,"column":43}}]},"388":{"line":1546,"type":"if","locations":[{"start":{"line":1546,"column":13},"end":{"line":1546,"column":13}},{"start":{"line":1546,"column":13},"end":{"line":1546,"column":13}}]},"389":{"line":1546,"type":"binary-expr","locations":[{"start":{"line":1546,"column":17},"end":{"line":1546,"column":44}},{"start":{"line":1546,"column":48},"end":{"line":1546,"column":63}}]},"390":{"line":1552,"type":"if","locations":[{"start":{"line":1552,"column":8},"end":{"line":1552,"column":8}},{"start":{"line":1552,"column":8},"end":{"line":1552,"column":8}}]},"391":{"line":1552,"type":"binary-expr","locations":[{"start":{"line":1552,"column":12},"end":{"line":1552,"column":19}},{"start":{"line":1552,"column":23},"end":{"line":1552,"column":56}}]},"392":{"line":1555,"type":"if","locations":[{"start":{"line":1555,"column":8},"end":{"line":1555,"column":8}},{"start":{"line":1555,"column":8},"end":{"line":1555,"column":8}}]},"393":{"line":1555,"type":"binary-expr","locations":[{"start":{"line":1555,"column":12},"end":{"line":1555,"column":19}},{"start":{"line":1555,"column":23},"end":{"line":1555,"column":47}},{"start":{"line":1555,"column":51},"end":{"line":1555,"column":58}}]},"394":{"line":1562,"type":"if","locations":[{"start":{"line":1562,"column":6},"end":{"line":1562,"column":6}},{"start":{"line":1562,"column":6},"end":{"line":1562,"column":6}}]},"395":{"line":1565,"type":"if","locations":[{"start":{"line":1565,"column":8},"end":{"line":1565,"column":8}},{"start":{"line":1565,"column":8},"end":{"line":1565,"column":8}}]},"396":{"line":1567,"type":"if","locations":[{"start":{"line":1567,"column":13},"end":{"line":1567,"column":13}},{"start":{"line":1567,"column":13},"end":{"line":1567,"column":13}}]},"397":{"line":1573,"type":"if","locations":[{"start":{"line":1573,"column":6},"end":{"line":1573,"column":6}},{"start":{"line":1573,"column":6},"end":{"line":1573,"column":6}}]},"398":{"line":1575,"type":"if","locations":[{"start":{"line":1575,"column":8},"end":{"line":1575,"column":8}},{"start":{"line":1575,"column":8},"end":{"line":1575,"column":8}}]},"399":{"line":1575,"type":"binary-expr","locations":[{"start":{"line":1575,"column":12},"end":{"line":1575,"column":26}},{"start":{"line":1575,"column":30},"end":{"line":1575,"column":59}}]},"400":{"line":1585,"type":"binary-expr","locations":[{"start":{"line":1585,"column":30},"end":{"line":1585,"column":41}},{"start":{"line":1585,"column":45},"end":{"line":1585,"column":50}}]},"401":{"line":1603,"type":"if","locations":[{"start":{"line":1603,"column":6},"end":{"line":1603,"column":6}},{"start":{"line":1603,"column":6},"end":{"line":1603,"column":6}}]},"402":{"line":1604,"type":"if","locations":[{"start":{"line":1604,"column":8},"end":{"line":1604,"column":8}},{"start":{"line":1604,"column":8},"end":{"line":1604,"column":8}}]},"403":{"line":1605,"type":"if","locations":[{"start":{"line":1605,"column":8},"end":{"line":1605,"column":8}},{"start":{"line":1605,"column":8},"end":{"line":1605,"column":8}}]},"404":{"line":1608,"type":"if","locations":[{"start":{"line":1608,"column":6},"end":{"line":1608,"column":6}},{"start":{"line":1608,"column":6},"end":{"line":1608,"column":6}}]},"405":{"line":1609,"type":"if","locations":[{"start":{"line":1609,"column":8},"end":{"line":1609,"column":8}},{"start":{"line":1609,"column":8},"end":{"line":1609,"column":8}}]},"406":{"line":1616,"type":"cond-expr","locations":[{"start":{"line":1616,"column":18},"end":{"line":1616,"column":29}},{"start":{"line":1616,"column":32},"end":{"line":1616,"column":37}}]},"407":{"line":1623,"type":"cond-expr","locations":[{"start":{"line":1623,"column":21},"end":{"line":1623,"column":52}},{"start":{"line":1623,"column":55},"end":{"line":1623,"column":60}}]},"408":{"line":1627,"type":"cond-expr","locations":[{"start":{"line":1627,"column":48},"end":{"line":1627,"column":71}},{"start":{"line":1627,"column":74},"end":{"line":1627,"column":78}}]},"409":{"line":1632,"type":"binary-expr","locations":[{"start":{"line":1632,"column":18},"end":{"line":1632,"column":28}},{"start":{"line":1632,"column":32},"end":{"line":1632,"column":37}}]},"410":{"line":1639,"type":"binary-expr","locations":[{"start":{"line":1639,"column":6},"end":{"line":1639,"column":38}},{"start":{"line":1639,"column":42},"end":{"line":1639,"column":63}}]},"411":{"line":1644,"type":"binary-expr","locations":[{"start":{"line":1644,"column":14},"end":{"line":1644,"column":24}},{"start":{"line":1644,"column":28},"end":{"line":1644,"column":33}}]},"412":{"line":1650,"type":"if","locations":[{"start":{"line":1650,"column":8},"end":{"line":1650,"column":8}},{"start":{"line":1650,"column":8},"end":{"line":1650,"column":8}}]},"413":{"line":1652,"type":"if","locations":[{"start":{"line":1652,"column":10},"end":{"line":1652,"column":10}},{"start":{"line":1652,"column":10},"end":{"line":1652,"column":10}}]},"414":{"line":1654,"type":"if","locations":[{"start":{"line":1654,"column":15},"end":{"line":1654,"column":15}},{"start":{"line":1654,"column":15},"end":{"line":1654,"column":15}}]},"415":{"line":1665,"type":"if","locations":[{"start":{"line":1665,"column":6},"end":{"line":1665,"column":6}},{"start":{"line":1665,"column":6},"end":{"line":1665,"column":6}}]},"416":{"line":1667,"type":"if","locations":[{"start":{"line":1667,"column":6},"end":{"line":1667,"column":6}},{"start":{"line":1667,"column":6},"end":{"line":1667,"column":6}}]},"417":{"line":1668,"type":"if","locations":[{"start":{"line":1668,"column":8},"end":{"line":1668,"column":8}},{"start":{"line":1668,"column":8},"end":{"line":1668,"column":8}}]},"418":{"line":1676,"type":"if","locations":[{"start":{"line":1676,"column":6},"end":{"line":1676,"column":6}},{"start":{"line":1676,"column":6},"end":{"line":1676,"column":6}}]},"419":{"line":1676,"type":"binary-expr","locations":[{"start":{"line":1676,"column":11},"end":{"line":1676,"column":42}},{"start":{"line":1676,"column":46},"end":{"line":1676,"column":76}},{"start":{"line":1677,"column":11},"end":{"line":1677,"column":48}},{"start":{"line":1677,"column":52},"end":{"line":1677,"column":91}}]},"420":{"line":1680,"type":"if","locations":[{"start":{"line":1680,"column":8},"end":{"line":1680,"column":8}},{"start":{"line":1680,"column":8},"end":{"line":1680,"column":8}}]},"421":{"line":1681,"type":"if","locations":[{"start":{"line":1681,"column":10},"end":{"line":1681,"column":10}},{"start":{"line":1681,"column":10},"end":{"line":1681,"column":10}}]},"422":{"line":1693,"type":"if","locations":[{"start":{"line":1693,"column":6},"end":{"line":1693,"column":6}},{"start":{"line":1693,"column":6},"end":{"line":1693,"column":6}}]},"423":{"line":1707,"type":"if","locations":[{"start":{"line":1707,"column":4},"end":{"line":1707,"column":4}},{"start":{"line":1707,"column":4},"end":{"line":1707,"column":4}}]},"424":{"line":1707,"type":"binary-expr","locations":[{"start":{"line":1707,"column":8},"end":{"line":1707,"column":16}},{"start":{"line":1707,"column":20},"end":{"line":1707,"column":42}}]},"425":{"line":1717,"type":"if","locations":[{"start":{"line":1717,"column":4},"end":{"line":1717,"column":4}},{"start":{"line":1717,"column":4},"end":{"line":1717,"column":4}}]},"426":{"line":1719,"type":"if","locations":[{"start":{"line":1719,"column":4},"end":{"line":1719,"column":4}},{"start":{"line":1719,"column":4},"end":{"line":1719,"column":4}}]},"427":{"line":1722,"type":"if","locations":[{"start":{"line":1722,"column":4},"end":{"line":1722,"column":4}},{"start":{"line":1722,"column":4},"end":{"line":1722,"column":4}}]},"428":{"line":1726,"type":"if","locations":[{"start":{"line":1726,"column":4},"end":{"line":1726,"column":4}},{"start":{"line":1726,"column":4},"end":{"line":1726,"column":4}}]},"429":{"line":1728,"type":"if","locations":[{"start":{"line":1728,"column":4},"end":{"line":1728,"column":4}},{"start":{"line":1728,"column":4},"end":{"line":1728,"column":4}}]},"430":{"line":1743,"type":"if","locations":[{"start":{"line":1743,"column":8},"end":{"line":1743,"column":8}},{"start":{"line":1743,"column":8},"end":{"line":1743,"column":8}}]},"431":{"line":1743,"type":"binary-expr","locations":[{"start":{"line":1743,"column":12},"end":{"line":1743,"column":15}},{"start":{"line":1743,"column":19},"end":{"line":1743,"column":42}}]},"432":{"line":1745,"type":"if","locations":[{"start":{"line":1745,"column":6},"end":{"line":1745,"column":6}},{"start":{"line":1745,"column":6},"end":{"line":1745,"column":6}}]},"433":{"line":1751,"type":"if","locations":[{"start":{"line":1751,"column":4},"end":{"line":1751,"column":4}},{"start":{"line":1751,"column":4},"end":{"line":1751,"column":4}}]},"434":{"line":1751,"type":"binary-expr","locations":[{"start":{"line":1751,"column":8},"end":{"line":1751,"column":11}},{"start":{"line":1751,"column":15},"end":{"line":1751,"column":34}}]},"435":{"line":1752,"type":"if","locations":[{"start":{"line":1752,"column":4},"end":{"line":1752,"column":4}},{"start":{"line":1752,"column":4},"end":{"line":1752,"column":4}}]},"436":{"line":1753,"type":"if","locations":[{"start":{"line":1753,"column":6},"end":{"line":1753,"column":6}},{"start":{"line":1753,"column":6},"end":{"line":1753,"column":6}}]},"437":{"line":1754,"type":"binary-expr","locations":[{"start":{"line":1754,"column":39},"end":{"line":1754,"column":42}},{"start":{"line":1754,"column":46},"end":{"line":1754,"column":64}},{"start":{"line":1754,"column":68},"end":{"line":1754,"column":82}},{"start":{"line":1754,"column":86},"end":{"line":1754,"column":116}}]},"438":{"line":1756,"type":"if","locations":[{"start":{"line":1756,"column":6},"end":{"line":1756,"column":6}},{"start":{"line":1756,"column":6},"end":{"line":1756,"column":6}}]},"439":{"line":1757,"type":"binary-expr","locations":[{"start":{"line":1757,"column":39},"end":{"line":1757,"column":42}},{"start":{"line":1757,"column":46},"end":{"line":1757,"column":64}},{"start":{"line":1757,"column":68},"end":{"line":1757,"column":82}},{"start":{"line":1757,"column":86},"end":{"line":1757,"column":105}}]},"440":{"line":1762,"type":"if","locations":[{"start":{"line":1762,"column":4},"end":{"line":1762,"column":4}},{"start":{"line":1762,"column":4},"end":{"line":1762,"column":4}}]},"441":{"line":1766,"type":"if","locations":[{"start":{"line":1766,"column":6},"end":{"line":1766,"column":6}},{"start":{"line":1766,"column":6},"end":{"line":1766,"column":6}}]},"442":{"line":1771,"type":"if","locations":[{"start":{"line":1771,"column":4},"end":{"line":1771,"column":4}},{"start":{"line":1771,"column":4},"end":{"line":1771,"column":4}}]},"443":{"line":1773,"type":"if","locations":[{"start":{"line":1773,"column":4},"end":{"line":1773,"column":4}},{"start":{"line":1773,"column":4},"end":{"line":1773,"column":4}}]},"444":{"line":1775,"type":"if","locations":[{"start":{"line":1775,"column":6},"end":{"line":1775,"column":6}},{"start":{"line":1775,"column":6},"end":{"line":1775,"column":6}}]},"445":{"line":1777,"type":"if","locations":[{"start":{"line":1777,"column":8},"end":{"line":1777,"column":8}},{"start":{"line":1777,"column":8},"end":{"line":1777,"column":8}}]},"446":{"line":1778,"type":"if","locations":[{"start":{"line":1778,"column":13},"end":{"line":1778,"column":13}},{"start":{"line":1778,"column":13},"end":{"line":1778,"column":13}}]},"447":{"line":1785,"type":"if","locations":[{"start":{"line":1785,"column":4},"end":{"line":1785,"column":4}},{"start":{"line":1785,"column":4},"end":{"line":1785,"column":4}}]},"448":{"line":1789,"type":"if","locations":[{"start":{"line":1789,"column":6},"end":{"line":1789,"column":6}},{"start":{"line":1789,"column":6},"end":{"line":1789,"column":6}}]},"449":{"line":1795,"type":"if","locations":[{"start":{"line":1795,"column":4},"end":{"line":1795,"column":4}},{"start":{"line":1795,"column":4},"end":{"line":1795,"column":4}}]},"450":{"line":1806,"type":"if","locations":[{"start":{"line":1806,"column":4},"end":{"line":1806,"column":4}},{"start":{"line":1806,"column":4},"end":{"line":1806,"column":4}}]},"451":{"line":1808,"type":"if","locations":[{"start":{"line":1808,"column":6},"end":{"line":1808,"column":6}},{"start":{"line":1808,"column":6},"end":{"line":1808,"column":6}}]},"452":{"line":1817,"type":"cond-expr","locations":[{"start":{"line":1817,"column":45},"end":{"line":1817,"column":52}},{"start":{"line":1817,"column":55},"end":{"line":1817,"column":57}}]},"453":{"line":1817,"type":"cond-expr","locations":[{"start":{"line":1817,"column":67},"end":{"line":1817,"column":72}},{"start":{"line":1817,"column":75},"end":{"line":1817,"column":77}}]},"454":{"line":1818,"type":"binary-expr","locations":[{"start":{"line":1818,"column":25},"end":{"line":1818,"column":50}},{"start":{"line":1818,"column":54},"end":{"line":1818,"column":99}},{"start":{"line":1818,"column":103},"end":{"line":1818,"column":107}}]},"455":{"line":1824,"type":"if","locations":[{"start":{"line":1824,"column":4},"end":{"line":1824,"column":4}},{"start":{"line":1824,"column":4},"end":{"line":1824,"column":4}}]},"456":{"line":1825,"type":"if","locations":[{"start":{"line":1825,"column":4},"end":{"line":1825,"column":4}},{"start":{"line":1825,"column":4},"end":{"line":1825,"column":4}}]},"457":{"line":1826,"type":"if","locations":[{"start":{"line":1826,"column":6},"end":{"line":1826,"column":6}},{"start":{"line":1826,"column":6},"end":{"line":1826,"column":6}}]},"458":{"line":1834,"type":"if","locations":[{"start":{"line":1834,"column":4},"end":{"line":1834,"column":4}},{"start":{"line":1834,"column":4},"end":{"line":1834,"column":4}}]},"459":{"line":1836,"type":"if","locations":[{"start":{"line":1836,"column":4},"end":{"line":1836,"column":4}},{"start":{"line":1836,"column":4},"end":{"line":1836,"column":4}}]},"460":{"line":1840,"type":"if","locations":[{"start":{"line":1840,"column":6},"end":{"line":1840,"column":6}},{"start":{"line":1840,"column":6},"end":{"line":1840,"column":6}}]},"461":{"line":1873,"type":"if","locations":[{"start":{"line":1873,"column":6},"end":{"line":1873,"column":6}},{"start":{"line":1873,"column":6},"end":{"line":1873,"column":6}}]},"462":{"line":1874,"type":"if","locations":[{"start":{"line":1874,"column":6},"end":{"line":1874,"column":6}},{"start":{"line":1874,"column":6},"end":{"line":1874,"column":6}}]},"463":{"line":1877,"type":"if","locations":[{"start":{"line":1877,"column":8},"end":{"line":1877,"column":8}},{"start":{"line":1877,"column":8},"end":{"line":1877,"column":8}}]},"464":{"line":1877,"type":"binary-expr","locations":[{"start":{"line":1877,"column":12},"end":{"line":1877,"column":31}},{"start":{"line":1877,"column":35},"end":{"line":1877,"column":54}}]},"465":{"line":1886,"type":"cond-expr","locations":[{"start":{"line":1886,"column":29},"end":{"line":1886,"column":56}},{"start":{"line":1886,"column":59},"end":{"line":1886,"column":62}}]},"466":{"line":1890,"type":"cond-expr","locations":[{"start":{"line":1890,"column":29},"end":{"line":1890,"column":60}},{"start":{"line":1890,"column":63},"end":{"line":1890,"column":66}}]},"467":{"line":1894,"type":"binary-expr","locations":[{"start":{"line":1894,"column":18},"end":{"line":1894,"column":19}},{"start":{"line":1894,"column":23},"end":{"line":1894,"column":58}}]},"468":{"line":1895,"type":"if","locations":[{"start":{"line":1895,"column":6},"end":{"line":1895,"column":6}},{"start":{"line":1895,"column":6},"end":{"line":1895,"column":6}}]},"469":{"line":1903,"type":"if","locations":[{"start":{"line":1903,"column":6},"end":{"line":1903,"column":6}},{"start":{"line":1903,"column":6},"end":{"line":1903,"column":6}}]},"470":{"line":1904,"type":"if","locations":[{"start":{"line":1904,"column":6},"end":{"line":1904,"column":6}},{"start":{"line":1904,"column":6},"end":{"line":1904,"column":6}}]},"471":{"line":1909,"type":"if","locations":[{"start":{"line":1909,"column":6},"end":{"line":1909,"column":6}},{"start":{"line":1909,"column":6},"end":{"line":1909,"column":6}}]},"472":{"line":1913,"type":"binary-expr","locations":[{"start":{"line":1913,"column":13},"end":{"line":1913,"column":37}},{"start":{"line":1913,"column":41},"end":{"line":1913,"column":46}}]},"473":{"line":1932,"type":"cond-expr","locations":[{"start":{"line":1932,"column":18},"end":{"line":1932,"column":29}},{"start":{"line":1932,"column":32},"end":{"line":1932,"column":37}}]},"474":{"line":1938,"type":"cond-expr","locations":[{"start":{"line":1938,"column":20},"end":{"line":1938,"column":39}},{"start":{"line":1938,"column":42},"end":{"line":1938,"column":47}}]},"475":{"line":1949,"type":"if","locations":[{"start":{"line":1949,"column":6},"end":{"line":1949,"column":6}},{"start":{"line":1949,"column":6},"end":{"line":1949,"column":6}}]},"476":{"line":1950,"type":"if","locations":[{"start":{"line":1950,"column":6},"end":{"line":1950,"column":6}},{"start":{"line":1950,"column":6},"end":{"line":1950,"column":6}}]},"477":{"line":1953,"type":"binary-expr","locations":[{"start":{"line":1953,"column":14},"end":{"line":1953,"column":24}},{"start":{"line":1953,"column":28},"end":{"line":1953,"column":30}}]},"478":{"line":1968,"type":"cond-expr","locations":[{"start":{"line":1968,"column":43},"end":{"line":1968,"column":55}},{"start":{"line":1968,"column":58},"end":{"line":1968,"column":62}}]},"479":{"line":1971,"type":"if","locations":[{"start":{"line":1971,"column":6},"end":{"line":1971,"column":6}},{"start":{"line":1971,"column":6},"end":{"line":1971,"column":6}}]},"480":{"line":1977,"type":"binary-expr","locations":[{"start":{"line":1977,"column":15},"end":{"line":1977,"column":21}},{"start":{"line":1977,"column":25},"end":{"line":1980,"column":5}}]},"481":{"line":1978,"type":"if","locations":[{"start":{"line":1978,"column":6},"end":{"line":1978,"column":6}},{"start":{"line":1978,"column":6},"end":{"line":1978,"column":6}}]},"482":{"line":1978,"type":"binary-expr","locations":[{"start":{"line":1978,"column":10},"end":{"line":1978,"column":35}},{"start":{"line":1978,"column":39},"end":{"line":1978,"column":55}}]},"483":{"line":1981,"type":"binary-expr","locations":[{"start":{"line":1981,"column":65},"end":{"line":1981,"column":77}},{"start":{"line":1981,"column":81},"end":{"line":1981,"column":92}}]},"484":{"line":1985,"type":"binary-expr","locations":[{"start":{"line":1985,"column":15},"end":{"line":1985,"column":21}},{"start":{"line":1985,"column":25},"end":{"line":1989,"column":5}}]},"485":{"line":1986,"type":"if","locations":[{"start":{"line":1986,"column":6},"end":{"line":1986,"column":6}},{"start":{"line":1986,"column":6},"end":{"line":1986,"column":6}}]},"486":{"line":1986,"type":"binary-expr","locations":[{"start":{"line":1986,"column":10},"end":{"line":1986,"column":23}},{"start":{"line":1986,"column":27},"end":{"line":1986,"column":45}}]},"487":{"line":1987,"type":"if","locations":[{"start":{"line":1987,"column":6},"end":{"line":1987,"column":6}},{"start":{"line":1987,"column":6},"end":{"line":1987,"column":6}}]},"488":{"line":1987,"type":"binary-expr","locations":[{"start":{"line":1987,"column":10},"end":{"line":1987,"column":35}},{"start":{"line":1987,"column":39},"end":{"line":1987,"column":55}}]},"489":{"line":1990,"type":"binary-expr","locations":[{"start":{"line":1990,"column":62},"end":{"line":1990,"column":74}},{"start":{"line":1990,"column":78},"end":{"line":1990,"column":89}}]},"490":{"line":2002,"type":"if","locations":[{"start":{"line":2002,"column":6},"end":{"line":2002,"column":6}},{"start":{"line":2002,"column":6},"end":{"line":2002,"column":6}}]},"491":{"line":2002,"type":"binary-expr","locations":[{"start":{"line":2002,"column":10},"end":{"line":2002,"column":35}},{"start":{"line":2002,"column":39},"end":{"line":2002,"column":60}}]},"492":{"line":2004,"type":"if","locations":[{"start":{"line":2004,"column":8},"end":{"line":2004,"column":8}},{"start":{"line":2004,"column":8},"end":{"line":2004,"column":8}}]},"493":{"line":2005,"type":"if","locations":[{"start":{"line":2005,"column":8},"end":{"line":2005,"column":8}},{"start":{"line":2005,"column":8},"end":{"line":2005,"column":8}}]},"494":{"line":2006,"type":"binary-expr","locations":[{"start":{"line":2006,"column":18},"end":{"line":2006,"column":26}},{"start":{"line":2006,"column":30},"end":{"line":2006,"column":39}}]},"495":{"line":2007,"type":"if","locations":[{"start":{"line":2007,"column":8},"end":{"line":2007,"column":8}},{"start":{"line":2007,"column":8},"end":{"line":2007,"column":8}}]},"496":{"line":2013,"type":"if","locations":[{"start":{"line":2013,"column":6},"end":{"line":2013,"column":6}},{"start":{"line":2013,"column":6},"end":{"line":2013,"column":6}}]},"497":{"line":2023,"type":"if","locations":[{"start":{"line":2023,"column":8},"end":{"line":2023,"column":8}},{"start":{"line":2023,"column":8},"end":{"line":2023,"column":8}}]},"498":{"line":2029,"type":"cond-expr","locations":[{"start":{"line":2029,"column":82},"end":{"line":2029,"column":89}},{"start":{"line":2029,"column":92},"end":{"line":2029,"column":98}}]},"499":{"line":2033,"type":"if","locations":[{"start":{"line":2033,"column":6},"end":{"line":2033,"column":6}},{"start":{"line":2033,"column":6},"end":{"line":2033,"column":6}}]},"500":{"line":2033,"type":"binary-expr","locations":[{"start":{"line":2033,"column":10},"end":{"line":2033,"column":35}},{"start":{"line":2033,"column":39},"end":{"line":2033,"column":63}}]},"501":{"line":2038,"type":"if","locations":[{"start":{"line":2038,"column":8},"end":{"line":2038,"column":8}},{"start":{"line":2038,"column":8},"end":{"line":2038,"column":8}}]},"502":{"line":2040,"type":"if","locations":[{"start":{"line":2040,"column":10},"end":{"line":2040,"column":10}},{"start":{"line":2040,"column":10},"end":{"line":2040,"column":10}}]},"503":{"line":2051,"type":"if","locations":[{"start":{"line":2051,"column":6},"end":{"line":2051,"column":6}},{"start":{"line":2051,"column":6},"end":{"line":2051,"column":6}}]},"504":{"line":2052,"type":"cond-expr","locations":[{"start":{"line":2053,"column":12},"end":{"line":2053,"column":52}},{"start":{"line":2054,"column":12},"end":{"line":2054,"column":36}}]},"505":{"line":2055,"type":"if","locations":[{"start":{"line":2055,"column":8},"end":{"line":2055,"column":8}},{"start":{"line":2055,"column":8},"end":{"line":2055,"column":8}}]},"506":{"line":2059,"type":"if","locations":[{"start":{"line":2059,"column":6},"end":{"line":2059,"column":6}},{"start":{"line":2059,"column":6},"end":{"line":2059,"column":6}}]},"507":{"line":2067,"type":"if","locations":[{"start":{"line":2067,"column":4},"end":{"line":2067,"column":4}},{"start":{"line":2067,"column":4},"end":{"line":2067,"column":4}}]},"508":{"line":2069,"type":"binary-expr","locations":[{"start":{"line":2069,"column":13},"end":{"line":2069,"column":19}},{"start":{"line":2069,"column":23},"end":{"line":2073,"column":8}}]},"509":{"line":2071,"type":"cond-expr","locations":[{"start":{"line":2071,"column":31},"end":{"line":2071,"column":64}},{"start":{"line":2071,"column":67},"end":{"line":2071,"column":94}}]},"510":{"line":2072,"type":"binary-expr","locations":[{"start":{"line":2072,"column":15},"end":{"line":2072,"column":17}},{"start":{"line":2072,"column":21},"end":{"line":2072,"column":26}}]},"511":{"line":2075,"type":"binary-expr","locations":[{"start":{"line":2075,"column":11},"end":{"line":2075,"column":15}},{"start":{"line":2075,"column":19},"end":{"line":2075,"column":48}}]},"512":{"line":2091,"type":"if","locations":[{"start":{"line":2091,"column":6},"end":{"line":2091,"column":6}},{"start":{"line":2091,"column":6},"end":{"line":2091,"column":6}}]},"513":{"line":2091,"type":"binary-expr","locations":[{"start":{"line":2091,"column":10},"end":{"line":2091,"column":27}},{"start":{"line":2092,"column":11},"end":{"line":2092,"column":25}},{"start":{"line":2092,"column":29},"end":{"line":2092,"column":62}}]},"514":{"line":2094,"type":"if","locations":[{"start":{"line":2094,"column":8},"end":{"line":2094,"column":8}},{"start":{"line":2094,"column":8},"end":{"line":2094,"column":8}}]},"515":{"line":2095,"type":"if","locations":[{"start":{"line":2095,"column":8},"end":{"line":2095,"column":8}},{"start":{"line":2095,"column":8},"end":{"line":2095,"column":8}}]},"516":{"line":2104,"type":"cond-expr","locations":[{"start":{"line":2104,"column":49},"end":{"line":2104,"column":61}},{"start":{"line":2104,"column":64},"end":{"line":2104,"column":75}}]},"517":{"line":2107,"type":"binary-expr","locations":[{"start":{"line":2107,"column":14},"end":{"line":2107,"column":24}},{"start":{"line":2107,"column":28},"end":{"line":2107,"column":33}}]},"518":{"line":2113,"type":"binary-expr","locations":[{"start":{"line":2113,"column":11},"end":{"line":2113,"column":18}},{"start":{"line":2113,"column":22},"end":{"line":2113,"column":42}},{"start":{"line":2113,"column":46},"end":{"line":2113,"column":95}}]},"519":{"line":2113,"type":"binary-expr","locations":[{"start":{"line":2113,"column":48},"end":{"line":2113,"column":66}},{"start":{"line":2113,"column":70},"end":{"line":2113,"column":94}}]},"520":{"line":2116,"type":"if","locations":[{"start":{"line":2116,"column":4},"end":{"line":2116,"column":4}},{"start":{"line":2116,"column":4},"end":{"line":2116,"column":4}}]},"521":{"line":2120,"type":"binary-expr","locations":[{"start":{"line":2120,"column":13},"end":{"line":2120,"column":17}},{"start":{"line":2120,"column":21},"end":{"line":2120,"column":36}}]},"522":{"line":2122,"type":"if","locations":[{"start":{"line":2122,"column":8},"end":{"line":2122,"column":8}},{"start":{"line":2122,"column":8},"end":{"line":2122,"column":8}}]},"523":{"line":2122,"type":"binary-expr","locations":[{"start":{"line":2122,"column":12},"end":{"line":2122,"column":28}},{"start":{"line":2122,"column":33},"end":{"line":2122,"column":48}},{"start":{"line":2122,"column":52},"end":{"line":2122,"column":73}}]},"524":{"line":2132,"type":"if","locations":[{"start":{"line":2132,"column":8},"end":{"line":2132,"column":8}},{"start":{"line":2132,"column":8},"end":{"line":2132,"column":8}}]},"525":{"line":2132,"type":"binary-expr","locations":[{"start":{"line":2132,"column":12},"end":{"line":2132,"column":25}},{"start":{"line":2132,"column":29},"end":{"line":2132,"column":51}}]},"526":{"line":2133,"type":"if","locations":[{"start":{"line":2133,"column":8},"end":{"line":2133,"column":8}},{"start":{"line":2133,"column":8},"end":{"line":2133,"column":8}}]},"527":{"line":2136,"type":"if","locations":[{"start":{"line":2136,"column":8},"end":{"line":2136,"column":8}},{"start":{"line":2136,"column":8},"end":{"line":2136,"column":8}}]},"528":{"line":2138,"type":"if","locations":[{"start":{"line":2138,"column":10},"end":{"line":2138,"column":10}},{"start":{"line":2138,"column":10},"end":{"line":2138,"column":10}}]},"529":{"line":2141,"type":"if","locations":[{"start":{"line":2141,"column":8},"end":{"line":2141,"column":8}},{"start":{"line":2141,"column":8},"end":{"line":2141,"column":8}}]},"530":{"line":2142,"type":"if","locations":[{"start":{"line":2142,"column":8},"end":{"line":2142,"column":8}},{"start":{"line":2142,"column":8},"end":{"line":2142,"column":8}}]},"531":{"line":2142,"type":"binary-expr","locations":[{"start":{"line":2142,"column":12},"end":{"line":2142,"column":22}},{"start":{"line":2142,"column":26},"end":{"line":2142,"column":77}}]},"532":{"line":2153,"type":"if","locations":[{"start":{"line":2153,"column":4},"end":{"line":2153,"column":4}},{"start":{"line":2153,"column":4},"end":{"line":2153,"column":4}}]},"533":{"line":2154,"type":"binary-expr","locations":[{"start":{"line":2154,"column":16},"end":{"line":2154,"column":28}},{"start":{"line":2154,"column":32},"end":{"line":2154,"column":43}}]}},"code":["// Main type inference engine","","// Walks an AST, building up a graph of abstract values and constraints","// that cause types to flow from one node to another. Also defines a","// number of utilities for accessing ASTs and scopes.","","// Analysis is done in a context, which is tracked by the dynamically","// bound cx variable. Use withContext to set the current context.","","// For memory-saving reasons, individual types export an interface","// similar to abstract values (which can hold multiple types), and can","// thus be used in place abstract values that only ever contain a","// single type.","","(function(root, mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(exports, require(\"acorn\"), require(\"acorn/dist/acorn_loose\"), require(\"acorn/dist/walk\"),","               require(\"./def\"), require(\"./signal\"));","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"exports\", \"acorn/dist/acorn\", \"acorn/dist/acorn_loose\", \"acorn/dist/walk\", \"./def\", \"./signal\"], mod);","  mod(root.tern || (root.tern = {}), acorn, acorn, acorn.walk, tern.def, tern.signal); // Plain browser env","})(this, function(exports, acorn, acorn_loose, walk, def, signal) {","  \"use strict\";","","  var toString = exports.toString = function(type, maxDepth, parent) {","    if (!type || type == parent || maxDepth && maxDepth < -3) return \"?\";","    return type.toString(maxDepth, parent);","  };","","  // A variant of AVal used for unknown, dead-end values. Also serves","  // as prototype for AVals, Types, and Constraints because it","  // implements 'empty' versions of all the methods that the code","  // expects.","  var ANull = exports.ANull = signal.mixin({","    addType: function() {},","    propagate: function() {},","    getProp: function() { return ANull; },","    forAllProps: function() {},","    hasType: function() { return false; },","    isEmpty: function() { return true; },","    getFunctionType: function() {},","    getObjType: function() {},","    getSymbolType: function() {},","    getType: function() {},","    gatherProperties: function() {},","    propagatesTo: function() {},","    typeHint: function() {},","    propHint: function() {},","    toString: function() { return \"?\"; }","  });","","  function extend(proto, props) {","    var obj = Object.create(proto);","    if (props) for (var prop in props) obj[prop] = props[prop];","    return obj;","  }","","  // ABSTRACT VALUES","","  var WG_DEFAULT = 100, WG_NEW_INSTANCE = 90, WG_MADEUP_PROTO = 10,","      WG_MULTI_MEMBER = 6, WG_CATCH_ERROR = 6,","      WG_PHANTOM_OBJ = 1,","      WG_GLOBAL_THIS = 90, WG_SPECULATIVE_THIS = 2, WG_SPECULATIVE_PROTO_THIS = 4;","","  var AVal = exports.AVal = function() {","    this.types = [];","    this.forward = null;","    this.maxWeight = 0;","  };","  AVal.prototype = extend(ANull, {","    addType: function(type, weight) {","      weight = weight || WG_DEFAULT;","      if (this.maxWeight < weight) {","        this.maxWeight = weight;","        if (this.types.length == 1 && this.types[0] == type) return;","        this.types.length = 0;","      } else if (this.maxWeight > weight || this.types.indexOf(type) > -1) {","        return;","      }","","      this.signal(\"addType\", type);","      this.types.push(type);","      var forward = this.forward;","      if (forward) withWorklist(function(add) {","        for (var i = 0; i < forward.length; ++i) add(type, forward[i], weight);","      });","    },","","    propagate: function(target, weight) {","      if (target == ANull || (target instanceof Type && this.forward && this.forward.length > 2)) return;","      if (weight && weight != WG_DEFAULT) target = new Muffle(target, weight);","      (this.forward || (this.forward = [])).push(target);","      var types = this.types;","      if (types.length) withWorklist(function(add) {","        for (var i = 0; i < types.length; ++i) add(types[i], target, weight);","      });","    },","","    getProp: function(prop) {","      if (ignoredProp(prop)) return ANull;","      var found = (this.props || (this.props = Object.create(null)))[prop];","      if (!found) {","        found = this.props[prop] = new AVal;","        this.propagate(new GetProp(prop, found));","      }","      return found;","    },","","    forAllProps: function(c) {","      this.propagate(new ForAllProps(c));","    },","","    hasType: function(type) {","      return this.types.indexOf(type) > -1;","    },","    isEmpty: function() { return this.types.length === 0; },","    getFunctionType: function() {","      for (var i = this.types.length - 1; i >= 0; --i)","        if (this.types[i] instanceof Fn) return this.types[i];","    },","    getObjType: function() {","      var seen = null;","      for (var i = this.types.length - 1; i >= 0; --i) {","        var type = this.types[i];","        if (!(type instanceof Obj)) continue;","        if (type.name) return type;","        if (!seen) seen = type;","      }","      return seen;","    },","","    getSymbolType: function() {","      for (var i = this.types.length - 1; i >= 0; --i)","        if (this.types[i] instanceof Sym) return this.types[i]","    },","","    getType: function(guess) {","      if (this.types.length === 0 && guess !== false) return this.makeupType();","      if (this.types.length === 1) return this.types[0];","      return canonicalType(this.types);","    },","","    toString: function(maxDepth, parent) {","      if (this.types.length == 0) return toString(this.makeupType(), maxDepth, parent);","      if (this.types.length == 1) return toString(this.types[0], maxDepth, parent);","      var simplified = simplifyTypes(this.types);","      if (simplified.length > 2) return \"?\";","      return simplified.map(function(tp) { return toString(tp, maxDepth, parent); }).join(\"|\");","    },","","    makeupPropType: function(obj) {","      var propName = this.propertyName;","","      var protoProp = obj.proto && obj.proto.hasProp(propName);","      if (protoProp) {","        var fromProto = protoProp.getType();","        if (fromProto) return fromProto;","      }","","      if (propName != \"<i>\") {","        var computedProp = obj.hasProp(\"<i>\");","        if (computedProp) return computedProp.getType();","      } else if (obj.props[\"<i>\"] != this) {","        for (var prop in obj.props) {","          var val = obj.props[prop];","          if (!val.isEmpty()) return val.getType();","        }","      }","    },","","    makeupType: function() {","      var computed = this.propertyOf && this.makeupPropType(this.propertyOf);","      if (computed) return computed;","","      if (!this.forward) return null;","      for (var i = this.forward.length - 1; i >= 0; --i) {","        var hint = this.forward[i].typeHint();","        if (hint && !hint.isEmpty()) {guessing = true; return hint;}","      }","","      var props = Object.create(null), foundProp = null;","      for (var i = 0; i < this.forward.length; ++i) {","        var prop = this.forward[i].propHint();","        if (prop && prop != \"length\" && prop != \"<i>\" && prop != \"✖\" && prop != cx.completingProperty) {","          props[prop] = true;","          foundProp = prop;","        }","      }","      if (!foundProp) return null;","","      var objs = objsWithProp(foundProp);","      if (objs) {","        var matches = [];","        search: for (var i = 0; i < objs.length; ++i) {","          var obj = objs[i];","          for (var prop in props) if (!obj.hasProp(prop)) continue search;","          if (obj.hasCtor) obj = getInstance(obj);","          matches.push(obj);","        }","        var canon = canonicalType(matches);","        if (canon) {guessing = true; return canon;}","      }","    },","","    typeHint: function() { return this.types.length ? this.getType() : null; },","    propagatesTo: function() { return this; },","","    gatherProperties: function(f, depth) {","      for (var i = 0; i < this.types.length; ++i)","        this.types[i].gatherProperties(f, depth);","    },","","    guessProperties: function(f) {","      if (this.forward) for (var i = 0; i < this.forward.length; ++i) {","        var prop = this.forward[i].propHint();","        if (prop) f(prop, null, 0);","      }","      var guessed = this.makeupType();","      if (guessed) guessed.gatherProperties(f);","    }","  });","","  function similarAVal(a, b, depth) {","    var typeA = a.getType(false), typeB = b.getType(false);","    if (!typeA || !typeB) return true;","    return similarType(typeA, typeB, depth);","  }","","  function similarType(a, b, depth) {","    if (!a || depth >= 5) return b;","    if (!a || a == b) return a;","    if (!b) return a;","    if (a.constructor != b.constructor) return false;","    if (a.constructor == Arr) {","      var innerA = a.getProp(\"<i>\").getType(false);","      if (!innerA) return b;","      var innerB = b.getProp(\"<i>\").getType(false);","      if (!innerB || similarType(innerA, innerB, depth + 1)) return b;","    } else if (a.constructor == Obj) {","      var propsA = 0, propsB = 0, same = 0;","      for (var prop in a.props) {","        propsA++;","        if (prop in b.props && similarAVal(a.props[prop], b.props[prop], depth + 1))","          same++;","      }","      for (var prop in b.props) propsB++;","      if (propsA && propsB && same < Math.max(propsA, propsB) / 2) return false;","      return propsA > propsB ? a : b;","    } else if (a.constructor == Fn) {","      if (a.args.length != b.args.length ||","          !a.args.every(function(tp, i) { return similarAVal(tp, b.args[i], depth + 1); }) ||","          !similarAVal(a.retval, b.retval, depth + 1) || !similarAVal(a.self, b.self, depth + 1))","        return false;","      return a;","    } else {","      return false;","    }","  }","","  var simplifyTypes = exports.simplifyTypes = function(types) {","    var found = [];","    outer: for (var i = 0; i < types.length; ++i) {","      var tp = types[i];","      for (var j = 0; j < found.length; j++) {","        var similar = similarType(tp, found[j], 0);","        if (similar) {","          found[j] = similar;","          continue outer;","        }","      }","      found.push(tp);","    }","    return found;","  };","","  function canonicalType(types) {","    var arrays = 0, fns = 0, objs = 0, prim = null;","    for (var i = 0; i < types.length; ++i) {","      var tp = types[i];","      if (tp instanceof Arr) ++arrays;","      else if (tp instanceof Fn) ++fns;","      else if (tp instanceof Obj) ++objs;","      else if (tp instanceof Prim) {","        if (prim && tp.name != prim.name) return null;","        prim = tp;","      }","    }","    var kinds = (arrays && 1) + (fns && 1) + (objs && 1) + (prim && 1);","    if (kinds > 1) return null;","    if (prim) return prim;","","    var maxScore = 0, maxTp = null;","    for (var i = 0; i < types.length; ++i) {","      var tp = types[i], score = 0;","      if (arrays) {","        score = tp.getProp(\"<i>\").isEmpty() ? 1 : 2;","      } else if (fns) {","        score = 1;","        for (var j = 0; j < tp.args.length; ++j) if (!tp.args[j].isEmpty()) ++score;","        if (!tp.retval.isEmpty()) ++score;","      } else if (objs) {","        score = tp.name ? 100 : 2;","      }","      if (score >= maxScore) { maxScore = score; maxTp = tp; }","    }","    return maxTp;","  }","","  // PROPAGATION STRATEGIES","","  var constraint = exports.constraint = function(methods) {","    var ctor = function() {","      this.origin = cx.curOrigin;","      this.construct.apply(this, arguments);","    };","    ctor.prototype = Object.create(ANull);","    for (var m in methods) if (methods.hasOwnProperty(m)) ctor.prototype[m] = methods[m];","    return ctor;","  };","","  var GetProp = constraint({","    construct: function(prop, target) {","      this.prop = prop; this.target = target;","    },","    addType: function(type, weight) {","      if (type.getProp)","        type.getProp(this.prop).propagate(this.target, weight);","    },","    propHint: function() { return this.prop; },","    propagatesTo: function() {","      if (this.prop == \"<i>\" || !/[^\\w_]/.test(this.prop))","        return {target: this.target, pathExt: \".\" + this.prop};","    }","  });","","  var DefProp = exports.PropHasSubset = exports.DefProp = constraint({","    construct: function(prop, type, originNode) {","      this.prop = prop; this.type = type; this.originNode = originNode;","    },","    addType: function(type, weight) {","      if (!(type instanceof Obj)) return;","      var prop = type.defProp(this.prop, this.originNode);","      if (!prop.origin) prop.origin = this.origin;","      this.type.propagate(prop, weight);","    },","    propHint: function() { return this.prop; }","  });","","  var ForAllProps = constraint({","    construct: function(c) { this.c = c; },","    addType: function(type) {","      if (!(type instanceof Obj)) return;","      type.forAllProps(this.c);","    }","  });","","  function withDisabledComputing(fn, body) {","    cx.disabledComputing = {fn: fn, prev: cx.disabledComputing};","    var result = body();","    cx.disabledComputing = cx.disabledComputing.prev;","    return result;","  }","  var IsCallee = exports.IsCallee = constraint({","    construct: function(self, args, argNodes, retval) {","      this.self = self; this.args = args; this.argNodes = argNodes; this.retval = retval;","      this.disabled = cx.disabledComputing;","    },","    addType: function(fn, weight) {","      if (!(fn instanceof Fn)) return;","      for (var i = 0; i < this.args.length; ++i) {","        if (i < fn.args.length) this.args[i].propagate(fn.args[i], weight);","        if (fn.arguments) this.args[i].propagate(fn.arguments, weight);","      }","      if (!fn.isArrowFn())","        this.self.propagate(fn.self, this.self == cx.topScope ? WG_GLOBAL_THIS : weight);","      var compute = fn.computeRet, result = fn.retval","      if (compute) for (var d = this.disabled; d; d = d.prev)","        if (d.fn == fn || fn.originNode && d.fn.originNode == fn.originNode) compute = null;","      if (compute) {","        var old = cx.disabledComputing;","        cx.disabledComputing = this.disabled;","        result = compute(this.self, this.args, this.argNodes)","        cx.disabledComputing = old;","      }","      maybeIterator(fn, result).propagate(this.retval, weight)","    },","    typeHint: function() {","      var names = [];","      for (var i = 0; i < this.args.length; ++i) names.push(\"?\");","      return new Fn(null, this.self, this.args, names, ANull);","    },","    propagatesTo: function() {","      return {target: this.retval, pathExt: \".!ret\"};","    }","  });","","  var HasMethodCall = constraint({","    construct: function(propName, args, argNodes, retval) {","      this.propName = propName; this.args = args; this.argNodes = argNodes; this.retval = retval;","      this.disabled = cx.disabledComputing;","    },","    addType: function(obj, weight) {","      var callee = new IsCallee(obj, this.args, this.argNodes, this.retval);","      callee.disabled = this.disabled;","      obj.getProp(this.propName).propagate(callee, weight);","    },","    propHint: function() { return this.propName; }","  });","","  var IsCtor = exports.IsCtor = constraint({","    construct: function(target, noReuse) {","      this.target = target; this.noReuse = noReuse;","    },","    addType: function(f, weight) {","      if (!(f instanceof Fn)) return;","      if (cx.parent && !cx.parent.options.reuseInstances) this.noReuse = true;","      f.getProp(\"prototype\").propagate(new IsProto(this.noReuse ? false : f, this.target), weight);","    }","  });","","  var getInstance = exports.getInstance = function(obj, ctor) {","    if (ctor === false) return new Obj(obj);","","    if (!ctor) ctor = obj.hasCtor;","    if (!obj.instances) obj.instances = [];","    for (var i = 0; i < obj.instances.length; ++i) {","      var cur = obj.instances[i];","      if (cur.ctor == ctor) return cur.instance;","    }","    var instance = new Obj(obj, ctor && ctor.name);","    instance.origin = obj.origin;","    obj.instances.push({ctor: ctor, instance: instance});","    return instance;","  };","","  var IsProto = exports.IsProto = constraint({","    construct: function(ctor, target) {","      this.ctor = ctor; this.target = target;","    },","    addType: function(o, _weight) {","      if (!(o instanceof Obj)) return;","      if ((this.count = (this.count || 0) + 1) > 8) return;","      if (o == cx.protos.Array)","        this.target.addType(new Arr);","      else","        this.target.addType(getInstance(o, this.ctor));","    }","  });","","  var FnPrototype = constraint({","    construct: function(fn) { this.fn = fn; },","    addType: function(o, _weight) {","      if (o instanceof Obj && !o.hasCtor) {","        o.hasCtor = this.fn;","        var adder = new SpeculativeThis(o, this.fn);","        adder.addType(this.fn);","        o.forAllProps(function(_prop, val, local) {","          if (local) val.propagate(adder);","        });","      }","    }","  });","","  var IsAdded = constraint({","    construct: function(other, target) {","      this.other = other; this.target = target;","    },","    addType: function(type, weight) {","      if (type == cx.str)","        this.target.addType(cx.str, weight);","      else if (type == cx.num && this.other.hasType(cx.num))","        this.target.addType(cx.num, weight);","    },","    typeHint: function() { return this.other; }","  });","","  var IfObj = exports.IfObj = constraint({","    construct: function(target) { this.target = target; },","    addType: function(t, weight) {","      if (t instanceof Obj) this.target.addType(t, weight);","    },","    propagatesTo: function() { return this.target; }","  });","","  var SpeculativeThis = constraint({","    construct: function(obj, ctor) { this.obj = obj; this.ctor = ctor; },","    addType: function(tp) {","      if (tp instanceof Fn && tp.self)","        tp.self.addType(getInstance(this.obj, this.ctor), WG_SPECULATIVE_PROTO_THIS);","    }","  });","","  var HasProto = constraint({","    construct: function(obj) { this.obj = obj },","    addType: function(tp) {","      if (tp instanceof Obj && this.obj.proto == cx.protos.Object)","        this.obj.replaceProto(tp)","    }","  });","","  var Muffle = constraint({","    construct: function(inner, weight) {","      this.inner = inner; this.weight = weight;","    },","    addType: function(tp, weight) {","      this.inner.addType(tp, Math.min(weight, this.weight));","    },","    propagatesTo: function() { return this.inner.propagatesTo(); },","    typeHint: function() { return this.inner.typeHint(); },","    propHint: function() { return this.inner.propHint(); }","  });","","  // TYPE OBJECTS","","  var Type = exports.Type = function() {};","  Type.prototype = extend(ANull, {","    constructor: Type,","    propagate: function(c, w) { c.addType(this, w); },","    hasType: function(other) { return other == this; },","    isEmpty: function() { return false; },","    typeHint: function() { return this; },","    getType: function() { return this; }","  });","","  var Prim = exports.Prim = function(proto, name) { this.name = name; this.proto = proto; };","  Prim.prototype = extend(Type.prototype, {","    constructor: Prim,","    toString: function() { return this.name; },","    getProp: function(prop) {return this.proto.hasProp(prop) || ANull;},","    gatherProperties: function(f, depth) {","      if (this.proto) this.proto.gatherProperties(f, depth);","    }","  });","","  function isInteger(str) {","    var c0 = str.charCodeAt(0)","    if (c0 >= 48 && c0 <= 57) return !/\\D/.test(str)","    else return false","  }","","  var Obj = exports.Obj = function(proto, name) {","    if (!this.props) this.props = Object.create(null);","    this.proto = proto === true ? cx.protos.Object : proto;","    if (proto && proto != cx.protos.Object && !name && proto.name && !(this instanceof Fn)) {","      var match = /^(.*)\\.prototype$/.exec(this.proto.name);","      if (match) name = match[1];","    }","    this.name = name;","    this.maybeProps = null;","    this.origin = cx.curOrigin;","  };","  Obj.prototype = extend(Type.prototype, {","    constructor: Obj,","    toString: function(maxDepth) {","      if (maxDepth == null) maxDepth = 0;","      if (maxDepth <= 0 && this.name) return this.name;","      var props = [], etc = false;","      for (var prop in this.props) if (prop != \"<i>\") {","        if (props.length > 5) { etc = true; break; }","        if (maxDepth)","          props.push(prop + \": \" + toString(this.props[prop], maxDepth - 1, this));","        else","          props.push(prop);","      }","      props.sort();","      if (etc) props.push(\"...\");","      return \"{\" + props.join(\", \") + \"}\";","    },","    hasProp: function(prop, searchProto) {","      if (isInteger(prop)) prop = this.normalizeIntegerProp(prop)","      var found = this.props[prop];","      if (searchProto !== false)","        for (var p = this.proto; p && !found; p = p.proto) found = p.props[prop];","      return found;","    },","    defProp: function(prop, originNode) {","      var found = this.hasProp(prop, false);","      if (found) {","        if (originNode && !found.originNode) found.originNode = originNode;","        return found;","      }","      if (ignoredProp(prop)) return ANull;","      if (isInteger(prop)) prop = this.normalizeIntegerProp(prop)","","      var av = this.maybeProps && this.maybeProps[prop];","      if (av) {","        delete this.maybeProps[prop];","        this.maybeUnregProtoPropHandler();","      } else {","        av = new AVal;","        av.propertyOf = this;","        av.propertyName = prop;","      }","","      this.props[prop] = av;","      av.originNode = originNode;","      av.origin = cx.curOrigin;","      this.broadcastProp(prop, av, true);","      return av;","    },","    getProp: function(prop) {","      var found = this.hasProp(prop, true) || (this.maybeProps && this.maybeProps[prop]);","      if (found) return found;","      if (ignoredProp(prop)) return ANull;","      if (isInteger(prop)) prop = this.normalizeIntegerProp(prop)","      var av = this.ensureMaybeProps()[prop] = new AVal;","      av.propertyOf = this;","      av.propertyName = prop;","      return av;","    },","    normalizeIntegerProp: function(_) { return \"<i>\" },","    broadcastProp: function(prop, val, local) {","      if (local) {","        this.signal(\"addProp\", prop, val);","        // If this is a scope, it shouldn't be registered","        if (!(this instanceof Scope)) registerProp(prop, this);","      }","","      if (this.onNewProp) for (var i = 0; i < this.onNewProp.length; ++i) {","        var h = this.onNewProp[i];","        h.onProtoProp ? h.onProtoProp(prop, val, local) : h(prop, val, local);","      }","    },","    onProtoProp: function(prop, val, _local) {","      var maybe = this.maybeProps && this.maybeProps[prop];","      if (maybe) {","        delete this.maybeProps[prop];","        this.maybeUnregProtoPropHandler();","        this.proto.getProp(prop).propagate(maybe);","      }","      this.broadcastProp(prop, val, false);","    },","    replaceProto: function(proto) {","      if (this.proto && this.maybeProps)","        this.proto.unregPropHandler(this)","      this.proto = proto","      if (this.maybeProps)","        this.proto.forAllProps(this)","    },","    ensureMaybeProps: function() {","      if (!this.maybeProps) {","        if (this.proto) this.proto.forAllProps(this);","        this.maybeProps = Object.create(null);","      }","      return this.maybeProps;","    },","    removeProp: function(prop) {","      var av = this.props[prop];","      delete this.props[prop];","      this.ensureMaybeProps()[prop] = av;","      av.types.length = 0;","    },","    forAllProps: function(c) {","      if (!this.onNewProp) {","        this.onNewProp = [];","        if (this.proto) this.proto.forAllProps(this);","      }","      this.onNewProp.push(c);","      for (var o = this; o; o = o.proto) for (var prop in o.props) {","        if (c.onProtoProp)","          c.onProtoProp(prop, o.props[prop], o == this);","        else","          c(prop, o.props[prop], o == this);","      }","    },","    maybeUnregProtoPropHandler: function() {","      if (this.maybeProps) {","        for (var _n in this.maybeProps) return;","        this.maybeProps = null;","      }","      if (!this.proto || this.onNewProp && this.onNewProp.length) return;","      this.proto.unregPropHandler(this);","    },","    unregPropHandler: function(handler) {","      for (var i = 0; i < this.onNewProp.length; ++i)","        if (this.onNewProp[i] == handler) { this.onNewProp.splice(i, 1); break; }","      this.maybeUnregProtoPropHandler();","    },","    gatherProperties: function(f, depth) {","      for (var prop in this.props) if (prop != \"<i>\" && prop.charAt(0) != \":\")","        f(prop, this, depth);","      if (this.proto) this.proto.gatherProperties(f, depth + 1);","    },","    getObjType: function() { return this; }","  });","","  var geckoIterators = typeof StopIteration != \"undefined\";","  function ignoredProp(name) {","    return name == \"__proto__\" || name == \"✖\" || geckoIterators && name == \"__iterator__\";","  }","","  var Fn = exports.Fn = function(name, self, args, argNames, retval, generator) {","    Obj.call(this, cx.protos.Function, name);","    this.self = self;","    this.args = args;","    this.argNames = argNames;","    this.retval = retval;","    this.generator = generator","  };","  Fn.prototype = extend(Obj.prototype, {","    constructor: Fn,","    toString: function(maxDepth) {","      if (maxDepth == null) maxDepth = 0;","      var str = this.generator ? \"fn*(\" : \"fn(\";","      for (var i = 0; i < this.args.length; ++i) {","        if (i) str += \", \";","        var name = this.argNames[i];","        if (name && name != \"?\") str += name + \": \";","        str += maxDepth > -3 ? toString(this.args[i], maxDepth - 1, this) : \"?\";","      }","      str += \")\";","      if (!this.retval.isEmpty())","        str += \" -> \" + (maxDepth > -3 ? toString(this.retval, maxDepth - 1, this) : \"?\");","      return str;","    },","    getProp: function(prop) {","      if (prop == \"prototype\") {","        var known = this.hasProp(prop, false);","        if (!known) {","          known = this.defProp(prop);","          var proto = new Obj(true, this.name && this.name + \".prototype\");","          proto.origin = this.origin;","          known.addType(proto, WG_MADEUP_PROTO);","        }","        return known;","      }","      return Obj.prototype.getProp.call(this, prop);","    },","    defProp: function(prop, originNode) {","      if (prop == \"prototype\") {","        var found = this.hasProp(prop, false);","        if (found) return found;","        found = Obj.prototype.defProp.call(this, prop, originNode);","        found.origin = this.origin;","        found.propagate(new FnPrototype(this));","        return found;","      }","      return Obj.prototype.defProp.call(this, prop, originNode);","    },","    getFunctionType: function() { return this; },","    isArrowFn: function() { return this.originNode && this.originNode.type == \"ArrowFunctionExpression\" }","  });","","  var Arr = exports.Arr = function(contentType) {","    Obj.call(this, cx.protos.Array)","    var content = this.defProp(\"<i>\")","    if (Array.isArray(contentType)) {","      this.tuple = contentType.length","      for (var i = 0; i < contentType.length; i++) {","        var prop = this.defProp(String(i))","        contentType[i].propagate(prop)","        prop.propagate(content)","      }","    } else if (contentType) {","      this.tuple = 0","      contentType.propagate(content)","    }","  };","  Arr.prototype = extend(Obj.prototype, {","    constructor: Arr,","    toString: function(maxDepth) {","      if (maxDepth == null) maxDepth = 0","      if (maxDepth <= -3) return \"[?]\"","      var content = \"\"","      if (this.tuple) {","        var similar","        for (var i = 0; i in this.props; i++) {","          var type = toString(this.getProp(String(i)), maxDepth - 1, this)","          if (similar == null)","            similar = type","          else if (similar != type)","            similar = false","          else","            similar = type","          content += (content ? \", \" : \"\") + type","        }","        if (similar) content = similar","      } else {","        content = toString(this.getProp(\"<i>\"), maxDepth - 1, this)","      }","      return \"[\" + content + \"]\"","    },","    normalizeIntegerProp: function(prop) {","      if (+prop < this.tuple) return prop","      else return \"<i>\"","    }","  });","","  var Sym = exports.Sym = function(name, originNode) {","    Prim.call(this, cx.protos.Symbol, \"Symbol\")","    this.symName = name","    this.originNode = originNode","  }","  Sym.prototype = extend(Prim.prototype, {","    constructor: Sym,","    asPropName: function() { return \":\" + this.symName },","    getSymbolType: function() { return this }","  })","","  exports.getSymbol = function(name, originNode) {","    var cleanName = name.replace(/[^\\w$\\.]/g, \"_\")","    var known = cx.symbols[cleanName]","    if (known) {","      if (originNode && !known.originNode) known.originNode = originNode","      return known","    }","    return cx.symbols[cleanName] = new Sym(cleanName, originNode)","  }","","  // THE PROPERTY REGISTRY","","  function registerProp(prop, obj) {","    var data = cx.props[prop] || (cx.props[prop] = []);","    data.push(obj);","  }","","  function objsWithProp(prop) {","    return cx.props[prop];","  }","","  // INFERENCE CONTEXT","","  exports.Context = function(defs, parent) {","    this.parent = parent;","    this.props = Object.create(null);","    this.protos = Object.create(null);","    this.origins = [];","    this.curOrigin = \"ecmascript\";","    this.paths = Object.create(null);","    this.definitions = Object.create(null);","    this.purgeGen = 0;","    this.workList = null;","    this.disabledComputing = null;","    this.curSuperCtor = this.curSuper = null;","    this.symbols = Object.create(null)","","    exports.withContext(this, function() {","      cx.protos.Object = new Obj(null, \"Object.prototype\");","      cx.topScope = new Scope();","      cx.topScope.name = \"<top>\";","      cx.protos.Array = new Obj(true, \"Array.prototype\");","      cx.protos.Function = new Fn(\"Function.prototype\", ANull, [], [], ANull);","      cx.protos.Function.proto = cx.protos.Object;","      cx.protos.RegExp = new Obj(true, \"RegExp.prototype\");","      cx.protos.String = new Obj(true, \"String.prototype\");","      cx.protos.Number = new Obj(true, \"Number.prototype\");","      cx.protos.Boolean = new Obj(true, \"Boolean.prototype\");","      cx.protos.Symbol = new Obj(true, \"Symbol.prototype\");","      cx.str = new Prim(cx.protos.String, \"string\");","      cx.bool = new Prim(cx.protos.Boolean, \"bool\");","      cx.num = new Prim(cx.protos.Number, \"number\");","      cx.curOrigin = null;","","      if (defs) for (var i = 0; i < defs.length; ++i)","        def.load(defs[i]);","    });","  };","","  exports.Context.prototype.startAnalysis = function() {","    this.disabledComputing = this.workList = this.curSuperCtor = this.curSuper = null;","  };","","  var cx = null;","  exports.cx = function() { return cx; };","","  exports.withContext = function(context, f) {","    var old = cx;","    cx = context;","    try { return f(); }","    finally { cx = old; }","  };","","  exports.TimedOut = function() {","    this.message = \"Timed out\";","    this.stack = (new Error()).stack;","  };","  exports.TimedOut.prototype = Object.create(Error.prototype);","  exports.TimedOut.prototype.name = \"infer.TimedOut\";","","  var timeout;","  exports.withTimeout = function(ms, f) {","    var end = +new Date + ms;","    var oldEnd = timeout;","    if (oldEnd && oldEnd < end) return f();","    timeout = end;","    try { return f(); }","    finally { timeout = oldEnd; }","  };","","  exports.addOrigin = function(origin) {","    if (cx.origins.indexOf(origin) < 0) cx.origins.push(origin);","  };","","  var baseMaxWorkDepth = 20, reduceMaxWorkDepth = 0.0001;","  function withWorklist(f) {","    if (cx.workList) return f(cx.workList);","","    var list = [], depth = 0;","    var add = cx.workList = function(type, target, weight) {","      if (depth < baseMaxWorkDepth - reduceMaxWorkDepth * list.length)","        list.push(type, target, weight, depth);","    };","    var ret = f(add);","    for (var i = 0; i < list.length; i += 4) {","      if (timeout && +new Date >= timeout)","        throw new exports.TimedOut();","      depth = list[i + 3] + 1;","      list[i + 1].addType(list[i], list[i + 2]);","    }","    cx.workList = null;","    return ret;","  }","","  function withSuper(ctor, obj, f) {","    var oldCtor = cx.curSuperCtor, oldObj = cx.curSuper","    cx.curSuperCtor = ctor; cx.curSuper = obj","    var result = f()","    cx.curSuperCtor = oldCtor; cx.curSuper = oldObj","    return result","  }","","  // SCOPES","","  var Scope = exports.Scope = function(prev, originNode, isBlock, isCatch) {","    Obj.call(this, prev || true);","    this.prev = prev;","    this.originNode = originNode","    this.isBlock = !!isBlock","    this.isCatch = !!isCatch","  };","  Scope.prototype = extend(Obj.prototype, {","    constructor: Scope,","    defVar: function(name, originNode) {","      for (var s = this; ; s = s.proto) {","        var found = s.props[name];","        if (found) return found;","        if (!s.prev) return s.defProp(name, originNode);","      }","    }","  });","","  function functionScope(scope, arrow) {","    while (scope.isBlock || scope.isCatch || (arrow === false && scope.fnType && scope.fnType.isArrowFn()))","      scope = scope.prev","    return scope","  }","","","  // RETVAL COMPUTATION HEURISTICS","","  function maybeInstantiate(scope, score) {","    var fn = functionScope(scope).fnType","    if (fn) fn.instantiateScore = (fn.instantiateScore || 0) + score;","  }","","  var NotSmaller = {};","  function nodeSmallerThan(node, n) {","    try {","      walk.simple(node, {Expression: function() { if (--n <= 0) throw NotSmaller; }});","      return true;","    } catch(e) {","      if (e == NotSmaller) return false;","      throw e;","    }","  }","","  function maybeTagAsInstantiated(node, fn) {","    var score = fn.instantiateScore;","    if (!cx.disabledComputing && score && fn.args.length && nodeSmallerThan(node, score * 5)) {","      maybeInstantiate(functionScope(fn.originNode.scope.prev), score / 2);","      setFunctionInstantiated(node, fn);","      return true;","    } else {","      fn.instantiateScore = null;","    }","  }","","  function setFunctionInstantiated(node, fn) {","    // Disconnect the arg avals, so that we can add info to them without side effects","    for (var i = 0; i < fn.args.length; ++i) fn.args[i] = new AVal;","    fn.self = new AVal;","    fn.computeRet = function(self, args) {","      // Prevent recursion","      return withDisabledComputing(fn, function() {","        var oldOrigin = cx.curOrigin;","        cx.curOrigin = fn.origin;","        var scope = node.scope","        var scopeCopy = new Scope(scope.prev, scope.originNode);","        for (var v in scope.props) {","          var local = scopeCopy.defProp(v, scope.props[v].originNode);","          for (var i = 0; i < args.length; ++i) if (fn.argNames[i] == v && i < args.length)","            args[i].propagate(local);","        }","        var argNames = fn.argNames.length != args.length ? fn.argNames.slice(0, args.length) : fn.argNames;","        while (argNames.length < args.length) argNames.push(\"?\");","        scopeCopy.fnType = new Fn(fn.name, self, args, argNames, ANull, fn.generator);","        scopeCopy.fnType.originNode = fn.originNode;","        if (fn.arguments) {","          var argset = scopeCopy.fnType.arguments = new AVal;","          scopeCopy.defProp(\"arguments\").addType(new Arr(argset));","          for (var i = 0; i < args.length; ++i) args[i].propagate(argset);","        }","        node.scope = scopeCopy;","        walk.recursive(node.body, scopeCopy, null, scopeGatherer);","        walk.recursive(node.body, scopeCopy, null, inferWrapper);","        cx.curOrigin = oldOrigin;","        return scopeCopy.fnType.retval;","      });","    };","  }","","  function maybeTagAsGeneric(fn) {","    var target = fn.retval;","    if (target == ANull || fn.isArrowFn()) return;","    var targetInner, asArray;","    if (!target.isEmpty() && (targetInner = target.getType()) instanceof Arr)","      target = asArray = targetInner.getProp(\"<i>\");","","    function explore(aval, path, depth) {","      if (depth > 3 || !aval.forward) return;","      for (var i = 0; i < aval.forward.length; ++i) {","        var prop = aval.forward[i].propagatesTo();","        if (!prop) continue;","        var newPath = path, dest;","        if (prop instanceof AVal) {","          dest = prop;","        } else if (prop.target instanceof AVal) {","          newPath += prop.pathExt;","          dest = prop.target;","        } else continue;","        if (dest == target) return newPath;","        var found = explore(dest, newPath, depth + 1);","        if (found) return found;","      }","    }","","    var foundPath = explore(fn.self, \"!this\", 0);","    for (var i = 0; !foundPath && i < fn.args.length; ++i)","      foundPath = explore(fn.args[i], \"!\" + i, 0);","","    if (foundPath) {","      if (asArray) foundPath = \"[\" + foundPath + \"]\";","      var p = new def.TypeParser(foundPath);","      var parsed = p.parseType(true);","      fn.computeRet = parsed.apply ? parsed : function() { return parsed; };","      fn.computeRetSource = foundPath;","      return true;","    }","  }","","  // SCOPE GATHERING PASS","","  function addVar(scope, nameNode) {","    return scope.defProp(nameNode.name, nameNode);","  }","  function patternName(node) {","    if (node.type == \"Identifier\") return node.name","    if (node.type == \"AssignmentPattern\") return patternName(node.left)","    if (node.type == \"ObjectPattern\") return \"{\" + node.properties.map(function(e) { return patternName(e.value) }).join(\", \") + \"}\"","    if (node.type == \"ArrayPattern\") return \"[\" + node.elements.map(function(e) { return e ? patternName(e) : \"\" }).join(\", \") + \"]\"","    if (node.type == \"RestElement\") return \"...\" + patternName(node.argument)","    return \"_\"","  }","","  function isBlockScopedDecl(node) {","    return node.type == \"VariableDeclaration\" && node.kind != \"var\" ||","      node.type == \"FunctionDeclaration\" ||","      node.type == \"ClassDeclaration\";","  }","","  function patternScopes(inner, outer) {","    return {inner: inner, outer: outer || inner}","  }","","  var scopeGatherer = exports.scopeGatherer = walk.make({","    VariablePattern: function(node, scopes) {","      if (scopes.inner) addVar(scopes.inner, node)","    },","    AssignmentPattern: function(node, scopes, c) {","      c(node.left, scopes, \"Pattern\")","      c(node.right, scopes.outer, \"Expression\")","    },","    AssignmentExpression: function(node, scope, c) {","      if (node.left.type == \"MemberExpression\")","        c(node.left, scope, \"Expression\")","      else","        c(node.left, patternScopes(false, scope), \"Pattern\")","      c(node.right, scope, \"Expression\")","    },","    MemberPattern: function(node, scope, c) {","      c(node, scope.outer)","    },","    Function: function(node, scope, c) {","      var inner = node.scope = new Scope(scope, node)","      var argVals = [], argNames = []","      for (var i = 0; i < node.params.length; ++i) {","        var param = node.params[i]","        argNames.push(patternName(param))","        if (param.type == \"Identifier\") {","          argVals.push(addVar(inner, param))","        } else {","          var arg = new AVal","          argVals.push(arg)","          arg.originNode = param","          c(param, patternScopes(inner), \"Pattern\")","        }","      }","      inner.fnType = new Fn(node.id && node.id.name, new AVal, argVals, argNames, ANull, node.generator)","      inner.fnType.originNode = node;","      if (node.id) {","        var decl = node.type == \"FunctionDeclaration\";","        addVar(decl ? scope : inner, node.id);","      }","      c(node.body, inner, node.expression ? \"Expression\" : \"Statement\");","    },","    BlockStatement: function(node, scope, c) {","      if (!node.scope && node.body.some(isBlockScopedDecl))","        scope = node.scope = new Scope(scope, node, true)","      walk.base.BlockStatement(node, scope, c)","    },","    CatchClause: function(node, scope, c) {","      scope = node.scope = new Scope(scope, node, false, true);","      if (node.param.type == \"Identifier\") {","        var v = addVar(scope, node.param);","        c(node.body, scope, \"Statement\");","        var ecma = cx.definitions.ecmascript;","        if (ecma && v.isEmpty()) getInstance(ecma[\"Error.prototype\"]).propagate(v, WG_CATCH_ERROR);","      } else {","        c(node.param, patternScopes(scope), \"Pattern\")","      }","    },","    VariableDeclaration: function(node, scope, c) {","      var targetScope = node.kind == \"var\" ? functionScope(scope) : scope","      for (var i = 0; i < node.declarations.length; ++i) {","        var decl = node.declarations[i];","        c(decl.id, patternScopes(targetScope, scope), \"Pattern\")","        if (decl.init) c(decl.init, scope, \"Expression\");","      }","    },","    ClassDeclaration: function(node, scope, c) {","      addVar(scope, node.id)","      if (node.superClass) c(node.superClass, scope, \"Expression\")","      for (var i = 0; i < node.body.body.length; i++)","        c(node.body.body[i], scope)","    },","    ForInStatement: function(node, scope, c) {","      if (!node.scope && isBlockScopedDecl(node.left))","        scope = node.scope = new Scope(scope, node, true)","      walk.base.ForInStatement(node, scope, c)","    },","    ForStatement: function(node, scope, c) {","      if (!node.scope && node.init && isBlockScopedDecl(node.init))","        scope = node.scope = new Scope(scope, node, true)","      walk.base.ForStatement(node, scope, c)","    },","    ImportDeclaration: function(node, scope) {","      for (var i = 0; i < node.specifiers.length; i++)","        addVar(scope, node.specifiers[i].local)","    }","  });","  scopeGatherer.ForOfStatement = scopeGatherer.ForInStatement","","  function rmScope(node) { if (node.scope) node.scope = null }","  var scopeClearer = {BlockStatement: rmScope, Function: rmScope, CatchClause: rmScope,","                      ForInStateMent: rmScope, ForStatement: rmScope}","  exports.clearScopes = function(ast) {","    walk.simple(ast, scopeClearer)","  };","","  // CONSTRAINT GATHERING PASS","","  var propName = exports.propName = function(node, inferInScope) {","    var key = node.property || node.key;","    if (!node.computed && key.type == \"Identifier\") return key.name;","    if (key.type == \"Literal\") {","      if (typeof key.value == \"string\") return key.value","      if (typeof key.value == \"number\") return String(key.value)","    }","    if (inferInScope) {","      var symName = symbolName(infer(key, inferInScope))","      if (symName) return node.propName = symName","    } else if (node.propName) {","      return node.propName","    }","    return \"<i>\";","  }","  function symbolName(val) {","    var sym = val.getSymbolType()","    if (sym) return sym.asPropName()","  }","","  function unopResultType(op) {","    switch (op) {","    case \"+\": case \"-\": case \"~\": return cx.num;","    case \"!\": return cx.bool;","    case \"typeof\": return cx.str;","    case \"void\": case \"delete\": return ANull;","    }","  }","  function binopIsBoolean(op) {","    switch (op) {","    case \"==\": case \"!=\": case \"===\": case \"!==\": case \"<\": case \">\": case \">=\": case \"<=\":","    case \"in\": case \"instanceof\": return true;","    }","  }","  function literalType(node) {","    if (node.regex) return getInstance(cx.protos.RegExp);","    switch (typeof node.value) {","    case \"boolean\": return cx.bool;","    case \"number\": return cx.num;","    case \"string\": return cx.str;","    case \"object\":","    case \"function\":","      if (!node.value) return ANull;","      return getInstance(cx.protos.RegExp);","    }","  }","","  function join(a, b) {","    if (a == b || b == ANull) return a","    if (a == ANull) return b","    var joined = new AVal","    a.propagate(joined)","    b.propagate(joined)","    return joined","  }","","  function connectParams(node, scope) {","    for (var i = 0; i < node.params.length; i++) {","      var param = node.params[i]","      if (param.type == \"Identifier\") continue","      connectPattern(param, scope, node.scope.fnType.args[i])","    }","  }","","  function ensureVar(node, scope) {","    return scope.hasProp(node.name) || cx.topScope.defProp(node.name, node)","  }","","  var inferPatternVisitor = exports.inferPatternVisitor = {","    Identifier: function(node, scope, source) {","      source.propagate(ensureVar(node, scope))","    },","    MemberExpression: function(node, scope, source) {","      var obj = infer(node.object, scope)","      var pName = propName(node, scope)","      obj.propagate(new DefProp(pName, source, node.property))","    },","    RestElement: function(node, scope, source) {","      connectPattern(node.argument, scope, new Arr(source))","    },","    ObjectPattern: function(node, scope, source) {","      for (var i = 0; i < node.properties.length; ++i) {","        var prop = node.properties[i]","        connectPattern(prop.value, scope, source.getProp(propName(prop)))","      }","    },","    ArrayPattern: function(node, scope, source) {","      for (var i = 0; i < node.elements.length; i++)","        if (node.elements[i])","          connectPattern(node.elements[i], scope, source.getProp(String(i)))","    },","    AssignmentPattern: function(node, scope, source) {","      connectPattern(node.left, scope, join(source, infer(node.right, scope)))","    }","  }","","  function connectPattern(node, scope, source) {","    var connecter = inferPatternVisitor[node.type]","    if (connecter) connecter(node, scope, source)","  }","","  function getThis(scope) {","    var fnScope = functionScope(scope)","    return fnScope.fnType ? fnScope.fnType.self : fnScope","  }","","  function maybeAddPhantomObj(obj) {","    if (!obj.isEmpty() || !obj.propertyOf) return","    obj.propertyOf.getProp(obj.propertyName).addType(new Obj, WG_PHANTOM_OBJ)","    maybeAddPhantomObj(obj.propertyOf)","  }","","  function inferClass(node, scope, name) {","    if (!name && node.id) name = node.id.name","","    var sup = cx.protos.Object, supCtor, delayed","    if (node.superClass) {","      if (node.superClass.type == \"Literal\" && node.superClass.value == null) {","        sup = null","      } else {","        var supVal = infer(node.superClass, scope), supProto","        supCtor = supVal.getFunctionType()","        if (supCtor && (supProto = supCtor.getProp(\"prototype\").getObjType())) {","          sup = supProto","        } else {","          supCtor = supVal","          delayed = supVal.getProp(\"prototype\")","        }","      }","    }","    var proto = new Obj(sup, name && name + \".prototype\")","    if (delayed) delayed.propagate(new HasProto(proto))","","    return withSuper(supCtor, delayed || sup, function() {","      var ctor, body = node.body.body","      for (var i = 0; i < body.length; i++)","        if (body[i].kind == \"constructor\") ctor = body[i].value","      var fn = node.objType = ctor ? infer(ctor, scope) : new Fn(name, ANull, [], null, ANull)","      fn.originNode = node.id || ctor || node","","      var inst = getInstance(proto, fn)","      fn.self.addType(inst)","      fn.defProp(\"prototype\", node).addType(proto)","      for (var i = 0; i < body.length; i++) {","        var method = body[i], target","        if (method.kind == \"constructor\") continue","        var pName = propName(method, scope)","        if (pName == \"<i>\" || method.kind == \"set\") {","          target = ANull","        } else {","          target = (method.static ? fn : proto).defProp(pName, method.key)","          target.initializer = true","          if (method.kind == \"get\") target = new IsCallee(inst, [], null, target)","        }","        infer(method.value, scope, target)","        var methodFn = target.getFunctionType()","        if (methodFn) methodFn.self.addType(inst)","      }","      return fn","    })","  }","","  function arrayLiteralType(elements, scope, inner) {","    var tuple = elements.length > 1 && elements.length < 6","    if (tuple) {","      var homogenous = true, litType","      for (var i = 0; i < elements.length; i++) {","        var elt = elements[i]","        if (!elt)","          tuple = false","        else if (elt.type != \"Literal\" || (litType && litType != typeof elt.value))","          homogenous = false","        else","          litType = typeof elt.value","      }","      if (homogenous) tuple = false","    }","","    if (tuple) {","      var types = []","      for (var i = 0; i < elements.length; ++i)","        types.push(inner(elements[i], scope))","      return new Arr(types)","    } else if (elements.length < 2) {","      return new Arr(elements[0] && inner(elements[0], scope))","    } else {","      var eltVal = new AVal","      for (var i = 0; i < elements.length; i++)","        if (elements[i]) inner(elements[i], scope).propagate(eltVal)","      return new Arr(eltVal)","    }","  }","","  function ret(f) {","    return function(node, scope, out, name) {","      var r = f(node, scope, name);","      if (out) r.propagate(out);","      return r;","    };","  }","  function fill(f) {","    return function(node, scope, out, name) {","      if (!out) out = new AVal;","      f(node, scope, out, name);","      return out;","    };","  }","","  var inferExprVisitor = exports.inferExprVisitor = {","    ArrayExpression: ret(function(node, scope) {","      return arrayLiteralType(node.elements, scope, infer)","    }),","    ObjectExpression: ret(function(node, scope, name) {","      var proto = cx.protos.Object, waitForProto","      for (var i = 0; i < node.properties.length; ++i) {","        var prop = node.properties[i]","        if (prop.key.name == \"__proto__\") {","          if (prop.value.type == \"Literal\" && prop.value.value == null) {","            proto = null","          } else {","            var protoVal = infer(prop.value, scope), known = protoVal.getObjType()","            if (known) proto = known","            else waitForProto = protoVal","          }","        }","      }","","      var obj = node.objType = new Obj(proto, name);","      if (waitForProto) waitForProto.propagate(new HasProto(obj))","      obj.originNode = node;","","      withSuper(null, waitForProto || proto, function() {","        for (var i = 0; i < node.properties.length; ++i) {","          var prop = node.properties[i], key = prop.key;","          if (ignoredProp(prop.key.name)) continue;","","          var name = propName(prop, scope), target","          if (name == \"<i>\" || prop.kind == \"set\") {","            target = ANull;","          } else {","            var val = target = obj.defProp(name, key);","            val.initializer = true;","            if (prop.kind == \"get\")","              target = new IsCallee(obj, [], null, val);","          }","          infer(prop.value, scope, target, name);","          if (prop.value.type == \"FunctionExpression\")","            prop.value.scope.fnType.self.addType(obj, WG_SPECULATIVE_THIS);","        }","      })","      return obj;","    }),","    FunctionExpression: ret(function(node, scope, name) {","      var inner = node.scope, fn = inner.fnType;","      if (name && !fn.name) fn.name = name;","      connectParams(node, inner)","      if (node.expression)","        infer(node.body, inner, inner.fnType.retval = new AVal)","      else","        walk.recursive(node.body, inner, null, inferWrapper, \"Statement\")","      if (node.type == \"ArrowFunctionExpression\")","        getThis(scope).propagate(fn.self)","      maybeTagAsInstantiated(node, fn) || maybeTagAsGeneric(fn);","      if (node.id) inner.getProp(node.id.name).addType(fn);","      return fn;","    }),","    ClassExpression: ret(inferClass),","    SequenceExpression: ret(function(node, scope) {","      for (var i = 0, l = node.expressions.length - 1; i < l; ++i)","        infer(node.expressions[i], scope, ANull);","      return infer(node.expressions[l], scope);","    }),","    UnaryExpression: ret(function(node, scope) {","      infer(node.argument, scope, ANull);","      return unopResultType(node.operator);","    }),","    UpdateExpression: ret(function(node, scope) {","      infer(node.argument, scope, ANull);","      return cx.num;","    }),","    BinaryExpression: ret(function(node, scope) {","      if (node.operator == \"+\") {","        var lhs = infer(node.left, scope);","        var rhs = infer(node.right, scope);","        if (lhs.hasType(cx.str) || rhs.hasType(cx.str)) return cx.str;","        if (lhs.hasType(cx.num) && rhs.hasType(cx.num)) return cx.num;","        var result = new AVal;","        lhs.propagate(new IsAdded(rhs, result));","        rhs.propagate(new IsAdded(lhs, result));","        return result;","      } else {","        infer(node.left, scope, ANull);","        infer(node.right, scope, ANull);","        return binopIsBoolean(node.operator) ? cx.bool : cx.num;","      }","    }),","    AssignmentExpression: ret(function(node, scope, name) {","      var rhs, pName;","      if (node.left.type == \"MemberExpression\") {","        pName = propName(node.left, scope)","        if (!name)","          name = node.left.object.type == \"Identifier\" ? node.left.object.name + \".\" + pName : pName","      } else if (!name && node.left.type == \"Identifier\") {","        name = node.left.name","      }","","      if (node.operator && node.operator != \"=\" && node.operator != \"+=\") {","        infer(node.right, scope, ANull);","        rhs = cx.num;","      } else {","        rhs = infer(node.right, scope, null, name);","      }","","      if (node.left.type == \"MemberExpression\") {","        var obj = infer(node.left.object, scope);","        if (pName == \"prototype\") maybeInstantiate(scope, 20);","        if (pName == \"<i>\") {","          // This is a hack to recognize for/in loops that copy","          // properties, and do the copying ourselves, insofar as we","          // manage, because such loops tend to be relevant for type","          // information.","          var v = node.left.property.name, local = scope.props[v], over = local && local.iteratesOver;","          if (over) {","            maybeInstantiate(scope, 20);","            var fromRight = node.right.type == \"MemberExpression\" && node.right.computed && node.right.property.name == v;","            over.forAllProps(function(prop, val, local) {","              if (local && prop != \"prototype\" && prop != \"<i>\")","                obj.propagate(new DefProp(prop, fromRight ? val : ANull));","            });","            return rhs;","          }","        }","","        obj.propagate(new DefProp(pName, rhs, node.left.property));","        maybeAddPhantomObj(obj)","        if (node.right.type == \"FunctionExpression\")","          obj.propagate(node.right.scope.fnType.self, WG_SPECULATIVE_THIS);","      } else {","        connectPattern(node.left, scope, rhs)","      }","      return rhs;","    }),","    LogicalExpression: fill(function(node, scope, out) {","      infer(node.left, scope, out);","      infer(node.right, scope, out);","    }),","    ConditionalExpression: fill(function(node, scope, out) {","      infer(node.test, scope, ANull);","      infer(node.consequent, scope, out);","      infer(node.alternate, scope, out);","    }),","    NewExpression: fill(function(node, scope, out, name) {","      if (node.callee.type == \"Identifier\" && node.callee.name in scope.props)","        maybeInstantiate(scope, 20);","","      for (var i = 0, args = []; i < node.arguments.length; ++i)","        args.push(infer(node.arguments[i], scope));","      var callee = infer(node.callee, scope);","      var self = new AVal;","      callee.propagate(new IsCtor(self, name && /\\.prototype$/.test(name)));","      self.propagate(out, WG_NEW_INSTANCE);","      callee.propagate(new IsCallee(self, args, node.arguments, new IfObj(out)));","    }),","    CallExpression: fill(function(node, scope, out) {","      for (var i = 0, args = []; i < node.arguments.length; ++i)","        args.push(infer(node.arguments[i], scope));","      var outerFn = functionScope(scope).fnType","      if (node.callee.type == \"MemberExpression\") {","        var self = infer(node.callee.object, scope);","        var pName = propName(node.callee, scope)","        if (outerFn && (pName == \"call\" || pName == \"apply\") &&","            outerFn.args.indexOf(self) > -1)","          maybeInstantiate(scope, 30);","        self.propagate(new HasMethodCall(pName, args, node.arguments, out));","      } else if (node.callee.type == \"Super\" && cx.curSuperCtor) {","        node.callee.superType = cx.curSuperCtor","        cx.curSuperCtor.propagate(new IsCallee(getThis(scope), args, node.arguments, out))","        getThis(scope).propagate(out, WG_NEW_INSTANCE)","      } else {","        var callee = infer(node.callee, scope);","        if (outerFn && outerFn.args.indexOf(callee) > -1)","          maybeInstantiate(scope, 30);","        var knownFn = callee.getFunctionType();","        if (knownFn && knownFn.instantiateScore && outerFn)","          maybeInstantiate(scope, knownFn.instantiateScore / 5);","        callee.propagate(new IsCallee(cx.topScope, args, node.arguments, out));","      }","    }),","    MemberExpression: fill(function(node, scope, out) {","      var name = propName(node), wg;","      if (name == \"<i>\") {","        var propType = infer(node.property, scope)","        var symName = symbolName(propType)","        if (symName)","          name = node.propName = symName","        else if (!propType.hasType(cx.num))","          wg = WG_MULTI_MEMBER","      }","      infer(node.object, scope).getProp(name).propagate(out, wg)","    }),","    Identifier: ret(function(node, scope) {","      if (node.name == \"arguments\") {","        var fnScope = functionScope(scope, false)","        if (fnScope.fnType && !(node.name in fnScope.props))","          fnScope.defProp(node.name, fnScope.fnType.originNode)","            .addType(new Arr(fnScope.fnType.arguments = new AVal));","      }","      return scope.getProp(node.name);","    }),","    ThisExpression: ret(function(_node, scope) {","      return getThis(scope)","    }),","    Super: ret(function(node) {","      return node.superType = cx.curSuper || ANull","    }),","    Literal: ret(function(node) {","      return literalType(node);","    }),","    TemplateLiteral: ret(function(node, scope) {","      for (var i = 0; i < node.expressions.length; ++i)","        infer(node.expressions[i], scope, ANull)","      return cx.str","    }),","    TaggedTemplateExpression: fill(function(node, scope, out) {","      var args = [new Arr(cx.str)]","      for (var i = 0; i < node.quasi.expressions.length; ++i)","        args.push(infer(node.quasi.expressions[i], scope))","      infer(node.tag, scope, new IsCallee(cx.topScope, args, node.quasi.expressions, out))","    }),","    YieldExpression: ret(function(node, scope) {","      var output = ANull, fn = functionScope(scope).fnType","      if (fn) {","        if (fn.retval == ANull) fn.retval = new AVal","        if (!fn.yieldval) fn.yieldval = new AVal","        output = fn.retval","      }","      if (node.argument) {","        if (node.delegate) {","          infer(node.argument, scope, new HasMethodCall(\"next\", [], null,","                                                        new GetProp(\"value\", output)))","        } else {","          infer(node.argument, scope, output)","        }","      }","      return fn ? fn.yieldval : ANull","    })","  };","  inferExprVisitor.ArrowFunctionExpression = inferExprVisitor.FunctionExpression","","  function infer(node, scope, out, name) {","    var handler = inferExprVisitor[node.type];","    return handler ? handler(node, scope, out, name) : ANull;","  }","","  function loopPattern(init) {","    return init.type == \"VariableDeclaration\" ? init.declarations[0].id : init","  }","","  var inferWrapper = exports.inferWrapper = walk.make({","    Expression: function(node, scope) {","      infer(node, node.scope || scope, ANull);","    },","","    FunctionDeclaration: function(node, scope, c) {","      var inner = node.scope, fn = inner.fnType;","      connectParams(node, inner)","      c(node.body, inner, \"Statement\");","      maybeTagAsInstantiated(node, fn) || maybeTagAsGeneric(fn);","      scope.getProp(node.id.name).addType(fn)","    },","","    Statement: function(node, scope, c) {","      c(node, node.scope || scope)","    },","","    VariableDeclaration: function(node, scope) {","      for (var i = 0; i < node.declarations.length; ++i) {","        var decl = node.declarations[i];","        if (decl.id.type == \"Identifier\") {","          var prop = scope.getProp(decl.id.name);","          if (decl.init)","            infer(decl.init, scope, prop, decl.id.name);","        } else if (decl.init) {","          connectPattern(decl.id, scope, infer(decl.init, scope))","        }","      }","    },","","    ClassDeclaration: function(node, scope) {","      scope.getProp(node.id.name).addType(inferClass(node, scope, node.id.name))","    },","","    ReturnStatement: function(node, scope) {","      if (!node.argument) return;","      var output = ANull, fn = functionScope(scope).fnType","      if (fn) {","        if (fn.retval == ANull) fn.retval = new AVal;","        output = fn.retval;","      }","      infer(node.argument, scope, output);","    },","","    ForInStatement: function(node, scope, c) {","      var source = infer(node.right, scope);","      if ((node.right.type == \"Identifier\" && node.right.name in scope.props) ||","          (node.right.type == \"MemberExpression\" && node.right.property.name == \"prototype\")) {","        maybeInstantiate(scope, 5);","        var pattern = loopPattern(node.left)","        if (pattern.type == \"Identifier\") {","          if (pattern.name in scope.props)","            scope.getProp(pattern.name).iteratesOver = source","          source.getProp(\"<i>\").propagate(ensureVar(pattern, scope))","        } else {","          connectPattern(pattern, scope, source.getProp(\"<i>\"))","        }","      }","      c(node.body, scope, \"Statement\");","    },","","    ForOfStatement: function(node, scope, c) {","      var pattern = loopPattern(node.left), target","      if (pattern.type == \"Identifier\")","        target = ensureVar(pattern, scope)","      else","        connectPattern(pattern, scope, target = new AVal)","      infer(node.right, scope, new HasMethodCall(\":Symbol.iterator\", [], null,","                                                 new HasMethodCall(\"next\", [], null,","                                                                   new GetProp(\"value\", target))))","      c(node.body, scope, \"Statement\")","    }","  });","","  // PARSING","","  var parse = exports.parse = function(text, options, thirdArg) {","    if (!options || Array.isArray(options)) options = thirdArg","    var ast;","    try { ast = acorn.parse(text, options); }","    catch(e) { ast = acorn_loose.parse_dammit(text, options); }","    return ast;","  };","","  // ANALYSIS INTERFACE","","  exports.analyze = function(ast, name, scope) {","    if (typeof ast == \"string\") ast = parse(ast);","","    if (!name) name = \"file#\" + cx.origins.length;","    exports.addOrigin(cx.curOrigin = name);","","    if (!scope) scope = cx.topScope;","    cx.startAnalysis();","","    walk.recursive(ast, scope, null, scopeGatherer);","    if (cx.parent) cx.parent.signal(\"preInfer\", ast, scope)","    walk.recursive(ast, scope, null, inferWrapper);","    if (cx.parent) cx.parent.signal(\"postInfer\", ast, scope)","","    cx.curOrigin = null;","  };","","  // PURGING","","  exports.purge = function(origins, start, end) {","    var test = makePredicate(origins, start, end);","    ++cx.purgeGen;","    cx.topScope.purge(test);","    for (var prop in cx.props) {","      var list = cx.props[prop];","      for (var i = 0; i < list.length; ++i) {","        var obj = list[i], av = obj.props[prop];","        if (!av || test(av, av.originNode)) list.splice(i--, 1);","      }","      if (!list.length) delete cx.props[prop];","    }","  };","","  function makePredicate(origins, start, end) {","    var arr = Array.isArray(origins);","    if (arr && origins.length == 1) { origins = origins[0]; arr = false; }","    if (arr) {","      if (end == null) return function(n) { return origins.indexOf(n.origin) > -1; };","      return function(n, pos) { return pos && pos.start >= start && pos.end <= end && origins.indexOf(n.origin) > -1; };","    } else {","      if (end == null) return function(n) { return n.origin == origins; };","      return function(n, pos) { return pos && pos.start >= start && pos.end <= end && n.origin == origins; };","    }","  }","","  AVal.prototype.purge = function(test) {","    if (this.purgeGen == cx.purgeGen) return;","    this.purgeGen = cx.purgeGen;","    for (var i = 0; i < this.types.length; ++i) {","      var type = this.types[i];","      if (test(type, type.originNode))","        this.types.splice(i--, 1);","      else","        type.purge(test);","    }","    if (!this.types.length) this.maxWeight = 0;","","    if (this.forward) for (var i = 0; i < this.forward.length; ++i) {","      var f = this.forward[i];","      if (test(f)) {","        this.forward.splice(i--, 1);","        if (this.props) this.props = null;","      } else if (f.purge) {","        f.purge(test);","      }","    }","  };","  ANull.purge = function() {};","  Obj.prototype.purge = function(test) {","    if (this.purgeGen == cx.purgeGen) return true;","    this.purgeGen = cx.purgeGen;","    for (var p in this.props) {","      var av = this.props[p];","      if (test(av, av.originNode))","        this.removeProp(p);","      av.purge(test);","    }","  };","  Fn.prototype.purge = function(test) {","    if (Obj.prototype.purge.call(this, test)) return;","    this.self.purge(test);","    this.retval.purge(test);","    for (var i = 0; i < this.args.length; ++i) this.args[i].purge(test);","  };","","  // EXPRESSION TYPE DETERMINATION","","  function findByPropertyName(name) {","    guessing = true;","    var found = objsWithProp(name);","    if (found) for (var i = 0; i < found.length; ++i) {","      var val = found[i].getProp(name);","      if (!val.isEmpty()) return val;","    }","    return ANull;","  }","","  function generatorResult(input, output) {","    var retObj = new Obj(true)","    retObj.defProp(\"done\").addType(cx.bool)","    output.propagate(retObj.defProp(\"value\"))","    var method = new Fn(null, ANull, input ? [input] : [], input ? [\"?\"] : [], retObj)","    var result = new Obj(cx.definitions.ecmascript && cx.definitions.ecmascript.generator_prototype || true)","    result.defProp(\"next\").addType(method)","    return result","  }","","  function maybeIterator(fn, output) {","    if (!fn.generator) return output","    if (!fn.computeRet) { // Reuse iterator objects for non-computed return types","      if (fn.generator === true) fn.generator = generatorResult(fn.yieldval, output)","      return fn.generator","    }","    return generatorResult(fn.yieldval, output)","  }","","  function computeReturnType(funcNode, argNodes, scope) {","    var fn = findType(funcNode, scope).getFunctionType()","    if (!fn) return ANull","    var result = fn.retval","    if (fn.computeRet) {","      for (var i = 0, args = []; i < argNodes.length; ++i)","        args.push(findType(argNodes[i], scope))","      var self = ANull","      if (funcNode.type == \"MemberExpression\")","        self = findType(funcNode.object, scope)","      result = fn.computeRet(self, args, argNodes);","    }","    return maybeIterator(fn, result)","  }","","  var typeFinder = exports.typeFinder = {","    ArrayExpression: function(node, scope) {","      return arrayLiteralType(node.elements, scope, findType)","    },","    ObjectExpression: function(node) {","      return node.objType;","    },","    ClassExpression: function(node) {","      return node.objType;","    },","    FunctionExpression: function(node) {","      return node.scope.fnType;","    },","    ArrowFunctionExpression: function(node) {","      return node.scope.fnType;","    },","    SequenceExpression: function(node, scope) {","      return findType(node.expressions[node.expressions.length-1], scope);","    },","    UnaryExpression: function(node) {","      return unopResultType(node.operator);","    },","    UpdateExpression: function() {","      return cx.num;","    },","    BinaryExpression: function(node, scope) {","      if (binopIsBoolean(node.operator)) return cx.bool;","      if (node.operator == \"+\") {","        var lhs = findType(node.left, scope);","        var rhs = findType(node.right, scope);","        if (lhs.hasType(cx.str) || rhs.hasType(cx.str)) return cx.str;","      }","      return cx.num;","    },","    AssignmentExpression: function(node, scope) {","      return findType(node.right, scope);","    },","    LogicalExpression: function(node, scope) {","      var lhs = findType(node.left, scope);","      return lhs.isEmpty() ? findType(node.right, scope) : lhs;","    },","    ConditionalExpression: function(node, scope) {","      var lhs = findType(node.consequent, scope);","      return lhs.isEmpty() ? findType(node.alternate, scope) : lhs;","    },","    NewExpression: function(node, scope) {","      var f = findType(node.callee, scope).getFunctionType();","      var proto = f && f.getProp(\"prototype\").getObjType();","      if (!proto) return ANull;","      return getInstance(proto, f);","    },","    CallExpression: function(node, scope) {","      return computeReturnType(node.callee, node.arguments, scope)","    },","    MemberExpression: function(node, scope) {","      var propN = propName(node), obj = findType(node.object, scope).getType();","      if (obj) return obj.getProp(propN);","      if (propN == \"<i>\") return ANull;","      return findByPropertyName(propN);","    },","    MethodDefinition: function(node) {","      var propN = propName(node), obj = getThis(node.value.scope).getType();","      if (obj) return obj.getProp(propN);","      return ANull;","    },","    Identifier: function(node, scope) {","      return scope.hasProp(node.name) || ANull;","    },","    ThisExpression: function(_node, scope) {","      return getThis(scope)","    },","    Literal: function(node) {","      return literalType(node);","    },","    Super: ret(function(node) {","      return node.superType","    }),","    TemplateLiteral: function() {","      return cx.str","    },","    TaggedTemplateExpression: function(node, scope) {","      return computeReturnType(node.tag, node.quasi.expressions, scope)","    },","    YieldExpression: function(_node, scope) {","      var fn = functionScope(scope).fnType","      return fn ? fn.yieldval : ANull","    }","  };","","  function findType(node, scope) {","    var finder = typeFinder[node.type];","    return finder ? finder(node, scope) : ANull;","  }","","  var searchVisitor = exports.searchVisitor = walk.make({","    Function: function(node, _st, c) {","      walk.base.Function(node, node.scope, c)","    },","    CatchClause: function(node, _st, c) {","      walk.base.CatchClause(node, node.scope, c)","    },","    Property: function(node, st, c) {","      if (node.computed) c(node.key, st, \"Expression\");","      if (node.key != node.value) c(node.value, st, \"Expression\");","    },","    Statement: function(node, st, c) {","      c(node, node.scope || st)","    },","    ImportSpecifier: function(node, st, c) {","      c(node.local, st)","    },","    ImportDefaultSpecifier: function(node, st, c) {","      c(node.local, st)","    },","    ImportNamespaceSpecifier: function(node, st, c) {","      c(node.local, st)","    }","  });","  exports.fullVisitor = walk.make({","    MemberExpression: function(node, st, c) {","      c(node.object, st, \"Expression\");","      c(node.property, st, node.computed ? \"Expression\" : null);","    },","    Property: function(node, st, c) {","      if (node.computed) c(node.key, st, \"Expression\");","      c(node.value, st, \"Expression\");","    }","  }, searchVisitor);","","  exports.findExpressionAt = function(ast, start, end, defaultScope, filter) {","    var test = filter || function(_t, node) {","      if (node.type == \"Identifier\" && node.name == \"✖\") return false;","      return typeFinder.hasOwnProperty(node.type);","    };","    return walk.findNodeAt(ast, start, end, test, searchVisitor, defaultScope || cx.topScope);","  };","","  exports.findExpressionAround = function(ast, start, end, defaultScope, filter) {","    var test = filter || function(_t, node) {","      if (start != null && node.start > start) return false;","      if (node.type == \"Identifier\" && node.name == \"✖\") return false;","      return typeFinder.hasOwnProperty(node.type);","    };","    return walk.findNodeAround(ast, end, test, searchVisitor, defaultScope || cx.topScope);","  };","","  exports.expressionType = function(found) {","    return findType(found.node, found.state);","  };","","  // Finding the expected type of something, from context","","  exports.parentNode = function(child, ast) {","    var stack = [];","    function c(node, st, override) {","      if (node.start <= child.start && node.end >= child.end) {","        var top = stack[stack.length - 1];","        if (node == child) throw {found: top};","        if (top != node) stack.push(node);","        walk.base[override || node.type](node, st, c);","        if (top != node) stack.pop();","      }","    }","    try {","      c(ast, null);","    } catch (e) {","      if (e.found) return e.found;","      throw e;","    }","  };","","  var findTypeFromContext = exports.findTypeFromContext = {","    ArrayExpression: function(parent, _, get) { return get(parent, true).getProp(\"<i>\"); },","    ObjectExpression: function(parent, node, get) {","      for (var i = 0; i < parent.properties.length; ++i) {","        var prop = node.properties[i];","        if (prop.value == node)","          return get(parent, true).getProp(propName(prop));","      }","    },","    UnaryExpression: function(parent) { return unopResultType(parent.operator); },","    UpdateExpression: function() { return cx.num; },","    BinaryExpression: function(parent) { return binopIsBoolean(parent.operator) ? cx.bool : cx.num; },","    AssignmentExpression: function(parent, _, get) { return get(parent.left); },","    LogicalExpression: function(parent, _, get) { return get(parent, true); },","    ConditionalExpression: function(parent, node, get) {","      if (parent.consequent == node || parent.alternate == node) return get(parent, true);","    },","    CallExpression: function(parent, node, get) {","      for (var i = 0; i < parent.arguments.length; i++) {","        var arg = parent.arguments[i];","        if (arg == node) {","          var calleeType = get(parent.callee).getFunctionType();","          if (calleeType instanceof Fn)","            return calleeType.args[i];","          break;","        }","      }","    },","    ReturnStatement: function(_parent, node, get) {","      // tweaking search position to avoid endless recursion","      // when looking for definition of key in fn ( return fn ( return object ) )","      // see ternjs/tern#777","      var fnNode = walk.findNodeAround(node.sourceFile.ast, node.start - 1, \"Function\");","      if (fnNode) {","        var fnType = fnNode.node.type != \"FunctionDeclaration\"","          ? get(fnNode.node, true).getFunctionType()","          : fnNode.node.scope.fnType;","        if (fnType) return fnType.retval.getType();","      }","    },","    VariableDeclarator: function(parent, node, get) {","      if (parent.init == node) return get(parent.id)","    }","  };","  findTypeFromContext.NewExpression = findTypeFromContext.CallExpression","","  exports.typeFromContext = function(ast, found) {","    var parent = exports.parentNode(found.node, ast);","    var type = null;","    if (findTypeFromContext.hasOwnProperty(parent.type)) {","      var finder = findTypeFromContext[parent.type];","      type = finder && finder(parent, found.node, function(node, fromContext) {","        var obj = {node: node, state: found.state};","        var tp = fromContext ? exports.typeFromContext(ast, obj) : exports.expressionType(obj);","        return tp || ANull;","      });","    }","    return type || exports.expressionType(found);","  };","","  // Flag used to indicate that some wild guessing was used to produce","  // a type or set of completions.","  var guessing = false;","","  exports.resetGuessing = function(val) { guessing = val; };","  exports.didGuess = function() { return guessing; };","","  exports.forAllPropertiesOf = function(type, f) {","    type.gatherProperties(f, 0);","  };","","  exports.findRefs = function(ast, baseScope, name, refScope, f) {","    function handleId(node, scope, ancestors) {","      if (node.name != name ||","          (node == ast.id && ast.type == \"FunctionDeclaration\")) return;","      for (var s = scope; s; s = s.prev) {","        if (s == refScope) f(node, scope, ancestors);","        if (name in s.props) return;","      }","    }","    walk.ancestor(ast, {Identifier: handleId, VariablePattern: handleId},","                  exports.fullVisitor, baseScope)","  };","","  var simpleWalker = walk.make({","    Function: function(node, _scope, c) {","      c(node.body, node.scope, node.expression ? \"Expression\" : \"Statement\")","    },","    Statement: function(node, scope, c) {","      c(node, node.scope || scope)","    }","  });","","  exports.findPropRefs = function(ast, scope, objType, name, f) {","    // Find the type which owns the property in hierarchy","    while (objType && !objType.props[name] && !(objType.maybeProps && objType.maybeProps[name])) {","      objType = objType.proto;","    }","    if (!objType) throw new Error(\"Couldn't locate property in the base object type.\");","","    function isObjTypeProto(type) {","      // Check whether the found type has objType in its hierarchy","      while (type && type != objType) {","        // Ff property is overriden higher in the hierarchy, return false","        if (type.props[name] || (type.maybeProps && type.maybeProps[name])) {","          return false;","        }","        type = type.proto;","      }","      return type;","    }","","    walk.simple(ast, {","      MemberExpression: function(node, scope) {","        if (node.computed || propName(node) != name) return;","        if (isObjTypeProto(findType(node.object, scope).getType())) f(node.property, scope);","      },","      ObjectExpression: function(node, scope) {","        if (findType(node, scope).getType() != objType) return;","        for (var i = 0; i < node.properties.length; ++i)","          if (propName(node.properties[i]) == name) f(node.properties[i].key, scope);","      },","      MethodDefinition: function(node) {","        if (propName(node) != name) return;","        if (node.value && isObjTypeProto(getThis(node.value.scope).getType())) f(node.key, node.value.scope);","      }","    }, simpleWalker, scope);","  };","","  // LOCAL-VARIABLE QUERIES","","  var scopeAt = exports.scopeAt = function(ast, pos, defaultScope) {","    var found = walk.findNodeAround(ast, pos, function(_, node) {","      return node.scope;","    });","    if (found) return found.node.scope;","    else return defaultScope || cx.topScope;","  };","","  exports.forAllLocalsAt = function(ast, pos, defaultScope, f) {","    var scope = scopeAt(ast, pos, defaultScope);","    scope.gatherProperties(f, 0);","  };","","  // INIT DEF MODULE","","  // Delayed initialization because of cyclic dependencies.","  def = exports.def = def.init({}, exports);","});",""],"l":{"15":1,"16":1,"17":1,"19":0,"20":0,"21":0,"25":1,"26":0,"27":0,"34":1,"37":0,"39":0,"40":0,"49":0,"52":1,"53":8,"54":57,"55":8,"60":1,"65":1,"66":0,"67":0,"68":0,"70":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"81":0,"82":0,"83":0,"84":0,"85":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"100":0,"101":0,"102":0,"103":0,"104":0,"106":0,"110":0,"114":0,"116":0,"118":0,"119":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"129":0,"133":0,"134":0,"138":0,"139":0,"140":0,"144":0,"145":0,"146":0,"147":0,"148":0,"152":0,"154":0,"155":0,"156":0,"157":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"172":0,"173":0,"175":0,"176":0,"177":0,"178":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"189":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"200":0,"201":0,"205":0,"206":0,"209":0,"210":0,"214":0,"215":0,"216":0,"218":0,"219":0,"223":1,"224":0,"225":0,"226":0,"229":1,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"253":0,"254":0,"256":0,"260":1,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"271":0,"273":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"288":0,"289":0,"290":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"304":0,"306":0,"311":1,"312":19,"313":0,"314":0,"316":19,"317":49,"318":19,"321":1,"323":0,"326":0,"327":0,"329":0,"331":0,"332":0,"336":1,"338":0,"341":0,"342":0,"343":0,"344":0,"346":0,"349":1,"350":0,"352":0,"353":0,"357":1,"358":0,"359":0,"360":0,"361":0,"363":1,"365":0,"366":0,"369":0,"370":0,"371":0,"372":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"385":0,"388":0,"389":0,"390":0,"393":0,"397":1,"399":0,"400":0,"403":0,"404":0,"405":0,"407":0,"410":1,"412":0,"415":0,"416":0,"417":0,"421":1,"422":0,"424":0,"425":0,"426":0,"427":0,"428":0,"430":0,"431":0,"432":0,"433":0,"436":1,"438":0,"441":0,"442":0,"443":0,"444":0,"446":0,"450":1,"451":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"464":1,"466":0,"469":0,"470":0,"471":0,"472":0,"474":0,"477":1,"478":0,"480":0,"482":0,"485":1,"486":0,"488":0,"489":0,"493":1,"494":0,"496":0,"497":0,"501":1,"503":0,"506":0,"508":0,"509":0,"510":0,"515":1,"516":1,"518":0,"519":0,"520":0,"521":0,"522":0,"525":1,"526":1,"528":0,"529":0,"531":0,"535":1,"536":0,"537":0,"538":0,"541":1,"542":0,"543":0,"544":0,"545":0,"546":0,"548":0,"549":0,"550":0,"552":1,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"563":0,"565":0,"566":0,"567":0,"570":0,"571":0,"572":0,"573":0,"574":0,"577":0,"578":0,"579":0,"580":0,"582":0,"583":0,"585":0,"586":0,"587":0,"588":0,"590":0,"591":0,"592":0,"595":0,"596":0,"597":0,"598":0,"599":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"611":0,"613":0,"614":0,"616":0,"619":0,"620":0,"621":0,"625":0,"626":0,"627":0,"628":0,"629":0,"631":0,"634":0,"635":0,"636":0,"637":0,"638":0,"641":0,"642":0,"643":0,"645":0,"648":0,"649":0,"650":0,"651":0,"654":0,"655":0,"656":0,"658":0,"659":0,"660":0,"661":0,"663":0,"667":0,"668":0,"669":0,"671":0,"672":0,"675":0,"676":0,"677":0,"680":0,"681":0,"682":0,"684":0,"687":1,"688":1,"689":0,"692":1,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"700":1,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"711":0,"712":0,"713":0,"714":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"725":0,"727":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"738":0,"740":0,"741":0,"744":1,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"754":0,"755":0,"756":0,"759":1,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"774":0,"775":0,"777":0,"779":0,"781":0,"784":0,"785":0,"789":1,"790":0,"791":0,"792":0,"794":1,"796":0,"797":0,"800":1,"801":0,"802":0,"803":0,"804":0,"805":0,"807":0,"812":1,"813":0,"814":0,"817":1,"818":0,"823":1,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"854":0,"855":0,"859":1,"860":0,"863":1,"864":1,"866":1,"867":0,"868":0,"869":0,"870":0,"873":1,"874":0,"875":0,"877":1,"878":1,"880":1,"881":1,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"890":1,"891":0,"894":1,"895":1,"896":0,"898":0,"899":0,"900":0,"901":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"910":0,"911":0,"914":1,"915":0,"916":0,"917":0,"918":0,"919":0,"924":1,"925":0,"926":0,"927":0,"928":0,"929":0,"931":1,"934":0,"935":0,"936":0,"937":0,"942":1,"943":0,"944":0,"945":0,"951":1,"952":0,"953":0,"956":1,"957":1,"958":0,"959":0,"960":0,"962":0,"963":0,"967":1,"968":0,"969":0,"970":0,"971":0,"972":0,"974":0,"978":1,"980":0,"981":0,"982":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1012":1,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1019":1,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1037":0,"1038":0,"1039":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1053":1,"1054":0,"1056":1,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1065":1,"1066":0,"1071":1,"1072":0,"1075":1,"1077":0,"1080":0,"1081":0,"1084":0,"1085":0,"1087":0,"1088":0,"1091":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1102":0,"1103":0,"1104":0,"1105":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1114":0,"1117":0,"1118":0,"1119":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1129":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1141":0,"1142":0,"1143":0,"1144":0,"1147":0,"1148":0,"1149":0,"1152":0,"1153":0,"1154":0,"1157":0,"1158":0,"1161":1,"1163":1,"1164":1,"1166":1,"1167":0,"1172":1,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1185":0,"1187":1,"1188":0,"1189":0,"1192":1,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1200":1,"1201":0,"1203":0,"1206":1,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1214":0,"1215":0,"1219":1,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1228":1,"1229":0,"1230":0,"1231":0,"1232":0,"1236":1,"1237":0,"1240":1,"1242":0,"1245":0,"1246":0,"1247":0,"1250":0,"1253":0,"1254":0,"1255":0,"1259":0,"1260":0,"1261":0,"1264":0,"1268":1,"1269":0,"1270":0,"1273":1,"1274":0,"1275":0,"1278":1,"1279":0,"1280":0,"1281":0,"1284":1,"1285":0,"1287":0,"1288":0,"1289":0,"1290":0,"1292":0,"1293":0,"1294":0,"1295":0,"1297":0,"1298":0,"1302":0,"1303":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1322":0,"1323":0,"1324":0,"1326":0,"1327":0,"1328":0,"1330":0,"1334":1,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1345":0,"1347":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1358":0,"1359":0,"1360":0,"1361":0,"1365":1,"1366":16,"1367":0,"1368":0,"1369":0,"1372":1,"1373":6,"1374":0,"1375":0,"1376":0,"1380":1,"1382":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1392":0,"1393":0,"1394":0,"1399":0,"1400":0,"1401":0,"1403":0,"1404":0,"1405":0,"1406":0,"1408":0,"1409":0,"1410":0,"1412":0,"1413":0,"1414":0,"1415":0,"1417":0,"1418":0,"1419":0,"1422":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1440":0,"1441":0,"1442":0,"1445":0,"1446":0,"1449":0,"1450":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1463":0,"1464":0,"1465":0,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1478":0,"1479":0,"1480":0,"1482":0,"1485":0,"1486":0,"1487":0,"1488":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1501":0,"1505":0,"1506":0,"1507":0,"1508":0,"1510":0,"1512":0,"1515":0,"1516":0,"1519":0,"1520":0,"1521":0,"1524":0,"1525":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1570":0,"1573":0,"1574":0,"1575":0,"1576":0,"1579":0,"1582":0,"1585":0,"1588":0,"1591":0,"1592":0,"1593":0,"1596":0,"1597":0,"1598":0,"1599":0,"1602":0,"1603":0,"1604":0,"1605":0,"1606":0,"1608":0,"1609":0,"1610":0,"1613":0,"1616":0,"1619":1,"1621":1,"1622":0,"1623":0,"1626":1,"1627":0,"1630":1,"1632":0,"1636":0,"1637":0,"1638":0,"1639":0,"1640":0,"1644":0,"1648":0,"1649":0,"1650":0,"1651":0,"1652":0,"1653":0,"1654":0,"1655":0,"1661":0,"1665":0,"1666":0,"1667":0,"1668":0,"1669":0,"1671":0,"1675":0,"1676":0,"1678":0,"1679":0,"1680":0,"1681":0,"1682":0,"1683":0,"1685":0,"1688":0,"1692":0,"1693":0,"1694":0,"1696":0,"1697":0,"1700":0,"1706":1,"1707":0,"1708":0,"1709":0,"1710":0,"1711":0,"1716":1,"1717":0,"1719":0,"1720":0,"1722":0,"1723":0,"1725":0,"1726":0,"1727":0,"1728":0,"1730":0,"1735":1,"1736":0,"1737":0,"1738":0,"1739":0,"1740":0,"1741":0,"1742":0,"1743":0,"1745":0,"1749":1,"1750":0,"1751":0,"1752":0,"1753":0,"1754":0,"1756":0,"1757":0,"1761":1,"1762":0,"1763":0,"1764":0,"1765":0,"1766":0,"1767":0,"1769":0,"1771":0,"1773":0,"1774":0,"1775":0,"1776":0,"1777":0,"1778":0,"1779":0,"1783":1,"1784":1,"1785":0,"1786":0,"1787":0,"1788":0,"1789":0,"1790":0,"1791":0,"1794":1,"1795":0,"1796":0,"1797":0,"1798":0,"1803":1,"1804":0,"1805":0,"1806":0,"1807":0,"1808":0,"1810":0,"1813":1,"1814":0,"1815":0,"1816":0,"1817":0,"1818":0,"1819":0,"1820":0,"1823":1,"1824":0,"1825":0,"1826":0,"1827":0,"1829":0,"1832":1,"1833":0,"1834":0,"1835":0,"1836":0,"1837":0,"1838":0,"1839":0,"1840":0,"1841":0,"1842":0,"1844":0,"1847":1,"1849":0,"1852":0,"1855":0,"1858":0,"1861":0,"1864":0,"1867":0,"1870":0,"1873":0,"1874":0,"1875":0,"1876":0,"1877":0,"1879":0,"1882":0,"1885":0,"1886":0,"1889":0,"1890":0,"1893":0,"1894":0,"1895":0,"1896":0,"1899":0,"1902":0,"1903":0,"1904":0,"1905":0,"1908":0,"1909":0,"1910":0,"1913":0,"1916":0,"1919":0,"1922":0,"1925":0,"1928":0,"1931":0,"1932":0,"1936":1,"1937":0,"1938":0,"1941":1,"1943":0,"1946":0,"1949":0,"1950":0,"1953":0,"1956":0,"1959":0,"1962":0,"1965":1,"1967":0,"1968":0,"1971":0,"1972":0,"1976":1,"1977":0,"1978":0,"1979":0,"1981":0,"1984":1,"1985":0,"1986":0,"1987":0,"1988":0,"1990":0,"1993":1,"1994":0,"1999":1,"2000":0,"2001":1,"2002":0,"2003":0,"2004":0,"2005":0,"2006":0,"2007":0,"2010":0,"2011":0,"2013":0,"2014":0,"2018":1,"2019":0,"2021":0,"2022":0,"2023":0,"2024":0,"2027":0,"2028":0,"2029":0,"2030":0,"2031":0,"2033":0,"2036":0,"2037":0,"2038":0,"2039":0,"2040":0,"2041":0,"2042":0,"2050":0,"2051":0,"2052":0,"2055":0,"2059":0,"2062":1,"2064":1,"2065":0,"2066":0,"2067":0,"2068":0,"2069":0,"2070":0,"2071":0,"2072":0,"2075":0,"2080":1,"2082":1,"2083":1,"2085":1,"2086":0,"2089":1,"2090":1,"2091":0,"2092":0,"2093":0,"2094":0,"2095":0,"2098":0,"2102":1,"2104":0,"2107":0,"2111":1,"2113":0,"2114":0,"2116":0,"2118":1,"2120":0,"2122":0,"2123":0,"2125":0,"2127":0,"2130":0,"2132":0,"2133":0,"2136":0,"2137":0,"2138":0,"2141":0,"2142":0,"2149":1,"2150":0,"2151":0,"2153":0,"2154":0,"2157":1,"2158":0,"2159":0,"2165":1}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/def.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/def.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":0,"236":1,"237":0,"238":0,"239":0,"240":1,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":1,"294":1,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":1,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":1,"333":0,"334":0,"335":0,"336":0,"337":1,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":1,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":1,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":1,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":1,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":1,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":1,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":1,"447":1,"448":20,"449":1,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":1,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":1,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":1,"482":0,"483":0,"484":0,"485":0,"486":0,"487":1,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":1,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":1,"508":0,"509":0,"510":0,"511":0,"512":0,"513":1,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":1,"521":0,"522":0,"523":1,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":1,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":1,"545":0,"546":0,"547":0,"548":0,"549":1,"550":1,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":1,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":1,"570":0,"571":0,"572":0,"573":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0,0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0,0],"114":[0,0],"115":[0,0],"116":[0,0,0],"117":[0,0],"118":[0,0,0],"119":[0,0],"120":[0,0,0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0,0,0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0,0],"174":[0,0],"175":[0,0],"176":[0,0,0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0,0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0,0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":20,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":1},"end":{"line":11,"column":15}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":3},"end":{"line":17,"column":28}}},"3":{"name":"hop","line":20,"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":26}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":40},"end":{"line":24,"column":78}}},"5":{"name":"unwrapType","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":40}}},"6":{"name":"extractProp","line":35,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":35}}},"7":{"name":"computedFunc","line":46,"loc":{"start":{"line":46,"column":2},"end":{"line":46,"column":56}}},"8":{"name":"(anonymous_8)","line":47,"loc":{"start":{"line":47,"column":11},"end":{"line":47,"column":33}}},"9":{"name":"computedUnion","line":53,"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":32}}},"10":{"name":"(anonymous_10)","line":54,"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":32}}},"11":{"name":"computedArray","line":61,"loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":32}}},"12":{"name":"(anonymous_12)","line":62,"loc":{"start":{"line":62,"column":11},"end":{"line":62,"column":32}}},"13":{"name":"computedTuple","line":66,"loc":{"start":{"line":66,"column":2},"end":{"line":66,"column":32}}},"14":{"name":"(anonymous_14)","line":67,"loc":{"start":{"line":67,"column":11},"end":{"line":67,"column":32}}},"15":{"name":"(anonymous_15)","line":68,"loc":{"start":{"line":68,"column":37},"end":{"line":68,"column":50}}},"16":{"name":"computedObject","line":71,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":40}}},"17":{"name":"(anonymous_17)","line":72,"loc":{"start":{"line":72,"column":11},"end":{"line":72,"column":32}}},"18":{"name":"(anonymous_18)","line":74,"loc":{"start":{"line":74,"column":20},"end":{"line":74,"column":39}}},"19":{"name":"(anonymous_19)","line":82,"loc":{"start":{"line":82,"column":9},"end":{"line":82,"column":23}}},"20":{"name":"(anonymous_20)","line":88,"loc":{"start":{"line":88,"column":10},"end":{"line":88,"column":23}}},"21":{"name":"(anonymous_21)","line":93,"loc":{"start":{"line":93,"column":11},"end":{"line":93,"column":22}}},"22":{"name":"(anonymous_22)","line":96,"loc":{"start":{"line":96,"column":17},"end":{"line":96,"column":54}}},"23":{"name":"(anonymous_23)","line":138,"loc":{"start":{"line":138,"column":15},"end":{"line":138,"column":41}}},"24":{"name":"(anonymous_24)","line":154,"loc":{"start":{"line":154,"column":24},"end":{"line":154,"column":50}}},"25":{"name":"(anonymous_25)","line":159,"loc":{"start":{"line":159,"column":20},"end":{"line":159,"column":35}}},"26":{"name":"(anonymous_26)","line":161,"loc":{"start":{"line":161,"column":29},"end":{"line":161,"column":50}}},"27":{"name":"(anonymous_27)","line":166,"loc":{"start":{"line":166,"column":20},"end":{"line":166,"column":46}}},"28":{"name":"(anonymous_28)","line":209,"loc":{"start":{"line":209,"column":22},"end":{"line":209,"column":41}}},"29":{"name":"(anonymous_29)","line":239,"loc":{"start":{"line":239,"column":17},"end":{"line":239,"column":39}}},"30":{"name":"(anonymous_30)","line":241,"loc":{"start":{"line":241,"column":17},"end":{"line":241,"column":32}}},"31":{"name":"(anonymous_31)","line":244,"loc":{"start":{"line":244,"column":43},"end":{"line":244,"column":54}}},"32":{"name":"(anonymous_32)","line":254,"loc":{"start":{"line":254,"column":14},"end":{"line":254,"column":29}}},"33":{"name":"(anonymous_33)","line":265,"loc":{"start":{"line":265,"column":15},"end":{"line":265,"column":30}}},"34":{"name":"(anonymous_34)","line":273,"loc":{"start":{"line":273,"column":29},"end":{"line":273,"column":50}}},"35":{"name":"addArgCallEffects","line":284,"loc":{"start":{"line":284,"column":2},"end":{"line":284,"column":35}}},"36":{"name":"addArgCallEffect","line":291,"loc":{"start":{"line":291,"column":2},"end":{"line":291,"column":42}}},"37":{"name":"(anonymous_37)","line":292,"loc":{"start":{"line":292,"column":20},"end":{"line":292,"column":42}}},"38":{"name":"parseType","line":298,"loc":{"start":{"line":298,"column":2},"end":{"line":298,"column":49}}},"39":{"name":"addEffect","line":305,"loc":{"start":{"line":305,"column":2},"end":{"line":305,"column":46}}},"40":{"name":"(anonymous_40)","line":307,"loc":{"start":{"line":307,"column":20},"end":{"line":307,"column":51}}},"41":{"name":"(anonymous_41)","line":314,"loc":{"start":{"line":314,"column":42},"end":{"line":314,"column":63}}},"42":{"name":"(anonymous_42)","line":321,"loc":{"start":{"line":321,"column":20},"end":{"line":321,"column":41}}},"43":{"name":"(anonymous_43)","line":330,"loc":{"start":{"line":330,"column":20},"end":{"line":330,"column":41}}},"44":{"name":"(anonymous_44)","line":346,"loc":{"start":{"line":346,"column":20},"end":{"line":346,"column":41}}},"45":{"name":"(anonymous_45)","line":348,"loc":{"start":{"line":348,"column":25},"end":{"line":348,"column":52}}},"46":{"name":"(anonymous_46)","line":360,"loc":{"start":{"line":360,"column":38},"end":{"line":360,"column":60}}},"47":{"name":"descendProps","line":385,"loc":{"start":{"line":385,"column":2},"end":{"line":385,"column":37}}},"48":{"name":"emptyObj","line":416,"loc":{"start":{"line":416,"column":2},"end":{"line":416,"column":26}}},"49":{"name":"isSimpleAnnotation","line":423,"loc":{"start":{"line":423,"column":2},"end":{"line":423,"column":36}}},"50":{"name":"passOne","line":431,"loc":{"start":{"line":431,"column":2},"end":{"line":431,"column":37}}},"51":{"name":"passTwo","line":456,"loc":{"start":{"line":456,"column":2},"end":{"line":456,"column":37}}},"52":{"name":"copyInfo","line":492,"loc":{"start":{"line":492,"column":2},"end":{"line":492,"column":32}}},"53":{"name":"doLoadEnvironment","line":499,"loc":{"start":{"line":499,"column":2},"end":{"line":499,"column":42}}},"54":{"name":"(anonymous_54)","line":528,"loc":{"start":{"line":528,"column":17},"end":{"line":528,"column":39}}},"55":{"name":"(anonymous_55)","line":539,"loc":{"start":{"line":539,"column":18},"end":{"line":539,"column":47}}},"56":{"name":"(anonymous_56)","line":559,"loc":{"start":{"line":559,"column":27},"end":{"line":559,"column":45}}},"57":{"name":"(anonymous_57)","line":562,"loc":{"start":{"line":562,"column":15},"end":{"line":562,"column":47}}},"58":{"name":"(anonymous_58)","line":567,"loc":{"start":{"line":567,"column":13},"end":{"line":567,"column":26}}},"59":{"name":"(anonymous_59)","line":584,"loc":{"start":{"line":584,"column":42},"end":{"line":584,"column":74}}},"60":{"name":"(anonymous_60)","line":594,"loc":{"start":{"line":594,"column":15},"end":{"line":594,"column":32}}},"61":{"name":"(anonymous_61)","line":595,"loc":{"start":{"line":595,"column":13},"end":{"line":595,"column":26}}},"62":{"name":"(anonymous_62)","line":604,"loc":{"start":{"line":604,"column":50},"end":{"line":604,"column":82}}},"63":{"name":"(anonymous_63)","line":614,"loc":{"start":{"line":614,"column":52},"end":{"line":614,"column":84}}},"64":{"name":"(anonymous_64)","line":617,"loc":{"start":{"line":617,"column":26},"end":{"line":617,"column":53}}},"65":{"name":"(anonymous_65)","line":628,"loc":{"start":{"line":628,"column":15},"end":{"line":628,"column":44}}},"66":{"name":"(anonymous_66)","line":631,"loc":{"start":{"line":631,"column":13},"end":{"line":631,"column":26}}},"67":{"name":"(anonymous_67)","line":641,"loc":{"start":{"line":641,"column":42},"end":{"line":641,"column":63}}},"68":{"name":"(anonymous_68)","line":648,"loc":{"start":{"line":648,"column":39},"end":{"line":648,"column":61}}},"69":{"name":"makePromise","line":657,"loc":{"start":{"line":657,"column":2},"end":{"line":657,"column":25}}},"70":{"name":"(anonymous_70)","line":662,"loc":{"start":{"line":662,"column":41},"end":{"line":662,"column":73}}},"71":{"name":"(anonymous_71)","line":677,"loc":{"start":{"line":677,"column":44},"end":{"line":677,"column":76}}},"72":{"name":"(anonymous_72)","line":690,"loc":{"start":{"line":690,"column":15},"end":{"line":690,"column":32}}},"73":{"name":"(anonymous_73)","line":691,"loc":{"start":{"line":691,"column":13},"end":{"line":691,"column":26}}},"74":{"name":"(anonymous_74)","line":701,"loc":{"start":{"line":701,"column":41},"end":{"line":701,"column":72}}},"75":{"name":"(anonymous_75)","line":714,"loc":{"start":{"line":714,"column":50},"end":{"line":714,"column":72}}},"76":{"name":"(anonymous_76)","line":717,"loc":{"start":{"line":717,"column":24},"end":{"line":717,"column":52}}},"77":{"name":"(anonymous_77)","line":723,"loc":{"start":{"line":723,"column":38},"end":{"line":723,"column":71}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":731,"column":3}},"2":{"start":{"line":12,"column":2},"end":{"line":13,"column":30}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":30}},"4":{"start":{"line":14,"column":2},"end":{"line":15,"column":31}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":31}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"7":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":59}},"9":{"start":{"line":24,"column":2},"end":{"line":29,"column":4}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":26}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":21}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":21}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":29}},"14":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":47}},"16":{"start":{"line":35,"column":2},"end":{"line":44,"column":3}},"17":{"start":{"line":36,"column":4},"end":{"line":43,"column":5}},"18":{"start":{"line":37,"column":6},"end":{"line":37,"column":42}},"19":{"start":{"line":37,"column":23},"end":{"line":37,"column":42}},"20":{"start":{"line":38,"column":6},"end":{"line":38,"column":30}},"21":{"start":{"line":39,"column":6},"end":{"line":39,"column":68}},"22":{"start":{"line":40,"column":6},"end":{"line":40,"column":16}},"23":{"start":{"line":42,"column":6},"end":{"line":42,"column":32}},"24":{"start":{"line":46,"column":2},"end":{"line":52,"column":3}},"25":{"start":{"line":47,"column":4},"end":{"line":51,"column":6}},"26":{"start":{"line":48,"column":6},"end":{"line":48,"column":24}},"27":{"start":{"line":49,"column":6},"end":{"line":49,"column":92}},"28":{"start":{"line":49,"column":44},"end":{"line":49,"column":92}},"29":{"start":{"line":50,"column":6},"end":{"line":50,"column":100}},"30":{"start":{"line":53,"column":2},"end":{"line":60,"column":3}},"31":{"start":{"line":54,"column":4},"end":{"line":59,"column":6}},"32":{"start":{"line":55,"column":6},"end":{"line":55,"column":33}},"33":{"start":{"line":56,"column":6},"end":{"line":56,"column":95}},"34":{"start":{"line":56,"column":45},"end":{"line":56,"column":95}},"35":{"start":{"line":57,"column":6},"end":{"line":57,"column":28}},"36":{"start":{"line":58,"column":6},"end":{"line":58,"column":19}},"37":{"start":{"line":61,"column":2},"end":{"line":65,"column":3}},"38":{"start":{"line":62,"column":4},"end":{"line":64,"column":6}},"39":{"start":{"line":63,"column":6},"end":{"line":63,"column":46}},"40":{"start":{"line":66,"column":2},"end":{"line":70,"column":3}},"41":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"42":{"start":{"line":68,"column":6},"end":{"line":68,"column":89}},"43":{"start":{"line":68,"column":52},"end":{"line":68,"column":86}},"44":{"start":{"line":71,"column":2},"end":{"line":79,"column":3}},"45":{"start":{"line":72,"column":4},"end":{"line":78,"column":6}},"46":{"start":{"line":73,"column":6},"end":{"line":73,"column":30}},"47":{"start":{"line":74,"column":6},"end":{"line":76,"column":9}},"48":{"start":{"line":75,"column":8},"end":{"line":75,"column":68}},"49":{"start":{"line":77,"column":6},"end":{"line":77,"column":17}},"50":{"start":{"line":81,"column":2},"end":{"line":282,"column":4}},"51":{"start":{"line":83,"column":6},"end":{"line":86,"column":7}},"52":{"start":{"line":84,"column":8},"end":{"line":84,"column":31}},"53":{"start":{"line":85,"column":8},"end":{"line":85,"column":20}},"54":{"start":{"line":89,"column":6},"end":{"line":89,"column":44}},"55":{"start":{"line":90,"column":6},"end":{"line":90,"column":90}},"56":{"start":{"line":90,"column":65},"end":{"line":90,"column":76}},"57":{"start":{"line":90,"column":77},"end":{"line":90,"column":88}},"58":{"start":{"line":91,"column":6},"end":{"line":91,"column":18}},"59":{"start":{"line":94,"column":6},"end":{"line":94,"column":89}},"60":{"start":{"line":97,"column":6},"end":{"line":97,"column":50}},"61":{"start":{"line":98,"column":6},"end":{"line":115,"column":7}},"62":{"start":{"line":98,"column":26},"end":{"line":115,"column":7}},"63":{"start":{"line":99,"column":8},"end":{"line":99,"column":63}},"64":{"start":{"line":100,"column":8},"end":{"line":106,"column":9}},"65":{"start":{"line":101,"column":10},"end":{"line":101,"column":53}},"66":{"start":{"line":102,"column":10},"end":{"line":105,"column":27}},"67":{"start":{"line":103,"column":12},"end":{"line":103,"column":33}},"68":{"start":{"line":105,"column":12},"end":{"line":105,"column":27}},"69":{"start":{"line":107,"column":8},"end":{"line":107,"column":28}},"70":{"start":{"line":108,"column":8},"end":{"line":108,"column":43}},"71":{"start":{"line":109,"column":8},"end":{"line":109,"column":42}},"72":{"start":{"line":109,"column":26},"end":{"line":109,"column":42}},"73":{"start":{"line":110,"column":8},"end":{"line":110,"column":27}},"74":{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},"75":{"start":{"line":112,"column":10},"end":{"line":112,"column":40}},"76":{"start":{"line":113,"column":10},"end":{"line":113,"column":16}},"77":{"start":{"line":116,"column":6},"end":{"line":116,"column":51}},"78":{"start":{"line":117,"column":6},"end":{"line":127,"column":7}},"79":{"start":{"line":118,"column":8},"end":{"line":118,"column":32}},"80":{"start":{"line":119,"column":8},"end":{"line":119,"column":39}},"81":{"start":{"line":120,"column":8},"end":{"line":124,"column":9}},"82":{"start":{"line":121,"column":10},"end":{"line":121,"column":31}},"83":{"start":{"line":122,"column":10},"end":{"line":122,"column":32}},"84":{"start":{"line":123,"column":10},"end":{"line":123,"column":37}},"85":{"start":{"line":126,"column":8},"end":{"line":126,"column":30}},"86":{"start":{"line":128,"column":6},"end":{"line":128,"column":72}},"87":{"start":{"line":128,"column":20},"end":{"line":128,"column":72}},"88":{"start":{"line":130,"column":6},"end":{"line":133,"column":78}},"89":{"start":{"line":131,"column":8},"end":{"line":131,"column":85}},"90":{"start":{"line":133,"column":8},"end":{"line":133,"column":78}},"91":{"start":{"line":134,"column":6},"end":{"line":134,"column":49}},"92":{"start":{"line":134,"column":22},"end":{"line":134,"column":49}},"93":{"start":{"line":135,"column":6},"end":{"line":135,"column":100}},"94":{"start":{"line":135,"column":35},"end":{"line":135,"column":100}},"95":{"start":{"line":136,"column":6},"end":{"line":136,"column":16}},"96":{"start":{"line":139,"column":6},"end":{"line":139,"column":58}},"97":{"start":{"line":140,"column":6},"end":{"line":140,"column":38}},"98":{"start":{"line":140,"column":26},"end":{"line":140,"column":38}},"99":{"start":{"line":141,"column":6},"end":{"line":141,"column":47}},"100":{"start":{"line":142,"column":6},"end":{"line":147,"column":7}},"101":{"start":{"line":143,"column":8},"end":{"line":143,"column":60}},"102":{"start":{"line":144,"column":8},"end":{"line":144,"column":25}},"103":{"start":{"line":145,"column":8},"end":{"line":145,"column":39}},"104":{"start":{"line":145,"column":23},"end":{"line":145,"column":39}},"105":{"start":{"line":146,"column":8},"end":{"line":146,"column":34}},"106":{"start":{"line":146,"column":28},"end":{"line":146,"column":34}},"107":{"start":{"line":148,"column":6},"end":{"line":148,"column":48}},"108":{"start":{"line":148,"column":20},"end":{"line":148,"column":48}},"109":{"start":{"line":149,"column":6},"end":{"line":149,"column":33}},"110":{"start":{"line":150,"column":6},"end":{"line":150,"column":71}},"111":{"start":{"line":150,"column":45},"end":{"line":150,"column":71}},"112":{"start":{"line":151,"column":6},"end":{"line":151,"column":28}},"113":{"start":{"line":152,"column":6},"end":{"line":152,"column":19}},"114":{"start":{"line":155,"column":6},"end":{"line":155,"column":56}},"115":{"start":{"line":156,"column":6},"end":{"line":156,"column":73}},"116":{"start":{"line":156,"column":36},"end":{"line":156,"column":73}},"117":{"start":{"line":157,"column":6},"end":{"line":157,"column":20}},"118":{"start":{"line":160,"column":6},"end":{"line":160,"column":60}},"119":{"start":{"line":161,"column":6},"end":{"line":163,"column":8}},"120":{"start":{"line":161,"column":22},"end":{"line":163,"column":8}},"121":{"start":{"line":162,"column":8},"end":{"line":162,"column":55}},"122":{"start":{"line":164,"column":6},"end":{"line":164,"column":41}},"123":{"start":{"line":167,"column":6},"end":{"line":167,"column":13}},"124":{"start":{"line":168,"column":6},"end":{"line":252,"column":7}},"125":{"start":{"line":169,"column":8},"end":{"line":169,"column":54}},"126":{"start":{"line":170,"column":13},"end":{"line":252,"column":7}},"127":{"start":{"line":171,"column":8},"end":{"line":171,"column":70}},"128":{"start":{"line":172,"column":8},"end":{"line":177,"column":9}},"129":{"start":{"line":173,"column":10},"end":{"line":173,"column":37}},"130":{"start":{"line":173,"column":22},"end":{"line":173,"column":37}},"131":{"start":{"line":174,"column":10},"end":{"line":174,"column":41}},"132":{"start":{"line":175,"column":10},"end":{"line":175,"column":26}},"133":{"start":{"line":176,"column":10},"end":{"line":176,"column":42}},"134":{"start":{"line":178,"column":8},"end":{"line":178,"column":37}},"135":{"start":{"line":179,"column":8},"end":{"line":179,"column":80}},"136":{"start":{"line":179,"column":22},"end":{"line":179,"column":80}},"137":{"start":{"line":180,"column":8},"end":{"line":183,"column":9}},"138":{"start":{"line":181,"column":10},"end":{"line":181,"column":51}},"139":{"start":{"line":182,"column":10},"end":{"line":182,"column":26}},"140":{"start":{"line":184,"column":8},"end":{"line":184,"column":44}},"141":{"start":{"line":185,"column":13},"end":{"line":252,"column":7}},"142":{"start":{"line":186,"column":8},"end":{"line":186,"column":52}},"143":{"start":{"line":187,"column":8},"end":{"line":206,"column":9}},"144":{"start":{"line":188,"column":10},"end":{"line":205,"column":11}},"145":{"start":{"line":189,"column":12},"end":{"line":189,"column":68}},"146":{"start":{"line":190,"column":12},"end":{"line":196,"column":13}},"147":{"start":{"line":191,"column":14},"end":{"line":191,"column":58}},"148":{"start":{"line":192,"column":14},"end":{"line":195,"column":32}},"149":{"start":{"line":193,"column":16},"end":{"line":193,"column":37}},"150":{"start":{"line":195,"column":16},"end":{"line":195,"column":32}},"151":{"start":{"line":197,"column":12},"end":{"line":197,"column":48}},"152":{"start":{"line":198,"column":12},"end":{"line":198,"column":47}},"153":{"start":{"line":198,"column":31},"end":{"line":198,"column":47}},"154":{"start":{"line":199,"column":12},"end":{"line":199,"column":33}},"155":{"start":{"line":200,"column":12},"end":{"line":200,"column":33}},"156":{"start":{"line":201,"column":12},"end":{"line":204,"column":13}},"157":{"start":{"line":202,"column":14},"end":{"line":202,"column":44}},"158":{"start":{"line":203,"column":14},"end":{"line":203,"column":20}},"159":{"start":{"line":207,"column":8},"end":{"line":207,"column":58}},"160":{"start":{"line":207,"column":22},"end":{"line":207,"column":58}},"161":{"start":{"line":208,"column":8},"end":{"line":208,"column":32}},"162":{"start":{"line":209,"column":8},"end":{"line":211,"column":11}},"163":{"start":{"line":210,"column":10},"end":{"line":210,"column":46}},"164":{"start":{"line":212,"column":8},"end":{"line":212,"column":19}},"165":{"start":{"line":213,"column":13},"end":{"line":252,"column":7}},"166":{"start":{"line":214,"column":8},"end":{"line":214,"column":43}},"167":{"start":{"line":215,"column":8},"end":{"line":215,"column":60}},"168":{"start":{"line":216,"column":8},"end":{"line":222,"column":9}},"169":{"start":{"line":217,"column":10},"end":{"line":217,"column":37}},"170":{"start":{"line":218,"column":10},"end":{"line":218,"column":56}},"171":{"start":{"line":218,"column":44},"end":{"line":218,"column":56}},"172":{"start":{"line":219,"column":10},"end":{"line":219,"column":55}},"173":{"start":{"line":220,"column":10},"end":{"line":221,"column":24}},"174":{"start":{"line":221,"column":12},"end":{"line":221,"column":24}},"175":{"start":{"line":223,"column":8},"end":{"line":223,"column":63}},"176":{"start":{"line":223,"column":35},"end":{"line":223,"column":63}},"177":{"start":{"line":224,"column":8},"end":{"line":229,"column":9}},"178":{"start":{"line":225,"column":10},"end":{"line":225,"column":32}},"179":{"start":{"line":226,"column":10},"end":{"line":226,"column":67}},"180":{"start":{"line":227,"column":10},"end":{"line":227,"column":41}},"181":{"start":{"line":227,"column":20},"end":{"line":227,"column":41}},"182":{"start":{"line":228,"column":10},"end":{"line":228,"column":26}},"183":{"start":{"line":230,"column":8},"end":{"line":230,"column":61}},"184":{"start":{"line":230,"column":34},"end":{"line":230,"column":61}},"185":{"start":{"line":231,"column":8},"end":{"line":231,"column":39}},"186":{"start":{"line":232,"column":13},"end":{"line":252,"column":7}},"187":{"start":{"line":233,"column":8},"end":{"line":233,"column":39}},"188":{"start":{"line":234,"column":8},"end":{"line":234,"column":36}},"189":{"start":{"line":235,"column":13},"end":{"line":252,"column":7}},"190":{"start":{"line":236,"column":8},"end":{"line":236,"column":34}},"191":{"start":{"line":237,"column":8},"end":{"line":247,"column":9}},"192":{"start":{"line":238,"column":10},"end":{"line":238,"column":28}},"193":{"start":{"line":239,"column":10},"end":{"line":239,"column":74}},"194":{"start":{"line":239,"column":40},"end":{"line":239,"column":72}},"195":{"start":{"line":240,"column":15},"end":{"line":247,"column":9}},"196":{"start":{"line":241,"column":10},"end":{"line":241,"column":47}},"197":{"start":{"line":241,"column":33},"end":{"line":241,"column":45}},"198":{"start":{"line":242,"column":15},"end":{"line":247,"column":9}},"199":{"start":{"line":243,"column":10},"end":{"line":243,"column":41}},"200":{"start":{"line":244,"column":10},"end":{"line":244,"column":78}},"201":{"start":{"line":244,"column":56},"end":{"line":244,"column":75}},"202":{"start":{"line":246,"column":10},"end":{"line":246,"column":63}},"203":{"start":{"line":248,"column":13},"end":{"line":252,"column":7}},"204":{"start":{"line":249,"column":8},"end":{"line":249,"column":27}},"205":{"start":{"line":251,"column":8},"end":{"line":251,"column":56}},"206":{"start":{"line":255,"column":6},"end":{"line":255,"column":26}},"207":{"start":{"line":256,"column":6},"end":{"line":261,"column":7}},"208":{"start":{"line":257,"column":21},"end":{"line":257,"column":35}},"209":{"start":{"line":258,"column":21},"end":{"line":258,"column":35}},"210":{"start":{"line":259,"column":19},"end":{"line":259,"column":34}},"211":{"start":{"line":260,"column":20},"end":{"line":260,"column":39}},"212":{"start":{"line":262,"column":6},"end":{"line":262,"column":74}},"213":{"start":{"line":262,"column":48},"end":{"line":262,"column":74}},"214":{"start":{"line":263,"column":6},"end":{"line":263,"column":29}},"215":{"start":{"line":266,"column":6},"end":{"line":266,"column":34}},"216":{"start":{"line":267,"column":6},"end":{"line":270,"column":7}},"217":{"start":{"line":268,"column":8},"end":{"line":268,"column":28}},"218":{"start":{"line":269,"column":8},"end":{"line":269,"column":36}},"219":{"start":{"line":271,"column":6},"end":{"line":271,"column":39}},"220":{"start":{"line":272,"column":6},"end":{"line":272,"column":39}},"221":{"start":{"line":272,"column":26},"end":{"line":272,"column":39}},"222":{"start":{"line":273,"column":6},"end":{"line":277,"column":8}},"223":{"start":{"line":273,"column":22},"end":{"line":277,"column":8}},"224":{"start":{"line":274,"column":8},"end":{"line":274,"column":43}},"225":{"start":{"line":275,"column":8},"end":{"line":275,"column":64}},"226":{"start":{"line":276,"column":8},"end":{"line":276,"column":24}},"227":{"start":{"line":278,"column":6},"end":{"line":278,"column":41}},"228":{"start":{"line":279,"column":6},"end":{"line":279,"column":50}},"229":{"start":{"line":280,"column":6},"end":{"line":280,"column":22}},"230":{"start":{"line":284,"column":2},"end":{"line":289,"column":3}},"231":{"start":{"line":285,"column":4},"end":{"line":288,"column":5}},"232":{"start":{"line":285,"column":47},"end":{"line":288,"column":5}},"233":{"start":{"line":286,"column":6},"end":{"line":286,"column":28}},"234":{"start":{"line":287,"column":6},"end":{"line":287,"column":91}},"235":{"start":{"line":287,"column":66},"end":{"line":287,"column":91}},"236":{"start":{"line":291,"column":2},"end":{"line":296,"column":3}},"237":{"start":{"line":292,"column":4},"end":{"line":295,"column":6}},"238":{"start":{"line":293,"column":6},"end":{"line":294,"column":91}},"239":{"start":{"line":293,"column":24},"end":{"line":294,"column":91}},"240":{"start":{"line":298,"column":2},"end":{"line":303,"column":3}},"241":{"start":{"line":299,"column":4},"end":{"line":299,"column":87}},"242":{"start":{"line":300,"column":4},"end":{"line":301,"column":32}},"243":{"start":{"line":300,"column":36},"end":{"line":300,"column":73}},"244":{"start":{"line":301,"column":9},"end":{"line":301,"column":32}},"245":{"start":{"line":302,"column":4},"end":{"line":302,"column":16}},"246":{"start":{"line":305,"column":2},"end":{"line":312,"column":3}},"247":{"start":{"line":306,"column":4},"end":{"line":306,"column":47}},"248":{"start":{"line":307,"column":4},"end":{"line":311,"column":6}},"249":{"start":{"line":308,"column":6},"end":{"line":308,"column":50}},"250":{"start":{"line":309,"column":6},"end":{"line":309,"column":59}},"251":{"start":{"line":310,"column":6},"end":{"line":310,"column":40}},"252":{"start":{"line":314,"column":2},"end":{"line":356,"column":4}},"253":{"start":{"line":315,"column":4},"end":{"line":315,"column":10}},"254":{"start":{"line":316,"column":4},"end":{"line":355,"column":5}},"255":{"start":{"line":317,"column":6},"end":{"line":317,"column":41}},"256":{"start":{"line":318,"column":6},"end":{"line":318,"column":37}},"257":{"start":{"line":319,"column":6},"end":{"line":319,"column":33}},"258":{"start":{"line":319,"column":23},"end":{"line":319,"column":33}},"259":{"start":{"line":320,"column":6},"end":{"line":320,"column":37}},"260":{"start":{"line":321,"column":6},"end":{"line":323,"column":9}},"261":{"start":{"line":322,"column":8},"end":{"line":322,"column":81}},"262":{"start":{"line":324,"column":11},"end":{"line":355,"column":5}},"263":{"start":{"line":325,"column":6},"end":{"line":325,"column":57}},"264":{"start":{"line":326,"column":6},"end":{"line":326,"column":54}},"265":{"start":{"line":327,"column":6},"end":{"line":327,"column":70}},"266":{"start":{"line":328,"column":6},"end":{"line":328,"column":55}},"267":{"start":{"line":328,"column":27},"end":{"line":328,"column":55}},"268":{"start":{"line":329,"column":6},"end":{"line":329,"column":57}},"269":{"start":{"line":329,"column":25},"end":{"line":329,"column":57}},"270":{"start":{"line":330,"column":6},"end":{"line":337,"column":17}},"271":{"start":{"line":331,"column":8},"end":{"line":331,"column":55}},"272":{"start":{"line":332,"column":8},"end":{"line":332,"column":83}},"273":{"start":{"line":333,"column":8},"end":{"line":333,"column":93}},"274":{"start":{"line":333,"column":49},"end":{"line":333,"column":93}},"275":{"start":{"line":334,"column":8},"end":{"line":334,"column":59}},"276":{"start":{"line":335,"column":8},"end":{"line":335,"column":68}},"277":{"start":{"line":336,"column":8},"end":{"line":336,"column":22}},"278":{"start":{"line":338,"column":11},"end":{"line":355,"column":5}},"279":{"start":{"line":339,"column":6},"end":{"line":339,"column":45}},"280":{"start":{"line":340,"column":6},"end":{"line":340,"column":74}},"281":{"start":{"line":340,"column":22},"end":{"line":340,"column":74}},"282":{"start":{"line":341,"column":11},"end":{"line":355,"column":5}},"283":{"start":{"line":342,"column":6},"end":{"line":342,"column":40}},"284":{"start":{"line":343,"column":6},"end":{"line":343,"column":38}},"285":{"start":{"line":344,"column":6},"end":{"line":344,"column":17}},"286":{"start":{"line":345,"column":6},"end":{"line":345,"column":36}},"287":{"start":{"line":346,"column":6},"end":{"line":352,"column":9}},"288":{"start":{"line":347,"column":8},"end":{"line":347,"column":87}},"289":{"start":{"line":348,"column":8},"end":{"line":351,"column":11}},"290":{"start":{"line":349,"column":10},"end":{"line":350,"column":55}},"291":{"start":{"line":350,"column":12},"end":{"line":350,"column":55}},"292":{"start":{"line":354,"column":6},"end":{"line":354,"column":56}},"293":{"start":{"line":358,"column":2},"end":{"line":358,"column":22}},"294":{"start":{"line":360,"column":2},"end":{"line":383,"column":3}},"295":{"start":{"line":361,"column":4},"end":{"line":361,"column":66}},"296":{"start":{"line":362,"column":4},"end":{"line":362,"column":38}},"297":{"start":{"line":362,"column":24},"end":{"line":362,"column":38}},"298":{"start":{"line":363,"column":4},"end":{"line":363,"column":33}},"299":{"start":{"line":365,"column":4},"end":{"line":365,"column":55}},"300":{"start":{"line":367,"column":4},"end":{"line":376,"column":5}},"301":{"start":{"line":367,"column":22},"end":{"line":376,"column":5}},"302":{"start":{"line":368,"column":6},"end":{"line":375,"column":7}},"303":{"start":{"line":369,"column":8},"end":{"line":369,"column":69}},"304":{"start":{"line":369,"column":26},"end":{"line":369,"column":69}},"305":{"start":{"line":370,"column":8},"end":{"line":374,"column":9}},"306":{"start":{"line":371,"column":10},"end":{"line":371,"column":36}},"307":{"start":{"line":372,"column":10},"end":{"line":372,"column":45}},"308":{"start":{"line":373,"column":10},"end":{"line":373,"column":16}},"309":{"start":{"line":378,"column":4},"end":{"line":378,"column":52}},"310":{"start":{"line":381,"column":4},"end":{"line":381,"column":62}},"311":{"start":{"line":382,"column":4},"end":{"line":382,"column":17}},"312":{"start":{"line":385,"column":2},"end":{"line":414,"column":3}},"313":{"start":{"line":386,"column":4},"end":{"line":412,"column":5}},"314":{"start":{"line":387,"column":6},"end":{"line":387,"column":26}},"315":{"start":{"line":388,"column":6},"end":{"line":411,"column":7}},"316":{"start":{"line":389,"column":8},"end":{"line":401,"column":9}},"317":{"start":{"line":390,"column":10},"end":{"line":390,"column":74}},"318":{"start":{"line":392,"column":10},"end":{"line":392,"column":42}},"319":{"start":{"line":393,"column":10},"end":{"line":400,"column":11}},"320":{"start":{"line":394,"column":12},"end":{"line":394,"column":31}},"321":{"start":{"line":395,"column":17},"end":{"line":400,"column":11}},"322":{"start":{"line":396,"column":12},"end":{"line":396,"column":72}},"323":{"start":{"line":398,"column":12},"end":{"line":398,"column":64}},"324":{"start":{"line":399,"column":12},"end":{"line":399,"column":62}},"325":{"start":{"line":402,"column":13},"end":{"line":411,"column":7}},"326":{"start":{"line":404,"column":8},"end":{"line":404,"column":41}},"327":{"start":{"line":405,"column":8},"end":{"line":408,"column":34}},"328":{"start":{"line":406,"column":10},"end":{"line":406,"column":29}},"329":{"start":{"line":408,"column":10},"end":{"line":408,"column":34}},"330":{"start":{"line":410,"column":8},"end":{"line":410,"column":27}},"331":{"start":{"line":413,"column":4},"end":{"line":413,"column":16}},"332":{"start":{"line":416,"column":2},"end":{"line":421,"column":3}},"333":{"start":{"line":417,"column":4},"end":{"line":417,"column":46}},"334":{"start":{"line":418,"column":4},"end":{"line":418,"column":38}},"335":{"start":{"line":419,"column":4},"end":{"line":419,"column":25}},"336":{"start":{"line":420,"column":4},"end":{"line":420,"column":17}},"337":{"start":{"line":423,"column":2},"end":{"line":429,"column":3}},"338":{"start":{"line":424,"column":4},"end":{"line":424,"column":76}},"339":{"start":{"line":424,"column":63},"end":{"line":424,"column":76}},"340":{"start":{"line":425,"column":4},"end":{"line":427,"column":21}},"341":{"start":{"line":426,"column":6},"end":{"line":427,"column":21}},"342":{"start":{"line":427,"column":8},"end":{"line":427,"column":21}},"343":{"start":{"line":428,"column":4},"end":{"line":428,"column":16}},"344":{"start":{"line":431,"column":2},"end":{"line":454,"column":3}},"345":{"start":{"line":432,"column":4},"end":{"line":445,"column":5}},"346":{"start":{"line":433,"column":6},"end":{"line":433,"column":29}},"347":{"start":{"line":434,"column":6},"end":{"line":443,"column":7}},"348":{"start":{"line":435,"column":8},"end":{"line":438,"column":58}},"349":{"start":{"line":435,"column":30},"end":{"line":435,"column":56}},"350":{"start":{"line":436,"column":13},"end":{"line":438,"column":58}},"351":{"start":{"line":436,"column":38},"end":{"line":436,"column":65}},"352":{"start":{"line":437,"column":13},"end":{"line":438,"column":58}},"353":{"start":{"line":437,"column":38},"end":{"line":437,"column":64}},"354":{"start":{"line":438,"column":13},"end":{"line":438,"column":58}},"355":{"start":{"line":439,"column":13},"end":{"line":443,"column":7}},"356":{"start":{"line":440,"column":8},"end":{"line":440,"column":52}},"357":{"start":{"line":442,"column":8},"end":{"line":442,"column":35}},"358":{"start":{"line":444,"column":6},"end":{"line":444,"column":23}},"359":{"start":{"line":447,"column":4},"end":{"line":452,"column":5}},"360":{"start":{"line":447,"column":27},"end":{"line":452,"column":5}},"361":{"start":{"line":448,"column":6},"end":{"line":448,"column":29}},"362":{"start":{"line":449,"column":6},"end":{"line":449,"column":74}},"363":{"start":{"line":449,"column":65},"end":{"line":449,"column":74}},"364":{"start":{"line":450,"column":6},"end":{"line":450,"column":36}},"365":{"start":{"line":451,"column":6},"end":{"line":451,"column":89}},"366":{"start":{"line":453,"column":4},"end":{"line":453,"column":16}},"367":{"start":{"line":456,"column":2},"end":{"line":490,"column":3}},"368":{"start":{"line":457,"column":4},"end":{"line":466,"column":5}},"369":{"start":{"line":458,"column":6},"end":{"line":458,"column":26}},"370":{"start":{"line":459,"column":6},"end":{"line":459,"column":29}},"371":{"start":{"line":460,"column":6},"end":{"line":465,"column":7}},"372":{"start":{"line":461,"column":8},"end":{"line":461,"column":34}},"373":{"start":{"line":463,"column":8},"end":{"line":463,"column":64}},"374":{"start":{"line":464,"column":8},"end":{"line":464,"column":78}},"375":{"start":{"line":468,"column":4},"end":{"line":468,"column":35}},"376":{"start":{"line":469,"column":4},"end":{"line":470,"column":36}},"377":{"start":{"line":469,"column":45},"end":{"line":470,"column":36}},"378":{"start":{"line":470,"column":6},"end":{"line":470,"column":36}},"379":{"start":{"line":471,"column":4},"end":{"line":471,"column":25}},"380":{"start":{"line":473,"column":4},"end":{"line":488,"column":5}},"381":{"start":{"line":473,"column":27},"end":{"line":488,"column":5}},"382":{"start":{"line":474,"column":6},"end":{"line":474,"column":102}},"383":{"start":{"line":475,"column":6},"end":{"line":487,"column":7}},"384":{"start":{"line":476,"column":8},"end":{"line":476,"column":74}},"385":{"start":{"line":476,"column":29},"end":{"line":476,"column":74}},"386":{"start":{"line":478,"column":8},"end":{"line":483,"column":19}},"387":{"start":{"line":479,"column":10},"end":{"line":479,"column":56}},"388":{"start":{"line":480,"column":13},"end":{"line":483,"column":19}},"389":{"start":{"line":481,"column":10},"end":{"line":481,"column":76}},"390":{"start":{"line":483,"column":10},"end":{"line":483,"column":19}},"391":{"start":{"line":484,"column":8},"end":{"line":484,"column":53}},"392":{"start":{"line":484,"column":27},"end":{"line":484,"column":53}},"393":{"start":{"line":485,"column":8},"end":{"line":485,"column":53}},"394":{"start":{"line":485,"column":27},"end":{"line":485,"column":53}},"395":{"start":{"line":486,"column":8},"end":{"line":486,"column":56}},"396":{"start":{"line":486,"column":28},"end":{"line":486,"column":56}},"397":{"start":{"line":489,"column":4},"end":{"line":489,"column":16}},"398":{"start":{"line":492,"column":2},"end":{"line":497,"column":3}},"399":{"start":{"line":493,"column":4},"end":{"line":493,"column":46}},"400":{"start":{"line":493,"column":22},"end":{"line":493,"column":46}},"401":{"start":{"line":494,"column":4},"end":{"line":494,"column":46}},"402":{"start":{"line":494,"column":22},"end":{"line":494,"column":46}},"403":{"start":{"line":495,"column":4},"end":{"line":495,"column":49}},"404":{"start":{"line":495,"column":23},"end":{"line":495,"column":49}},"405":{"start":{"line":496,"column":4},"end":{"line":496,"column":53}},"406":{"start":{"line":496,"column":23},"end":{"line":496,"column":53}},"407":{"start":{"line":499,"column":2},"end":{"line":526,"column":3}},"408":{"start":{"line":500,"column":4},"end":{"line":500,"column":43}},"409":{"start":{"line":502,"column":4},"end":{"line":502,"column":80}},"410":{"start":{"line":503,"column":4},"end":{"line":503,"column":70}},"411":{"start":{"line":505,"column":4},"end":{"line":505,"column":49}},"412":{"start":{"line":505,"column":16},"end":{"line":505,"column":49}},"413":{"start":{"line":507,"column":4},"end":{"line":507,"column":25}},"414":{"start":{"line":509,"column":4},"end":{"line":509,"column":30}},"415":{"start":{"line":510,"column":4},"end":{"line":519,"column":5}},"416":{"start":{"line":511,"column":6},"end":{"line":514,"column":7}},"417":{"start":{"line":512,"column":8},"end":{"line":512,"column":29}},"418":{"start":{"line":513,"column":8},"end":{"line":513,"column":99}},"419":{"start":{"line":515,"column":6},"end":{"line":518,"column":7}},"420":{"start":{"line":516,"column":8},"end":{"line":516,"column":29}},"421":{"start":{"line":517,"column":8},"end":{"line":517,"column":82}},"422":{"start":{"line":517,"column":37},"end":{"line":517,"column":82}},"423":{"start":{"line":521,"column":4},"end":{"line":521,"column":25}},"424":{"start":{"line":523,"column":4},"end":{"line":523,"column":50}},"425":{"start":{"line":523,"column":16},"end":{"line":523,"column":50}},"426":{"start":{"line":525,"column":4},"end":{"line":525,"column":39}},"427":{"start":{"line":528,"column":2},"end":{"line":537,"column":4}},"428":{"start":{"line":529,"column":4},"end":{"line":529,"column":44}},"429":{"start":{"line":529,"column":16},"end":{"line":529,"column":44}},"430":{"start":{"line":530,"column":4},"end":{"line":530,"column":35}},"431":{"start":{"line":531,"column":4},"end":{"line":531,"column":28}},"432":{"start":{"line":532,"column":4},"end":{"line":536,"column":5}},"433":{"start":{"line":533,"column":6},"end":{"line":533,"column":37}},"434":{"start":{"line":535,"column":6},"end":{"line":535,"column":33}},"435":{"start":{"line":539,"column":2},"end":{"line":554,"column":4}},"436":{"start":{"line":540,"column":4},"end":{"line":540,"column":24}},"437":{"start":{"line":541,"column":4},"end":{"line":544,"column":5}},"438":{"start":{"line":542,"column":6},"end":{"line":542,"column":25}},"439":{"start":{"line":543,"column":6},"end":{"line":543,"column":44}},"440":{"start":{"line":546,"column":4},"end":{"line":553,"column":5}},"441":{"start":{"line":547,"column":6},"end":{"line":550,"column":62}},"442":{"start":{"line":548,"column":8},"end":{"line":548,"column":37}},"443":{"start":{"line":550,"column":8},"end":{"line":550,"column":62}},"444":{"start":{"line":552,"column":6},"end":{"line":552,"column":50}},"445":{"start":{"line":552,"column":18},"end":{"line":552,"column":50}},"446":{"start":{"line":558,"column":2},"end":{"line":558,"column":44}},"447":{"start":{"line":559,"column":2},"end":{"line":559,"column":76}},"448":{"start":{"line":559,"column":47},"end":{"line":559,"column":73}},"449":{"start":{"line":561,"column":2},"end":{"line":582,"column":5}},"450":{"start":{"line":563,"column":6},"end":{"line":563,"column":29}},"451":{"start":{"line":564,"column":6},"end":{"line":564,"column":27}},"452":{"start":{"line":565,"column":6},"end":{"line":565,"column":23}},"453":{"start":{"line":568,"column":6},"end":{"line":580,"column":7}},"454":{"start":{"line":569,"column":8},"end":{"line":569,"column":58}},"455":{"start":{"line":570,"column":8},"end":{"line":570,"column":70}},"456":{"start":{"line":570,"column":40},"end":{"line":570,"column":70}},"457":{"start":{"line":571,"column":8},"end":{"line":578,"column":9}},"458":{"start":{"line":571,"column":39},"end":{"line":578,"column":9}},"459":{"start":{"line":572,"column":10},"end":{"line":572,"column":46}},"460":{"start":{"line":573,"column":10},"end":{"line":573,"column":40}},"461":{"start":{"line":574,"column":10},"end":{"line":577,"column":11}},"462":{"start":{"line":575,"column":12},"end":{"line":575,"column":53}},"463":{"start":{"line":576,"column":12},"end":{"line":576,"column":36}},"464":{"start":{"line":576,"column":21},"end":{"line":576,"column":36}},"465":{"start":{"line":579,"column":8},"end":{"line":579,"column":37}},"466":{"start":{"line":584,"column":2},"end":{"line":591,"column":5}},"467":{"start":{"line":585,"column":4},"end":{"line":586,"column":29}},"468":{"start":{"line":586,"column":6},"end":{"line":586,"column":29}},"469":{"start":{"line":588,"column":4},"end":{"line":588,"column":32}},"470":{"start":{"line":589,"column":4},"end":{"line":589,"column":70}},"471":{"start":{"line":589,"column":17},"end":{"line":589,"column":70}},"472":{"start":{"line":590,"column":4},"end":{"line":590,"column":18}},"473":{"start":{"line":593,"column":2},"end":{"line":602,"column":5}},"474":{"start":{"line":594,"column":34},"end":{"line":594,"column":55}},"475":{"start":{"line":596,"column":6},"end":{"line":596,"column":45}},"476":{"start":{"line":596,"column":38},"end":{"line":596,"column":45}},"477":{"start":{"line":597,"column":6},"end":{"line":600,"column":92}},"478":{"start":{"line":598,"column":8},"end":{"line":598,"column":51}},"479":{"start":{"line":599,"column":11},"end":{"line":600,"column":92}},"480":{"start":{"line":600,"column":8},"end":{"line":600,"column":92}},"481":{"start":{"line":604,"column":2},"end":{"line":612,"column":5}},"482":{"start":{"line":605,"column":4},"end":{"line":610,"column":5}},"483":{"start":{"line":607,"column":6},"end":{"line":607,"column":50}},"484":{"start":{"line":608,"column":6},"end":{"line":608,"column":80}},"485":{"start":{"line":609,"column":6},"end":{"line":609,"column":47}},"486":{"start":{"line":611,"column":4},"end":{"line":611,"column":23}},"487":{"start":{"line":614,"column":2},"end":{"line":625,"column":5}},"488":{"start":{"line":615,"column":4},"end":{"line":623,"column":5}},"489":{"start":{"line":616,"column":6},"end":{"line":616,"column":24}},"490":{"start":{"line":617,"column":6},"end":{"line":622,"column":9}},"491":{"start":{"line":618,"column":8},"end":{"line":618,"column":27}},"492":{"start":{"line":618,"column":20},"end":{"line":618,"column":27}},"493":{"start":{"line":619,"column":8},"end":{"line":619,"column":37}},"494":{"start":{"line":620,"column":8},"end":{"line":620,"column":81}},"495":{"start":{"line":621,"column":8},"end":{"line":621,"column":45}},"496":{"start":{"line":624,"column":4},"end":{"line":624,"column":23}},"497":{"start":{"line":627,"column":2},"end":{"line":639,"column":5}},"498":{"start":{"line":629,"column":6},"end":{"line":629,"column":23}},"499":{"start":{"line":629,"column":24},"end":{"line":629,"column":41}},"500":{"start":{"line":629,"column":42},"end":{"line":629,"column":63}},"501":{"start":{"line":632,"column":6},"end":{"line":632,"column":44}},"502":{"start":{"line":632,"column":37},"end":{"line":632,"column":44}},"503":{"start":{"line":633,"column":6},"end":{"line":634,"column":102}},"504":{"start":{"line":635,"column":6},"end":{"line":635,"column":35}},"505":{"start":{"line":636,"column":6},"end":{"line":637,"column":43}},"506":{"start":{"line":637,"column":8},"end":{"line":637,"column":43}},"507":{"start":{"line":641,"column":2},"end":{"line":646,"column":5}},"508":{"start":{"line":642,"column":4},"end":{"line":642,"column":41}},"509":{"start":{"line":642,"column":22},"end":{"line":642,"column":41}},"510":{"start":{"line":643,"column":4},"end":{"line":643,"column":32}},"511":{"start":{"line":644,"column":4},"end":{"line":644,"column":64}},"512":{"start":{"line":645,"column":4},"end":{"line":645,"column":18}},"513":{"start":{"line":648,"column":2},"end":{"line":655,"column":5}},"514":{"start":{"line":649,"column":4},"end":{"line":649,"column":28}},"515":{"start":{"line":650,"column":4},"end":{"line":653,"column":5}},"516":{"start":{"line":651,"column":6},"end":{"line":651,"column":39}},"517":{"start":{"line":652,"column":6},"end":{"line":652,"column":71}},"518":{"start":{"line":652,"column":44},"end":{"line":652,"column":71}},"519":{"start":{"line":654,"column":4},"end":{"line":654,"column":15}},"520":{"start":{"line":657,"column":2},"end":{"line":660,"column":3}},"521":{"start":{"line":658,"column":4},"end":{"line":658,"column":48}},"522":{"start":{"line":659,"column":4},"end":{"line":659,"column":59}},"523":{"start":{"line":662,"column":2},"end":{"line":672,"column":5}},"524":{"start":{"line":663,"column":4},"end":{"line":663,"column":28}},"525":{"start":{"line":664,"column":4},"end":{"line":664,"column":53}},"526":{"start":{"line":664,"column":34},"end":{"line":664,"column":53}},"527":{"start":{"line":665,"column":4},"end":{"line":665,"column":62}},"528":{"start":{"line":666,"column":4},"end":{"line":666,"column":32}},"529":{"start":{"line":667,"column":4},"end":{"line":667,"column":30}},"530":{"start":{"line":668,"column":4},"end":{"line":668,"column":86}},"531":{"start":{"line":669,"column":4},"end":{"line":669,"column":66}},"532":{"start":{"line":670,"column":4},"end":{"line":670,"column":90}},"533":{"start":{"line":671,"column":4},"end":{"line":671,"column":16}},"534":{"start":{"line":677,"column":2},"end":{"line":687,"column":5}},"535":{"start":{"line":678,"column":4},"end":{"line":678,"column":28}},"536":{"start":{"line":679,"column":4},"end":{"line":679,"column":34}},"537":{"start":{"line":679,"column":15},"end":{"line":679,"column":34}},"538":{"start":{"line":680,"column":4},"end":{"line":685,"column":5}},"539":{"start":{"line":681,"column":6},"end":{"line":681,"column":64}},"540":{"start":{"line":682,"column":6},"end":{"line":682,"column":34}},"541":{"start":{"line":683,"column":6},"end":{"line":683,"column":32}},"542":{"start":{"line":684,"column":6},"end":{"line":684,"column":55}},"543":{"start":{"line":686,"column":4},"end":{"line":686,"column":16}},"544":{"start":{"line":689,"column":2},"end":{"line":697,"column":5}},"545":{"start":{"line":690,"column":34},"end":{"line":690,"column":55}},"546":{"start":{"line":692,"column":6},"end":{"line":695,"column":34}},"547":{"start":{"line":693,"column":8},"end":{"line":693,"column":48}},"548":{"start":{"line":695,"column":8},"end":{"line":695,"column":34}},"549":{"start":{"line":699,"column":2},"end":{"line":699,"column":33}},"550":{"start":{"line":701,"column":2},"end":{"line":712,"column":5}},"551":{"start":{"line":702,"column":4},"end":{"line":702,"column":54}},"552":{"start":{"line":703,"column":4},"end":{"line":703,"column":48}},"553":{"start":{"line":704,"column":4},"end":{"line":704,"column":34}},"554":{"start":{"line":704,"column":22},"end":{"line":704,"column":34}},"555":{"start":{"line":706,"column":4},"end":{"line":706,"column":58}},"556":{"start":{"line":707,"column":4},"end":{"line":707,"column":66}},"557":{"start":{"line":708,"column":4},"end":{"line":709,"column":63}},"558":{"start":{"line":709,"column":6},"end":{"line":709,"column":63}},"559":{"start":{"line":710,"column":4},"end":{"line":710,"column":54}},"560":{"start":{"line":711,"column":4},"end":{"line":711,"column":18}},"561":{"start":{"line":714,"column":2},"end":{"line":721,"column":4}},"562":{"start":{"line":715,"column":4},"end":{"line":715,"column":40}},"563":{"start":{"line":715,"column":22},"end":{"line":715,"column":40}},"564":{"start":{"line":716,"column":4},"end":{"line":716,"column":31}},"565":{"start":{"line":717,"column":4},"end":{"line":719,"column":6}},"566":{"start":{"line":718,"column":6},"end":{"line":718,"column":88}},"567":{"start":{"line":718,"column":42},"end":{"line":718,"column":88}},"568":{"start":{"line":720,"column":4},"end":{"line":720,"column":17}},"569":{"start":{"line":723,"column":2},"end":{"line":728,"column":4}},"570":{"start":{"line":724,"column":4},"end":{"line":727,"column":24}},"571":{"start":{"line":725,"column":6},"end":{"line":725,"column":47}},"572":{"start":{"line":727,"column":6},"end":{"line":727,"column":24}},"573":{"start":{"line":730,"column":2},"end":{"line":730,"column":17}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":32}},{"start":{"line":12,"column":36},"end":{"line":12,"column":61}}]},"3":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"4":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":33}},{"start":{"line":14,"column":37},"end":{"line":14,"column":47}}]},"5":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":15},"end":{"line":25,"column":20}},{"start":{"line":25,"column":24},"end":{"line":25,"column":25}}]},"6":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":23},"end":{"line":32,"column":39}},{"start":{"line":32,"column":42},"end":{"line":32,"column":46}}]},"7":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"8":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"9":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"10":{"line":83,"type":"cond-expr","locations":[{"start":{"line":83,"column":28},"end":{"line":83,"column":61}},{"start":{"line":83,"column":64},"end":{"line":83,"column":108}}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":30},"end":{"line":89,"column":32}},{"start":{"line":89,"column":36},"end":{"line":89,"column":43}}]},"12":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":14},"end":{"line":90,"column":45}},{"start":{"line":90,"column":50},"end":{"line":90,"column":61}}]},"13":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":6},"end":{"line":98,"column":6}},{"start":{"line":98,"column":6},"end":{"line":98,"column":6}}]},"14":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":8}},{"start":{"line":100,"column":8},"end":{"line":100,"column":8}}]},"15":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":10},"end":{"line":102,"column":10}},{"start":{"line":102,"column":10},"end":{"line":102,"column":10}}]},"16":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":8}},{"start":{"line":109,"column":8},"end":{"line":109,"column":8}}]},"17":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"18":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":10},"end":{"line":112,"column":23}},{"start":{"line":112,"column":27},"end":{"line":112,"column":39}}]},"19":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"20":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"21":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":12},"end":{"line":120,"column":24}},{"start":{"line":120,"column":28},"end":{"line":120,"column":37}}]},"22":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":6},"end":{"line":128,"column":6}},{"start":{"line":128,"column":6},"end":{"line":128,"column":6}}]},"23":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"24":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":10},"end":{"line":130,"column":13}},{"start":{"line":130,"column":18},"end":{"line":130,"column":32}}]},"25":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":6}},{"start":{"line":134,"column":6},"end":{"line":134,"column":6}}]},"26":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"27":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":6}},{"start":{"line":140,"column":6},"end":{"line":140,"column":6}}]},"28":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8}}]},"29":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":8}},{"start":{"line":146,"column":8},"end":{"line":146,"column":8}}]},"30":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":6},"end":{"line":148,"column":6}},{"start":{"line":148,"column":6},"end":{"line":148,"column":6}}]},"31":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":13},"end":{"line":156,"column":17}},{"start":{"line":156,"column":21},"end":{"line":156,"column":34}}]},"32":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":21},"end":{"line":160,"column":43}},{"start":{"line":160,"column":47},"end":{"line":160,"column":59}}]},"33":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":6}},{"start":{"line":161,"column":6},"end":{"line":161,"column":6}}]},"34":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":6},"end":{"line":168,"column":6}},{"start":{"line":168,"column":6},"end":{"line":168,"column":6}}]},"35":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":10},"end":{"line":168,"column":25}},{"start":{"line":168,"column":30},"end":{"line":168,"column":52}}]},"36":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":13},"end":{"line":170,"column":13}},{"start":{"line":170,"column":13},"end":{"line":170,"column":13}}]},"37":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":10},"end":{"line":173,"column":10}},{"start":{"line":173,"column":10},"end":{"line":173,"column":10}}]},"38":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":21},"end":{"line":176,"column":29}},{"start":{"line":176,"column":33},"end":{"line":176,"column":42}}]},"39":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":21}},{"start":{"line":178,"column":25},"end":{"line":178,"column":37}}]},"40":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":8}},{"start":{"line":179,"column":8},"end":{"line":179,"column":8}}]},"41":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":37},"end":{"line":179,"column":57}},{"start":{"line":179,"column":60},"end":{"line":179,"column":80}}]},"42":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":180,"column":8}},{"start":{"line":180,"column":8},"end":{"line":180,"column":8}}]},"43":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":12},"end":{"line":180,"column":15}},{"start":{"line":180,"column":19},"end":{"line":180,"column":28}}]},"44":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":36},"end":{"line":181,"column":41}},{"start":{"line":181,"column":45},"end":{"line":181,"column":50}}]},"45":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":29},"end":{"line":184,"column":34}},{"start":{"line":184,"column":38},"end":{"line":184,"column":43}}]},"46":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":13},"end":{"line":185,"column":13}},{"start":{"line":185,"column":13},"end":{"line":185,"column":13}}]},"47":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":8}},{"start":{"line":187,"column":8},"end":{"line":187,"column":8}}]},"48":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":12}},{"start":{"line":190,"column":12},"end":{"line":190,"column":12}}]},"49":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":14},"end":{"line":192,"column":14}},{"start":{"line":192,"column":14},"end":{"line":192,"column":14}}]},"50":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":12},"end":{"line":198,"column":12}},{"start":{"line":198,"column":12},"end":{"line":198,"column":12}}]},"51":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":12},"end":{"line":201,"column":12}},{"start":{"line":201,"column":12},"end":{"line":201,"column":12}}]},"52":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":14},"end":{"line":202,"column":27}},{"start":{"line":202,"column":31},"end":{"line":202,"column":43}}]},"53":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"54":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":13},"end":{"line":213,"column":13}},{"start":{"line":213,"column":13},"end":{"line":213,"column":13}}]},"55":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":8}},{"start":{"line":216,"column":8},"end":{"line":216,"column":8}}]},"56":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":10},"end":{"line":218,"column":10}},{"start":{"line":218,"column":10},"end":{"line":218,"column":10}}]},"57":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":10},"end":{"line":220,"column":10}},{"start":{"line":220,"column":10},"end":{"line":220,"column":10}}]},"58":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":14},"end":{"line":220,"column":19}},{"start":{"line":220,"column":24},"end":{"line":220,"column":50}}]},"59":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":8},"end":{"line":223,"column":8}},{"start":{"line":223,"column":8},"end":{"line":223,"column":8}}]},"60":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":12},"end":{"line":223,"column":16}},{"start":{"line":223,"column":20},"end":{"line":223,"column":33}}]},"61":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":8}},{"start":{"line":224,"column":8},"end":{"line":224,"column":8}}]},"62":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":12},"end":{"line":224,"column":15}},{"start":{"line":224,"column":19},"end":{"line":224,"column":28}}]},"63":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":21},"end":{"line":226,"column":33}},{"start":{"line":226,"column":37},"end":{"line":226,"column":54}},{"start":{"line":226,"column":58},"end":{"line":226,"column":67}}]},"64":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":10},"end":{"line":227,"column":10}},{"start":{"line":227,"column":10},"end":{"line":227,"column":10}}]},"65":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":8},"end":{"line":230,"column":8}},{"start":{"line":230,"column":8},"end":{"line":230,"column":8}}]},"66":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":12},"end":{"line":230,"column":15}},{"start":{"line":230,"column":19},"end":{"line":230,"column":32}}]},"67":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":13},"end":{"line":232,"column":13}},{"start":{"line":232,"column":13},"end":{"line":232,"column":13}}]},"68":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":13},"end":{"line":235,"column":13}},{"start":{"line":235,"column":13},"end":{"line":235,"column":13}}]},"69":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":17},"end":{"line":235,"column":21}},{"start":{"line":235,"column":25},"end":{"line":235,"column":38}}]},"70":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":8}},{"start":{"line":237,"column":8},"end":{"line":237,"column":8}}]},"71":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":47},"end":{"line":239,"column":56}},{"start":{"line":239,"column":60},"end":{"line":239,"column":71}}]},"72":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":15},"end":{"line":240,"column":15}},{"start":{"line":240,"column":15},"end":{"line":240,"column":15}}]},"73":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":15},"end":{"line":242,"column":15}},{"start":{"line":242,"column":15},"end":{"line":242,"column":15}}]},"74":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":17},"end":{"line":244,"column":39}},{"start":{"line":244,"column":43},"end":{"line":244,"column":77}}]},"75":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":13},"end":{"line":248,"column":13}},{"start":{"line":248,"column":13},"end":{"line":248,"column":13}}]},"76":{"line":256,"type":"switch","locations":[{"start":{"line":257,"column":6},"end":{"line":257,"column":35}},{"start":{"line":258,"column":6},"end":{"line":258,"column":35}},{"start":{"line":259,"column":6},"end":{"line":259,"column":34}},{"start":{"line":260,"column":6},"end":{"line":260,"column":39}}]},"77":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":6},"end":{"line":262,"column":6}},{"start":{"line":262,"column":6},"end":{"line":262,"column":6}}]},"78":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":10},"end":{"line":262,"column":22}},{"start":{"line":262,"column":26},"end":{"line":262,"column":46}}]},"79":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"80":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":6},"end":{"line":272,"column":6}},{"start":{"line":272,"column":6},"end":{"line":272,"column":6}}]},"81":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":6},"end":{"line":273,"column":6}},{"start":{"line":273,"column":6},"end":{"line":273,"column":6}}]},"82":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"83":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":8},"end":{"line":285,"column":32}},{"start":{"line":285,"column":36},"end":{"line":285,"column":45}}]},"84":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":6},"end":{"line":287,"column":6}},{"start":{"line":287,"column":6},"end":{"line":287,"column":6}}]},"85":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":10},"end":{"line":287,"column":33}},{"start":{"line":287,"column":37},"end":{"line":287,"column":45}},{"start":{"line":287,"column":49},"end":{"line":287,"column":64}}]},"86":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":6},"end":{"line":293,"column":6}},{"start":{"line":293,"column":6},"end":{"line":293,"column":6}}]},"87":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":300,"column":4}},{"start":{"line":300,"column":4},"end":{"line":300,"column":4}}]},"88":{"line":309,"type":"cond-expr","locations":[{"start":{"line":309,"column":25},"end":{"line":309,"column":53}},{"start":{"line":309,"column":56},"end":{"line":309,"column":58}}]},"89":{"line":310,"type":"cond-expr","locations":[{"start":{"line":310,"column":26},"end":{"line":310,"column":33}},{"start":{"line":310,"column":36},"end":{"line":310,"column":39}}]},"90":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"91":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":6},"end":{"line":319,"column":6}},{"start":{"line":319,"column":6},"end":{"line":319,"column":6}}]},"92":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":11},"end":{"line":324,"column":11}},{"start":{"line":324,"column":11},"end":{"line":324,"column":11}}]},"93":{"line":326,"type":"cond-expr","locations":[{"start":{"line":326,"column":46},"end":{"line":326,"column":48}},{"start":{"line":326,"column":51},"end":{"line":326,"column":52}}]},"94":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":6},"end":{"line":328,"column":6}},{"start":{"line":328,"column":6},"end":{"line":328,"column":6}}]},"95":{"line":332,"type":"cond-expr","locations":[{"start":{"line":332,"column":28},"end":{"line":332,"column":59}},{"start":{"line":332,"column":62},"end":{"line":332,"column":73}}]},"96":{"line":334,"type":"cond-expr","locations":[{"start":{"line":334,"column":30},"end":{"line":334,"column":44}},{"start":{"line":334,"column":47},"end":{"line":334,"column":58}}]},"97":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":11},"end":{"line":338,"column":11}},{"start":{"line":338,"column":11},"end":{"line":338,"column":11}}]},"98":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":6},"end":{"line":340,"column":6}},{"start":{"line":340,"column":6},"end":{"line":340,"column":6}}]},"99":{"line":340,"type":"cond-expr","locations":[{"start":{"line":340,"column":43},"end":{"line":340,"column":59}},{"start":{"line":340,"column":62},"end":{"line":340,"column":72}}]},"100":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":11},"end":{"line":341,"column":11}},{"start":{"line":341,"column":11},"end":{"line":341,"column":11}}]},"101":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":10},"end":{"line":349,"column":10}},{"start":{"line":349,"column":10},"end":{"line":349,"column":10}}]},"102":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":14},"end":{"line":349,"column":19}},{"start":{"line":349,"column":23},"end":{"line":349,"column":36}}]},"103":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":4},"end":{"line":362,"column":4}},{"start":{"line":362,"column":4},"end":{"line":362,"column":4}}]},"104":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":15},"end":{"line":365,"column":20}},{"start":{"line":365,"column":24},"end":{"line":365,"column":39}},{"start":{"line":365,"column":43},"end":{"line":365,"column":54}}]},"105":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":4},"end":{"line":367,"column":4}},{"start":{"line":367,"column":4},"end":{"line":367,"column":4}}]},"106":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":6},"end":{"line":368,"column":6}},{"start":{"line":368,"column":6},"end":{"line":368,"column":6}}]},"107":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":8},"end":{"line":369,"column":8}},{"start":{"line":369,"column":8},"end":{"line":369,"column":8}}]},"108":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":8},"end":{"line":370,"column":8}},{"start":{"line":370,"column":8},"end":{"line":370,"column":8}}]},"109":{"line":381,"type":"cond-expr","locations":[{"start":{"line":381,"column":49},"end":{"line":381,"column":53}},{"start":{"line":381,"column":56},"end":{"line":381,"column":62}}]},"110":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":20},"end":{"line":386,"column":36}},{"start":{"line":386,"column":40},"end":{"line":386,"column":59}}]},"111":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":6},"end":{"line":388,"column":6}},{"start":{"line":388,"column":6},"end":{"line":388,"column":6}}]},"112":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":8},"end":{"line":389,"column":8}},{"start":{"line":389,"column":8},"end":{"line":389,"column":8}}]},"113":{"line":390,"type":"binary-expr","locations":[{"start":{"line":390,"column":18},"end":{"line":390,"column":43}},{"start":{"line":390,"column":47},"end":{"line":390,"column":57}},{"start":{"line":390,"column":62},"end":{"line":390,"column":73}}]},"114":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":10},"end":{"line":393,"column":10}},{"start":{"line":393,"column":10},"end":{"line":393,"column":10}}]},"115":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":17},"end":{"line":395,"column":17}},{"start":{"line":395,"column":17},"end":{"line":395,"column":17}}]},"116":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":19},"end":{"line":396,"column":28}},{"start":{"line":396,"column":32},"end":{"line":396,"column":56}},{"start":{"line":396,"column":60},"end":{"line":396,"column":71}}]},"117":{"line":398,"type":"binary-expr","locations":[{"start":{"line":398,"column":22},"end":{"line":398,"column":29}},{"start":{"line":398,"column":33},"end":{"line":398,"column":63}}]},"118":{"line":399,"type":"binary-expr","locations":[{"start":{"line":399,"column":20},"end":{"line":399,"column":23}},{"start":{"line":399,"column":27},"end":{"line":399,"column":45}},{"start":{"line":399,"column":50},"end":{"line":399,"column":61}}]},"119":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":13},"end":{"line":402,"column":13}},{"start":{"line":402,"column":13},"end":{"line":402,"column":13}}]},"120":{"line":402,"type":"binary-expr","locations":[{"start":{"line":402,"column":17},"end":{"line":402,"column":42}},{"start":{"line":403,"column":18},"end":{"line":403,"column":37}},{"start":{"line":403,"column":41},"end":{"line":403,"column":65}},{"start":{"line":403,"column":69},"end":{"line":403,"column":87}}]},"121":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":8},"end":{"line":405,"column":8}},{"start":{"line":405,"column":8},"end":{"line":405,"column":8}}]},"122":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":12},"end":{"line":405,"column":20}},{"start":{"line":405,"column":24},"end":{"line":405,"column":41}}]},"123":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]},"124":{"line":424,"type":"binary-expr","locations":[{"start":{"line":424,"column":8},"end":{"line":424,"column":22}},{"start":{"line":424,"column":26},"end":{"line":424,"column":61}}]},"125":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":6},"end":{"line":426,"column":6}},{"start":{"line":426,"column":6},"end":{"line":426,"column":6}}]},"126":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":10},"end":{"line":426,"column":25}},{"start":{"line":426,"column":29},"end":{"line":426,"column":43}},{"start":{"line":426,"column":47},"end":{"line":426,"column":61}},{"start":{"line":426,"column":65},"end":{"line":426,"column":80}},{"start":{"line":426,"column":84},"end":{"line":426,"column":99}}]},"127":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":4},"end":{"line":432,"column":4}},{"start":{"line":432,"column":4},"end":{"line":432,"column":4}}]},"128":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":6},"end":{"line":434,"column":6}},{"start":{"line":434,"column":6},"end":{"line":434,"column":6}}]},"129":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":8},"end":{"line":435,"column":8}},{"start":{"line":435,"column":8},"end":{"line":435,"column":8}}]},"130":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":13},"end":{"line":436,"column":13}},{"start":{"line":436,"column":13},"end":{"line":436,"column":13}}]},"131":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":13},"end":{"line":437,"column":13}},{"start":{"line":437,"column":13},"end":{"line":437,"column":13}}]},"132":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":13},"end":{"line":439,"column":13}},{"start":{"line":439,"column":13},"end":{"line":439,"column":13}}]},"133":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":27},"end":{"line":447,"column":27}},{"start":{"line":447,"column":27},"end":{"line":447,"column":27}}]},"134":{"line":447,"type":"binary-expr","locations":[{"start":{"line":447,"column":31},"end":{"line":447,"column":46}},{"start":{"line":447,"column":50},"end":{"line":447,"column":74}}]},"135":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":6},"end":{"line":449,"column":6}},{"start":{"line":449,"column":6},"end":{"line":449,"column":6}}]},"136":{"line":449,"type":"binary-expr","locations":[{"start":{"line":449,"column":10},"end":{"line":449,"column":34}},{"start":{"line":449,"column":38},"end":{"line":449,"column":63}}]},"137":{"line":451,"type":"cond-expr","locations":[{"start":{"line":451,"column":47},"end":{"line":451,"column":64}},{"start":{"line":451,"column":67},"end":{"line":451,"column":71}}]},"138":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":4},"end":{"line":457,"column":4}},{"start":{"line":457,"column":4},"end":{"line":457,"column":4}}]},"139":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":6},"end":{"line":460,"column":6}},{"start":{"line":460,"column":6},"end":{"line":460,"column":6}}]},"140":{"line":463,"type":"binary-expr","locations":[{"start":{"line":463,"column":20},"end":{"line":463,"column":34}},{"start":{"line":463,"column":38},"end":{"line":463,"column":63}}]},"141":{"line":464,"type":"cond-expr","locations":[{"start":{"line":464,"column":58},"end":{"line":464,"column":63}},{"start":{"line":464,"column":66},"end":{"line":464,"column":70}}]},"142":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":4},"end":{"line":469,"column":4}},{"start":{"line":469,"column":4},"end":{"line":469,"column":4}}]},"143":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":8},"end":{"line":469,"column":15}},{"start":{"line":469,"column":19},"end":{"line":469,"column":43}}]},"144":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":27},"end":{"line":473,"column":27}},{"start":{"line":473,"column":27},"end":{"line":473,"column":27}}]},"145":{"line":473,"type":"binary-expr","locations":[{"start":{"line":473,"column":31},"end":{"line":473,"column":46}},{"start":{"line":473,"column":50},"end":{"line":473,"column":74}}]},"146":{"line":474,"type":"cond-expr","locations":[{"start":{"line":474,"column":77},"end":{"line":474,"column":94}},{"start":{"line":474,"column":97},"end":{"line":474,"column":101}}]},"147":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":6},"end":{"line":475,"column":6}},{"start":{"line":475,"column":6},"end":{"line":475,"column":6}}]},"148":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":8},"end":{"line":476,"column":8}},{"start":{"line":476,"column":8},"end":{"line":476,"column":8}}]},"149":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":8},"end":{"line":478,"column":8}},{"start":{"line":478,"column":8},"end":{"line":478,"column":8}}]},"150":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":13},"end":{"line":480,"column":13}},{"start":{"line":480,"column":13},"end":{"line":480,"column":13}}]},"151":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":8},"end":{"line":484,"column":8}},{"start":{"line":484,"column":8},"end":{"line":484,"column":8}}]},"152":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":8},"end":{"line":485,"column":8}},{"start":{"line":485,"column":8},"end":{"line":485,"column":8}}]},"153":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":8},"end":{"line":486,"column":8}},{"start":{"line":486,"column":8},"end":{"line":486,"column":8}}]},"154":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":493,"column":4}},{"start":{"line":493,"column":4},"end":{"line":493,"column":4}}]},"155":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":4},"end":{"line":494,"column":4}},{"start":{"line":494,"column":4},"end":{"line":494,"column":4}}]},"156":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":4},"end":{"line":495,"column":4}},{"start":{"line":495,"column":4},"end":{"line":495,"column":4}}]},"157":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":4},"end":{"line":496,"column":4}},{"start":{"line":496,"column":4},"end":{"line":496,"column":4}}]},"158":{"line":502,"type":"binary-expr","locations":[{"start":{"line":502,"column":35},"end":{"line":502,"column":48}},{"start":{"line":502,"column":52},"end":{"line":502,"column":78}}]},"159":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":4},"end":{"line":505,"column":4}},{"start":{"line":505,"column":4},"end":{"line":505,"column":4}}]},"160":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":4},"end":{"line":510,"column":4}},{"start":{"line":510,"column":4},"end":{"line":510,"column":4}}]},"161":{"line":513,"type":"cond-expr","locations":[{"start":{"line":513,"column":55},"end":{"line":513,"column":70}},{"start":{"line":513,"column":73},"end":{"line":513,"column":98}}]},"162":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":8},"end":{"line":517,"column":8}},{"start":{"line":517,"column":8},"end":{"line":517,"column":8}}]},"163":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":4},"end":{"line":523,"column":4}},{"start":{"line":523,"column":4},"end":{"line":523,"column":4}}]},"164":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":4},"end":{"line":529,"column":4}},{"start":{"line":529,"column":4},"end":{"line":529,"column":4}}]},"165":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":4},"end":{"line":541,"column":4}},{"start":{"line":541,"column":4},"end":{"line":541,"column":4}}]},"166":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":6},"end":{"line":547,"column":6}},{"start":{"line":547,"column":6},"end":{"line":547,"column":6}}]},"167":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":6},"end":{"line":552,"column":6}},{"start":{"line":552,"column":6},"end":{"line":552,"column":6}}]},"168":{"line":568,"type":"if","locations":[{"start":{"line":568,"column":6},"end":{"line":568,"column":6}},{"start":{"line":568,"column":6},"end":{"line":568,"column":6}}]},"169":{"line":568,"type":"binary-expr","locations":[{"start":{"line":568,"column":10},"end":{"line":568,"column":33}},{"start":{"line":568,"column":37},"end":{"line":568,"column":55}}]},"170":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":8},"end":{"line":570,"column":8}},{"start":{"line":570,"column":8},"end":{"line":570,"column":8}}]},"171":{"line":571,"type":"if","locations":[{"start":{"line":571,"column":8},"end":{"line":571,"column":8}},{"start":{"line":571,"column":8},"end":{"line":571,"column":8}}]},"172":{"line":574,"type":"if","locations":[{"start":{"line":574,"column":10},"end":{"line":574,"column":10}},{"start":{"line":574,"column":10},"end":{"line":574,"column":10}}]},"173":{"line":574,"type":"binary-expr","locations":[{"start":{"line":574,"column":14},"end":{"line":574,"column":17}},{"start":{"line":574,"column":21},"end":{"line":574,"column":45}},{"start":{"line":574,"column":49},"end":{"line":574,"column":64}}]},"174":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":12},"end":{"line":576,"column":12}},{"start":{"line":576,"column":12},"end":{"line":576,"column":12}}]},"175":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":4},"end":{"line":585,"column":4}},{"start":{"line":585,"column":4},"end":{"line":585,"column":4}}]},"176":{"line":585,"type":"binary-expr","locations":[{"start":{"line":585,"column":8},"end":{"line":585,"column":16}},{"start":{"line":585,"column":20},"end":{"line":585,"column":35}},{"start":{"line":585,"column":39},"end":{"line":585,"column":68}},{"start":{"line":585,"column":72},"end":{"line":585,"column":97}}]},"177":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":4},"end":{"line":589,"column":4}},{"start":{"line":589,"column":4},"end":{"line":589,"column":4}}]},"178":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":6},"end":{"line":596,"column":6}},{"start":{"line":596,"column":6},"end":{"line":596,"column":6}}]},"179":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":6},"end":{"line":597,"column":6}},{"start":{"line":597,"column":6},"end":{"line":597,"column":6}}]},"180":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":11},"end":{"line":599,"column":11}},{"start":{"line":599,"column":11},"end":{"line":599,"column":11}}]},"181":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":4},"end":{"line":605,"column":4}},{"start":{"line":605,"column":4},"end":{"line":605,"column":4}}]},"182":{"line":605,"type":"binary-expr","locations":[{"start":{"line":605,"column":8},"end":{"line":605,"column":16}},{"start":{"line":605,"column":20},"end":{"line":605,"column":40}},{"start":{"line":605,"column":44},"end":{"line":605,"column":73}},{"start":{"line":606,"column":8},"end":{"line":606,"column":44}}]},"183":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":4},"end":{"line":615,"column":4}},{"start":{"line":615,"column":4},"end":{"line":615,"column":4}}]},"184":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":8},"end":{"line":618,"column":8}},{"start":{"line":618,"column":8},"end":{"line":618,"column":8}}]},"185":{"line":620,"type":"binary-expr","locations":[{"start":{"line":620,"column":55},"end":{"line":620,"column":63}},{"start":{"line":620,"column":67},"end":{"line":620,"column":78}}]},"186":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":6},"end":{"line":632,"column":6}},{"start":{"line":632,"column":6},"end":{"line":632,"column":6}}]},"187":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":4},"end":{"line":642,"column":4}},{"start":{"line":642,"column":4},"end":{"line":642,"column":4}}]},"188":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":4},"end":{"line":650,"column":4}},{"start":{"line":650,"column":4},"end":{"line":650,"column":4}}]},"189":{"line":650,"type":"binary-expr","locations":[{"start":{"line":650,"column":8},"end":{"line":650,"column":24}},{"start":{"line":650,"column":28},"end":{"line":650,"column":60}}]},"190":{"line":659,"type":"binary-expr","locations":[{"start":{"line":659,"column":11},"end":{"line":659,"column":15}},{"start":{"line":659,"column":19},"end":{"line":659,"column":59}}]},"191":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":4},"end":{"line":664,"column":4}},{"start":{"line":664,"column":4},"end":{"line":664,"column":4}}]},"192":{"line":664,"type":"binary-expr","locations":[{"start":{"line":664,"column":8},"end":{"line":664,"column":13}},{"start":{"line":664,"column":17},"end":{"line":664,"column":32}}]},"193":{"line":665,"type":"binary-expr","locations":[{"start":{"line":665,"column":37},"end":{"line":665,"column":45}},{"start":{"line":665,"column":49},"end":{"line":665,"column":60}}]},"194":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":4},"end":{"line":679,"column":4}},{"start":{"line":679,"column":4},"end":{"line":679,"column":4}}]},"195":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":4},"end":{"line":680,"column":4}},{"start":{"line":680,"column":4},"end":{"line":680,"column":4}}]},"196":{"line":681,"type":"binary-expr","locations":[{"start":{"line":681,"column":39},"end":{"line":681,"column":47}},{"start":{"line":681,"column":51},"end":{"line":681,"column":62}}]},"197":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":6},"end":{"line":692,"column":6}},{"start":{"line":692,"column":6},"end":{"line":692,"column":6}}]},"198":{"line":692,"type":"binary-expr","locations":[{"start":{"line":692,"column":10},"end":{"line":692,"column":37}},{"start":{"line":692,"column":41},"end":{"line":692,"column":61}},{"start":{"line":692,"column":65},"end":{"line":692,"column":81}}]},"199":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":13},"end":{"line":702,"column":24}},{"start":{"line":702,"column":28},"end":{"line":702,"column":53}}]},"200":{"line":704,"type":"if","locations":[{"start":{"line":704,"column":4},"end":{"line":704,"column":4}},{"start":{"line":704,"column":4},"end":{"line":704,"column":4}}]},"201":{"line":704,"type":"binary-expr","locations":[{"start":{"line":704,"column":8},"end":{"line":704,"column":11}},{"start":{"line":704,"column":15},"end":{"line":704,"column":20}}]},"202":{"line":707,"type":"binary-expr","locations":[{"start":{"line":707,"column":37},"end":{"line":707,"column":45}},{"start":{"line":707,"column":49},"end":{"line":707,"column":60}}]},"203":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":4},"end":{"line":708,"column":4}},{"start":{"line":708,"column":4},"end":{"line":708,"column":4}}]},"204":{"line":708,"type":"binary-expr","locations":[{"start":{"line":708,"column":8},"end":{"line":708,"column":27}},{"start":{"line":708,"column":31},"end":{"line":708,"column":73}},{"start":{"line":708,"column":77},"end":{"line":708,"column":93}}]},"205":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":4},"end":{"line":715,"column":4}},{"start":{"line":715,"column":4},"end":{"line":715,"column":4}}]},"206":{"line":718,"type":"if","locations":[{"start":{"line":718,"column":6},"end":{"line":718,"column":6}},{"start":{"line":718,"column":6},"end":{"line":718,"column":6}}]},"207":{"line":718,"type":"binary-expr","locations":[{"start":{"line":718,"column":10},"end":{"line":718,"column":15}},{"start":{"line":718,"column":19},"end":{"line":718,"column":40}}]},"208":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":4},"end":{"line":724,"column":4}},{"start":{"line":724,"column":4},"end":{"line":724,"column":4}}]},"209":{"line":724,"type":"binary-expr","locations":[{"start":{"line":724,"column":8},"end":{"line":724,"column":16}},{"start":{"line":724,"column":20},"end":{"line":724,"column":35}},{"start":{"line":724,"column":39},"end":{"line":724,"column":68}},{"start":{"line":724,"column":72},"end":{"line":724,"column":108}}]}},"code":["// Type description parser","//","// Type description JSON files (such as ecmascript.json and browser.json)","// are used to","//","// A) describe types that come from native code","//","// B) to cheaply load the types for big libraries, or libraries that","//    can't be inferred well","","(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return exports.init = mod;","  if (typeof define == \"function\" && define.amd) // AMD","    return define({init: mod});","  tern.def = {init: mod};","})(function(exports, infer) {","  \"use strict\";","","  function hop(obj, prop) {","    return Object.prototype.hasOwnProperty.call(obj, prop);","  }","","  var TypeParser = exports.TypeParser = function(spec, start, base, forceNew) {","    this.pos = start || 0;","    this.spec = spec;","    this.base = base;","    this.forceNew = forceNew;","  };","","  function unwrapType(type, self, args) {","    return type.call ? type(self, args) : type;","  }","","  function extractProp(type, prop) {","    if (prop == \"!ret\") {","      if (type.retval) return type.retval;","      var rv = new infer.AVal;","      type.propagate(new infer.IsCallee(infer.ANull, [], null, rv));","      return rv;","    } else {","      return type.getProp(prop);","    }","  }","","  function computedFunc(name, args, retType, generator) {","    return function(self, cArgs) {","      var realArgs = [];","      for (var i = 0; i < args.length; i++) realArgs.push(unwrapType(args[i], self, cArgs));","      return new infer.Fn(name, infer.ANull, realArgs, unwrapType(retType, self, cArgs), generator);","    };","  }","  function computedUnion(types) {","    return function(self, args) {","      var union = new infer.AVal;","      for (var i = 0; i < types.length; i++) unwrapType(types[i], self, args).propagate(union);","      union.maxWeight = 1e5;","      return union;","    };","  }","  function computedArray(inner) {","    return function(self, args) {","      return new infer.Arr(inner(self, args));","    };","  }","  function computedTuple(types) {","    return function(self, args) {","      return new infer.Arr(types.map(function(tp) { return unwrapType(tp, self, args) }))","    }","  }","  function computedObject(names, types) {","    return function(self, args) {","      var obj = new infer.Obj;","      names.forEach(function (prop, i) {","        obj.defProp(prop).addType(unwrapType(types[i], self, args));","      });","      return obj;","    };","  }","","  TypeParser.prototype = {","    eat: function(str) {","      if (str.length == 1 ? this.spec.charAt(this.pos) == str : this.spec.indexOf(str, this.pos) == this.pos) {","        this.pos += str.length;","        return true;","      }","    },","    word: function(re) {","      var word = \"\", ch, re = re || /[\\w$]/;","      while ((ch = this.spec.charAt(this.pos)) && re.test(ch)) { word += ch; ++this.pos; }","      return word;","    },","    error: function() {","      throw new Error(\"Unrecognized type spec: \" + this.spec + \" (at \" + this.pos + \")\");","    },","    parseFnType: function(comp, name, top, generator) {","      var args = [], names = [], computed = false;","      if (!this.eat(\")\")) for (var i = 0; ; ++i) {","        var colon = this.spec.indexOf(\": \", this.pos), argname;","        if (colon != -1) {","          argname = this.spec.slice(this.pos, colon);","          if (/^(\\.\\.\\.)?[$\\w?]+$/.test(argname))","            this.pos = colon + 2;","          else","            argname = null;","        }","        names.push(argname);","        var argType = this.parseType(comp);","        if (argType.call) computed = true;","        args.push(argType);","        if (!this.eat(\", \")) {","          this.eat(\")\") || this.error();","          break;","        }","      }","      var retType, computeRet, computeRetStart, fn;","      if (this.eat(\" -> \")) {","        var retStart = this.pos;","        retType = this.parseType(true);","        if (retType.call && !computed) {","          computeRet = retType;","          retType = infer.ANull;","          computeRetStart = retStart;","        }","      } else {","        retType = infer.ANull;","      }","      if (computed) return computedFunc(name, args, retType, generator);","","      if (top && (fn = this.base))","        infer.Fn.call(this.base, name, infer.ANull, args, names, retType, generator);","      else","        fn = new infer.Fn(name, infer.ANull, args, names, retType, generator);","      if (computeRet) fn.computeRet = computeRet;","      if (computeRetStart != null) fn.computeRetSource = this.spec.slice(computeRetStart, this.pos);","      return fn;","    },","    parseType: function(comp, name, top) {","      var main = this.parseTypeMaybeProp(comp, name, top);","      if (!this.eat(\"|\")) return main;","      var types = [main], computed = main.call;","      for (;;) {","        var next = this.parseTypeMaybeProp(comp, name, top);","        types.push(next);","        if (next.call) computed = true;","        if (!this.eat(\"|\")) break;","      }","      if (computed) return computedUnion(types);","      var union = new infer.AVal;","      for (var i = 0; i < types.length; i++) types[i].propagate(union);","      union.maxWeight = 1e5;","      return union;","    },","    parseTypeMaybeProp: function(comp, name, top) {","      var result = this.parseTypeInner(comp, name, top);","      while (comp && this.eat(\".\")) result = this.extendWithProp(result);","      return result;","    },","    extendWithProp: function(base) {","      var propName = this.word(/[\\w<>$!:]/) || this.error();","      if (base.apply) return function(self, args) {","        return extractProp(base(self, args), propName);","      };","      return extractProp(base, propName);","    },","    parseTypeInner: function(comp, name, top) {","      var gen","      if (this.eat(\"fn(\") || (gen = this.eat(\"fn*(\"))) {","        return this.parseFnType(comp, name, top, gen);","      } else if (this.eat(\"[\")) {","        var inner = this.parseType(comp), types, computed = inner.call","        while (this.eat(\", \")) {","          if (!types) types = [inner]","          var next = this.parseType(comp)","          types.push(next)","          computed = computed || next.call","        }","        this.eat(\"]\") || this.error()","        if (computed) return types ? computedTuple(types) : computedArray(inner)","        if (top && this.base) {","          infer.Arr.call(this.base, types || inner)","          return this.base","        }","        return new infer.Arr(types || inner)","      } else if (this.eat(\"{\")) {","        var types = [], names = [], computed = false","        if (!this.eat(\"}\")) {","          for (var i = 0; ; ++i) {","            var colon = this.spec.indexOf(\": \", this.pos), propName;","            if (colon != -1) {","              propName = this.spec.slice(this.pos, colon);","              if (/^[$\\w?]+$/.test(propName))","                this.pos = colon + 2;","              else","                propName = null;","            }","            var propType = this.parseType(comp);","            if (propType.call) computed = true;","            names.push(propName);","            types.push(propType);","            if (!this.eat(\", \")) {","              this.eat(\"}\") || this.error();","              break;","            }","          }","        }","        if (computed) return computedObject(names, types);","        var obj = new infer.Obj;","        names.forEach(function (prop, i) {","          obj.defProp(prop).addType(types[i]);","        });","        return obj;","      } else if (this.eat(\"+\")) {","        var path = this.word(/[\\w$<>\\.:!]/)","        var base = infer.cx().localDefs[path + \".prototype\"]","        if (!base) {","          var base = parsePath(path);","          if (!(base instanceof infer.Obj)) return base;","          var proto = descendProps(base, [\"prototype\"])","          if (proto && (proto = proto.getObjType()))","            base = proto","        }","        if (comp && this.eat(\"[\")) return this.parsePoly(base);","        if (top && this.base) {","          this.base.proto = base","          var name = base.hasCtor && base.hasCtor.name || base.name","          if (name) this.base.name = name","          return this.base","        }","        if (top && this.forceNew) return new infer.Obj(base);","        return infer.getInstance(base);","      } else if (this.eat(\":\")) {","        var name = this.word(/[\\w$\\.]/)","        return infer.getSymbol(name)","      } else if (comp && this.eat(\"!\")) {","        var arg = this.word(/\\d/);","        if (arg) {","          arg = Number(arg);","          return function(_self, args) {return args[arg] || infer.ANull;};","        } else if (this.eat(\"this\")) {","          return function(self) {return self;};","        } else if (this.eat(\"custom:\")) {","          var fname = this.word(/[\\w$]/);","          return customFunctions[fname] || function() { return infer.ANull; };","        } else {","          return this.fromWord(\"!\" + this.word(/[\\w$<>\\.!:]/));","        }","      } else if (this.eat(\"?\")) {","        return infer.ANull;","      } else {","        return this.fromWord(this.word(/[\\w$<>\\.!:`]/));","      }","    },","    fromWord: function(spec) {","      var cx = infer.cx();","      switch (spec) {","      case \"number\": return cx.num;","      case \"string\": return cx.str;","      case \"bool\": return cx.bool;","      case \"<top>\": return cx.topScope;","      }","      if (cx.localDefs && spec in cx.localDefs) return cx.localDefs[spec];","      return parsePath(spec);","    },","    parsePoly: function(base) {","      var propName = \"<i>\", match;","      if (match = this.spec.slice(this.pos).match(/^\\s*([\\w$:]+)\\s*=\\s*/)) {","        propName = match[1];","        this.pos += match[0].length;","      }","      var value = this.parseType(true);","      if (!this.eat(\"]\")) this.error();","      if (value.call) return function(self, args) {","        var instance = new infer.Obj(base);","        value(self, args).propagate(instance.defProp(propName));","        return instance;","      };","      var instance = new infer.Obj(base);","      value.propagate(instance.defProp(propName));","      return instance;","    }","  };","","  function addArgCallEffects(type) {","    if (type instanceof infer.Fn && type.args) for (var i = 0; i < type.args.length; ++i) {","      var arg = type.args[i]","      if (arg instanceof infer.Fn && arg.args && arg.args.length) addArgCallEffect(type, i)","    }","  }","","  function addArgCallEffect(type, argNum) {","    addEffect(type, function(_self, args) {","      if (args[argNum]) args[argNum].propagate(","        new infer.IsCallee(infer.cx().topScope, type.args[argNum].args, null, infer.ANull))","    })","  }","","  function parseType(spec, name, base, forceNew) {","    var type = new TypeParser(spec, null, base, forceNew).parseType(false, name, true);","    if (type instanceof infer.AVal) type.types.forEach(addArgCallEffects)","    else addArgCallEffects(type)","    return type;","  }","","  function addEffect(fn, handler, replaceRet) {","    var oldCmp = fn.computeRet, rv = fn.retval;","    fn.computeRet = function(self, args, argNodes) {","      var handled = handler(self, args, argNodes);","      var old = oldCmp ? oldCmp(self, args, argNodes) : rv;","      return replaceRet ? handled : old;","    };","  }","","  var parseEffect = exports.parseEffect = function(effect, fn) {","    var m;","    if (effect.indexOf(\"propagate \") == 0) {","      var p = new TypeParser(effect, 10);","      var origin = p.parseType(true);","      if (!p.eat(\" \")) p.error();","      var target = p.parseType(true);","      addEffect(fn, function(self, args) {","        unwrapType(origin, self, args).propagate(unwrapType(target, self, args));","      });","    } else if (effect.indexOf(\"call \") == 0) {","      var andRet = effect.indexOf(\"and return \", 5) == 5;","      var p = new TypeParser(effect, andRet ? 16 : 5);","      var getCallee = p.parseType(true), getSelf = null, getArgs = [];","      if (p.eat(\" this=\")) getSelf = p.parseType(true);","      while (p.eat(\" \")) getArgs.push(p.parseType(true));","      addEffect(fn, function(self, args) {","        var callee = unwrapType(getCallee, self, args);","        var slf = getSelf ? unwrapType(getSelf, self, args) : infer.ANull, as = [];","        for (var i = 0; i < getArgs.length; ++i) as.push(unwrapType(getArgs[i], self, args));","        var result = andRet ? new infer.AVal : infer.ANull;","        callee.propagate(new infer.IsCallee(slf, as, null, result));","        return result;","      }, andRet);","    } else if (m = effect.match(/^custom (\\S+)\\s*(.*)/)) {","      var customFunc = customFunctions[m[1]];","      if (customFunc) addEffect(fn, m[2] ? customFunc(m[2]) : customFunc);","    } else if (effect.indexOf(\"copy \") == 0) {","      var p = new TypeParser(effect, 5);","      var getFrom = p.parseType(true);","      p.eat(\" \");","      var getTo = p.parseType(true);","      addEffect(fn, function(self, args) {","        var from = unwrapType(getFrom, self, args), to = unwrapType(getTo, self, args);","        from.forAllProps(function(prop, val, local) {","          if (local && prop != \"<i>\")","            to.propagate(new infer.DefProp(prop, val));","        });","      });","    } else {","      throw new Error(\"Unknown effect type: \" + effect);","    }","  };","","  var currentTopScope;","","  var parsePath = exports.parsePath = function(path, scope) {","    var cx = infer.cx(), cached = cx.paths[path], origPath = path;","    if (cached != null) return cached;","    cx.paths[path] = infer.ANull;","","    var base = scope || currentTopScope || cx.topScope;","","    if (cx.localDefs) for (var name in cx.localDefs) {","      if (path.indexOf(name) == 0) {","        if (path == name) return cx.paths[path] = cx.localDefs[path];","        if (path.charAt(name.length) == \".\") {","          base = cx.localDefs[name];","          path = path.slice(name.length + 1);","          break;","        }","      }","    }","","    var result = descendProps(base, path.split(\".\"))","    // Uncomment this to get feedback on your poorly written .json files","    // if (result == infer.ANull) console.error(\"bad path: \" + origPath + \" (\" + cx.curOrigin + \")\")","    cx.paths[origPath] = result == infer.ANull ? null : result","    return result","  }","","  function descendProps(base, parts) {","    for (var i = 0; i < parts.length && base != infer.ANull; ++i) {","      var prop = parts[i];","      if (prop.charAt(0) == \"!\") {","        if (prop == \"!proto\") {","          base = (base instanceof infer.Obj && base.proto) || infer.ANull;","        } else {","          var fn = base.getFunctionType();","          if (!fn) {","            base = infer.ANull;","          } else if (prop == \"!ret\") {","            base = fn.retval && fn.retval.getType(false) || infer.ANull;","          } else {","            var arg = fn.args && fn.args[Number(prop.slice(1))];","            base = (arg && arg.getType(false)) || infer.ANull;","          }","        }","      } else if (base instanceof infer.Obj &&","                 (prop == \"prototype\" && base instanceof infer.Fn || base.hasProp(prop))) {","        var propVal = base.getProp(prop);","        if (!propVal || propVal.isEmpty())","          base = infer.ANull;","        else","          base = propVal.types[0];","      } else {","        base = infer.ANull;","      }","    }","    return base;","  }","","  function emptyObj(ctor) {","    var empty = Object.create(ctor.prototype);","    empty.props = Object.create(null);","    empty.isShell = true;","    return empty;","  }","","  function isSimpleAnnotation(spec) {","    if (!spec[\"!type\"] || /^(fn\\(|\\[|\\+)/.test(spec[\"!type\"])) return false;","    for (var prop in spec)","      if (prop != \"!type\" && prop != \"!doc\" && prop != \"!url\" && prop != \"!span\" && prop != \"!data\")","        return false;","    return true;","  }","","  function passOne(base, spec, path) {","    if (!base) {","      var tp = spec[\"!type\"];","      if (tp) {","        if (/^fn\\(/.test(tp)) base = emptyObj(infer.Fn);","        else if (tp.charAt(0) == \"[\") base = emptyObj(infer.Arr);","        else if (tp.charAt(0) == \"+\") base = emptyObj(infer.Obj)","        else throw new Error(\"Invalid !type spec: \" + tp);","      } else if (spec[\"!stdProto\"]) {","        base = infer.cx().protos[spec[\"!stdProto\"]];","      } else {","        base = emptyObj(infer.Obj);","      }","      base.name = path;","    }","","    for (var name in spec) if (hop(spec, name) && name.charCodeAt(0) != 33) {","      var inner = spec[name];","      if (typeof inner == \"string\" || isSimpleAnnotation(inner)) continue;","      var prop = base.defProp(name);","      passOne(prop.getObjType(), inner, path ? path + \".\" + name : name).propagate(prop);","    }","    return base;","  }","","  function passTwo(base, spec, path) {","    if (base.isShell) {","      delete base.isShell;","      var tp = spec[\"!type\"];","      if (tp) {","        parseType(tp, path, base);","      } else {","        var proto = spec[\"!proto\"] && parseType(spec[\"!proto\"]);","        infer.Obj.call(base, proto instanceof infer.Obj ? proto : true, path);","      }","    }","","    var effects = spec[\"!effects\"];","    if (effects && base instanceof infer.Fn) for (var i = 0; i < effects.length; ++i)","      parseEffect(effects[i], base);","    copyInfo(spec, base);","","    for (var name in spec) if (hop(spec, name) && name.charCodeAt(0) != 33) {","      var inner = spec[name], known = base.defProp(name), innerPath = path ? path + \".\" + name : name;","      if (typeof inner == \"string\") {","        if (known.isEmpty()) parseType(inner, innerPath).propagate(known);","      } else {","        if (!isSimpleAnnotation(inner))","          passTwo(known.getObjType(), inner, innerPath);","        else if (known.isEmpty())","          parseType(inner[\"!type\"], innerPath, null, true).propagate(known);","        else","          continue;","        if (inner[\"!doc\"]) known.doc = inner[\"!doc\"];","        if (inner[\"!url\"]) known.url = inner[\"!url\"];","        if (inner[\"!span\"]) known.span = inner[\"!span\"];","      }","    }","    return base;","  }","","  function copyInfo(spec, type) {","    if (spec[\"!doc\"]) type.doc = spec[\"!doc\"];","    if (spec[\"!url\"]) type.url = spec[\"!url\"];","    if (spec[\"!span\"]) type.span = spec[\"!span\"];","    if (spec[\"!data\"]) type.metaData = spec[\"!data\"];","  }","","  function doLoadEnvironment(data, scope) {","    var cx = infer.cx(), server = cx.parent","","    infer.addOrigin(cx.curOrigin = data[\"!name\"] || \"env#\" + cx.origins.length);","    cx.localDefs = cx.definitions[cx.curOrigin] = Object.create(null);","","    if (server) server.signal(\"preLoadDef\", data)","","    passOne(scope, data);","","    var def = data[\"!define\"];","    if (def) {","      for (var name in def) {","        var spec = def[name];","        cx.localDefs[name] = typeof spec == \"string\" ? parsePath(spec) : passOne(null, spec, name);","      }","      for (var name in def) {","        var spec = def[name];","        if (typeof spec != \"string\") passTwo(cx.localDefs[name], def[name], name);","      }","    }","","    passTwo(scope, data);","","    if (server) server.signal(\"postLoadDef\", data)","","    cx.curOrigin = cx.localDefs = null;","  }","","  exports.load = function(data, scope) {","    if (!scope) scope = infer.cx().topScope;","    var oldScope = currentTopScope;","    currentTopScope = scope;","    try {","      doLoadEnvironment(data, scope);","    } finally {","      currentTopScope = oldScope;","    }","  };","","  exports.parse = function(data, origin, path) {","    var cx = infer.cx();","    if (origin) {","      cx.origin = origin;","      cx.localDefs = cx.definitions[origin];","    }","","    try {","      if (typeof data == \"string\")","        return parseType(data, path);","      else","        return passTwo(passOne(null, data, path), data, path);","    } finally {","      if (origin) cx.origin = cx.localDefs = null;","    }","  };","","  // Used to register custom logic for more involved effect or type","  // computation.","  var customFunctions = Object.create(null);","  infer.registerFunction = function(name, f) { customFunctions[name] = f; };","","  var IsCreated = infer.constraint({","    construct: function(created, target, spec) {","      this.created = created;","      this.target = target;","      this.spec = spec;","    },","    addType: function(tp) {","      if (tp instanceof infer.Obj && this.created++ < 5) {","        var derived = new infer.Obj(tp), spec = this.spec;","        if (spec instanceof infer.AVal) spec = spec.getObjType(false);","        if (spec instanceof infer.Obj) for (var prop in spec.props) {","          var cur = spec.props[prop].types[0];","          var p = derived.defProp(prop);","          if (cur && cur instanceof infer.Obj && cur.props.value) {","            var vtp = cur.props.value.getType(false);","            if (vtp) p.addType(vtp);","          }","        }","        this.target.addType(derived);","      }","    }","  });","","  infer.registerFunction(\"Object_create\", function(_self, args, argNodes) {","    if (argNodes && argNodes.length && argNodes[0].type == \"Literal\" && argNodes[0].value == null)","      return new infer.Obj();","","    var result = new infer.AVal;","    if (args[0]) args[0].propagate(new IsCreated(0, result, args[1]));","    return result;","  });","","  var PropSpec = infer.constraint({","    construct: function(target) { this.target = target; },","    addType: function(tp) {","      if (!(tp instanceof infer.Obj)) return;","      if (tp.hasProp(\"value\"))","        tp.getProp(\"value\").propagate(this.target);","      else if (tp.hasProp(\"get\"))","        tp.getProp(\"get\").propagate(new infer.IsCallee(infer.ANull, [], null, this.target));","    }","  });","","  infer.registerFunction(\"Object_defineProperty\", function(_self, args, argNodes) {","    if (argNodes && argNodes.length >= 3 && argNodes[1].type == \"Literal\" &&","        typeof argNodes[1].value == \"string\") {","      var obj = args[0], connect = new infer.AVal;","      obj.propagate(new infer.DefProp(argNodes[1].value, connect, argNodes[1]));","      args[2].propagate(new PropSpec(connect));","    }","    return infer.ANull;","  });","","  infer.registerFunction(\"Object_defineProperties\", function(_self, args, argNodes) {","    if (args.length >= 2) {","      var obj = args[0];","      args[1].forAllProps(function(prop, val, local) {","        if (!local) return;","        var connect = new infer.AVal;","        obj.propagate(new infer.DefProp(prop, connect, argNodes && argNodes[1]));","        val.propagate(new PropSpec(connect));","      });","    }","    return infer.ANull;","  });","","  var IsBound = infer.constraint({","    construct: function(self, args, target) {","      this.self = self; this.args = args; this.target = target;","    },","    addType: function(tp) {","      if (!(tp instanceof infer.Fn)) return;","      this.target.addType(new infer.Fn(tp.name, infer.ANull, tp.args.slice(this.args.length),","                                       tp.argNames.slice(this.args.length), tp.retval, tp.generator));","      this.self.propagate(tp.self);","      for (var i = 0; i < Math.min(tp.args.length, this.args.length); ++i)","        this.args[i].propagate(tp.args[i]);","    }","  });","","  infer.registerFunction(\"Function_bind\", function(self, args) {","    if (!args.length) return infer.ANull;","    var result = new infer.AVal;","    self.propagate(new IsBound(args[0], args.slice(1), result));","    return result;","  });","","  infer.registerFunction(\"Array_ctor\", function(_self, args) {","    var arr = new infer.Arr;","    if (args.length != 1 || !args[0].hasType(infer.cx().num)) {","      var content = arr.getProp(\"<i>\");","      for (var i = 0; i < args.length; ++i) args[i].propagate(content);","    }","    return arr;","  });","","  function makePromise() {","    var defs = infer.cx().definitions.ecmascript","    return defs && new infer.Obj(defs[\"Promise.prototype\"])","  }","","  infer.registerFunction(\"Promise_ctor\", function(_self, args, argNodes) {","    var self = makePromise()","    if (!self || args.length < 1) return infer.ANull;","    var valProp = self.defProp(\":t\", argNodes && argNodes[0]);","    var valArg = new infer.AVal;","    valArg.propagate(valProp);","    var exec = new infer.Fn(\"execute\", infer.ANull, [valArg], [\"value\"], infer.ANull);","    var reject = infer.cx().definitions.ecmascript.Promise_reject;","    args[0].propagate(new infer.IsCallee(infer.ANull, [exec, reject], null, infer.ANull));","    return self;","  });","","  // Definition for Promise.resolve()","  // The behavior is different for Promise and non-Promise arguments, so we","  // need a custom definition to handle the different cases properly.","  infer.registerFunction(\"Promise_resolve\", function(_self, args, argNodes) {","    var self = makePromise()","    if (!self) return infer.ANull;","    if (args.length) {","      var valProp = self.defProp(\":t\", argNodes && argNodes[0]);","      var valArg = new infer.AVal;","      valArg.propagate(valProp);","      args[0].propagate(new PromiseResolvesTo(valArg));","    }","    return self;","  });","","  var PromiseResolvesTo = infer.constraint({","    construct: function(output) { this.output = output; },","    addType: function(tp) {","      if (tp.constructor == infer.Obj && tp.name == \"Promise\" && tp.hasProp(\":t\"))","        tp.getProp(\":t\").propagate(this.output);","      else","        tp.propagate(this.output);","    }","  });","","  var WG_PROMISE_KEEP_VALUE = 50;","","  infer.registerFunction(\"Promise_then\", function(self, args, argNodes) {","    var fn = args.length && args[0].getFunctionType();","    var defs = infer.cx().definitions.ecmascript","    if (!fn || !defs) return self;","","    var result = new infer.Obj(defs[\"Promise.prototype\"]);","    var value = result.defProp(\":t\", argNodes && argNodes[0]), ty;","    if (fn.retval.isEmpty() && (ty = self.getType()) instanceof infer.Obj && ty.hasProp(\":t\"))","      ty.getProp(\":t\").propagate(value, WG_PROMISE_KEEP_VALUE);","    fn.retval.propagate(new PromiseResolvesTo(value));","    return result;","  });","","  infer.registerFunction(\"getOwnPropertySymbols\", function(_self, args) {","    if (!args.length) return infer.ANull","    var result = new infer.AVal","    args[0].forAllProps(function(prop, _val, local) {","      if (local && prop.charAt(0) == \":\") result.addType(infer.getSymbol(prop.slice(1)))","    })","    return result","  })","","  infer.registerFunction(\"getSymbol\", function(_self, _args, argNodes) {","    if (argNodes && argNodes.length && argNodes[0].type == \"Literal\" && typeof argNodes[0].value == \"string\")","      return infer.getSymbol(argNodes[0].value)","    else","      return infer.ANull","  })","","  return exports;","});",""],"l":{"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"20":1,"21":0,"24":1,"25":0,"26":0,"27":0,"28":0,"31":1,"32":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"46":1,"47":0,"48":0,"49":0,"50":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"61":1,"62":0,"63":0,"66":1,"67":0,"68":0,"71":1,"72":0,"73":0,"74":0,"75":0,"77":0,"81":1,"83":0,"84":0,"85":0,"89":0,"90":0,"91":0,"94":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"105":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"126":0,"128":0,"130":0,"131":0,"133":0,"134":0,"135":0,"136":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"148":0,"149":0,"150":0,"151":0,"152":0,"155":0,"156":0,"157":0,"160":0,"161":0,"162":0,"164":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"178":0,"179":0,"180":0,"181":0,"182":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"195":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"207":0,"208":0,"209":0,"210":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"246":0,"248":0,"249":0,"251":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"262":0,"263":0,"266":0,"267":0,"268":0,"269":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"278":0,"279":0,"280":0,"284":1,"285":0,"286":0,"287":0,"291":1,"292":0,"293":0,"298":1,"299":0,"300":0,"301":0,"302":0,"305":1,"306":0,"307":0,"308":0,"309":0,"310":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"354":0,"358":1,"360":1,"361":0,"362":0,"363":0,"365":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"378":0,"381":0,"382":0,"385":1,"386":0,"387":0,"388":0,"389":0,"390":0,"392":0,"393":0,"394":0,"395":0,"396":0,"398":0,"399":0,"402":0,"404":0,"405":0,"406":0,"408":0,"410":0,"413":0,"416":1,"417":0,"418":0,"419":0,"420":0,"423":1,"424":0,"425":0,"426":0,"427":0,"428":0,"431":1,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"442":0,"444":0,"447":0,"448":0,"449":0,"450":0,"451":0,"453":0,"456":1,"457":0,"458":0,"459":0,"460":0,"461":0,"463":0,"464":0,"468":0,"469":0,"470":0,"471":0,"473":0,"474":0,"475":0,"476":0,"478":0,"479":0,"480":0,"481":0,"483":0,"484":0,"485":0,"486":0,"489":0,"492":1,"493":0,"494":0,"495":0,"496":0,"499":1,"500":0,"502":0,"503":0,"505":0,"507":0,"509":0,"510":0,"511":0,"512":0,"513":0,"515":0,"516":0,"517":0,"521":0,"523":0,"525":0,"528":1,"529":0,"530":0,"531":0,"532":0,"533":0,"535":0,"539":1,"540":0,"541":0,"542":0,"543":0,"546":0,"547":0,"548":0,"550":0,"552":0,"558":1,"559":20,"561":1,"563":0,"564":0,"565":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"579":0,"584":1,"585":0,"586":0,"588":0,"589":0,"590":0,"593":1,"594":0,"596":0,"597":0,"598":0,"599":0,"600":0,"604":1,"605":0,"607":0,"608":0,"609":0,"611":0,"614":1,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"624":0,"627":1,"629":0,"632":0,"633":0,"635":0,"636":0,"637":0,"641":1,"642":0,"643":0,"644":0,"645":0,"648":1,"649":0,"650":0,"651":0,"652":0,"654":0,"657":1,"658":0,"659":0,"662":1,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"677":1,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"686":0,"689":1,"690":0,"692":0,"693":0,"695":0,"699":1,"701":1,"702":0,"703":0,"704":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"714":1,"715":0,"716":0,"717":0,"718":0,"720":0,"723":1,"724":0,"725":0,"727":0,"730":1}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/signal.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/signal.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":3,"36":3,"37":3,"38":3,"39":3,"40":3},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":3},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":21}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":9},"end":{"line":7,"column":27}}},"3":{"name":"on","line":9,"loc":{"start":{"line":9,"column":2},"end":{"line":9,"column":23}}},"4":{"name":"off","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":24}}},"5":{"name":"getHandlers","line":21,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":38}}},"6":{"name":"signal","line":26,"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":40}}},"7":{"name":"signalReturnFirst","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":51}}},"8":{"name":"hasHandler","line":39,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":28}}},"9":{"name":"(anonymous_9)","line":44,"loc":{"start":{"line":44,"column":18},"end":{"line":44,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":51,"column":3}},"2":{"start":{"line":2,"column":2},"end":{"line":3,"column":24}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":24}},"4":{"start":{"line":4,"column":2},"end":{"line":5,"column":36}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":2},"end":{"line":6,"column":51}},"7":{"start":{"line":9,"column":2},"end":{"line":12,"column":3}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":76}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":54}},"10":{"start":{"line":14,"column":2},"end":{"line":18,"column":3}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":53}},"12":{"start":{"line":16,"column":4},"end":{"line":17,"column":51}},"13":{"start":{"line":16,"column":13},"end":{"line":17,"column":51}},"14":{"start":{"line":17,"column":6},"end":{"line":17,"column":51}},"15":{"start":{"line":17,"column":25},"end":{"line":17,"column":42}},"16":{"start":{"line":17,"column":43},"end":{"line":17,"column":49}},"17":{"start":{"line":20,"column":2},"end":{"line":20,"column":21}},"18":{"start":{"line":21,"column":2},"end":{"line":24,"column":3}},"19":{"start":{"line":22,"column":4},"end":{"line":22,"column":59}},"20":{"start":{"line":23,"column":4},"end":{"line":23,"column":55}},"21":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"22":{"start":{"line":27,"column":4},"end":{"line":27,"column":37}},"23":{"start":{"line":28,"column":4},"end":{"line":28,"column":74}},"24":{"start":{"line":28,"column":41},"end":{"line":28,"column":74}},"25":{"start":{"line":31,"column":2},"end":{"line":37,"column":3}},"26":{"start":{"line":32,"column":4},"end":{"line":32,"column":37}},"27":{"start":{"line":33,"column":4},"end":{"line":36,"column":5}},"28":{"start":{"line":34,"column":6},"end":{"line":34,"column":52}},"29":{"start":{"line":35,"column":6},"end":{"line":35,"column":31}},"30":{"start":{"line":35,"column":18},"end":{"line":35,"column":31}},"31":{"start":{"line":39,"column":2},"end":{"line":42,"column":3}},"32":{"start":{"line":40,"column":4},"end":{"line":40,"column":52}},"33":{"start":{"line":41,"column":4},"end":{"line":41,"column":39}},"34":{"start":{"line":44,"column":2},"end":{"line":50,"column":4}},"35":{"start":{"line":45,"column":4},"end":{"line":45,"column":16}},"36":{"start":{"line":45,"column":17},"end":{"line":45,"column":31}},"37":{"start":{"line":46,"column":4},"end":{"line":46,"column":24}},"38":{"start":{"line":47,"column":4},"end":{"line":47,"column":46}},"39":{"start":{"line":48,"column":4},"end":{"line":48,"column":32}},"40":{"start":{"line":49,"column":4},"end":{"line":49,"column":15}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":61}}]},"3":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":6},"end":{"line":4,"column":33}},{"start":{"line":4,"column":37},"end":{"line":4,"column":47}}]},"5":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":7},"end":{"line":6,"column":16}},{"start":{"line":6,"column":21},"end":{"line":6,"column":35}}]},"6":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":19},"end":{"line":10,"column":33}},{"start":{"line":10,"column":38},"end":{"line":10,"column":74}}]},"7":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":5},"end":{"line":11,"column":19}},{"start":{"line":11,"column":24},"end":{"line":11,"column":43}}]},"8":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":14},"end":{"line":15,"column":28}},{"start":{"line":15,"column":32},"end":{"line":15,"column":52}}]},"9":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"10":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":6}},{"start":{"line":17,"column":6},"end":{"line":17,"column":6}}]},"11":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":14},"end":{"line":22,"column":31}},{"start":{"line":22,"column":35},"end":{"line":22,"column":58}}]},"12":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":31},"end":{"line":23,"column":42}},{"start":{"line":23,"column":45},"end":{"line":23,"column":55}}]},"13":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":14}},{"start":{"line":23,"column":18},"end":{"line":23,"column":28}}]},"14":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"15":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":14},"end":{"line":40,"column":28}},{"start":{"line":40,"column":32},"end":{"line":40,"column":52}}]},"16":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":14}},{"start":{"line":41,"column":18},"end":{"line":41,"column":32}},{"start":{"line":41,"column":36},"end":{"line":41,"column":39}}]}},"code":["(function(root, mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(exports);","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"exports\"], mod);","  mod((root.tern || (root.tern = {})).signal = {}); // Plain browser env","})(this, function(exports) {","","  function on(type, f) {","    var handlers = this._handlers || (this._handlers = Object.create(null));","    (handlers[type] || (handlers[type] = [])).push(f);","  }","","  function off(type, f) {","    var arr = this._handlers && this._handlers[type];","    if (arr) for (var i = 0; i < arr.length; ++i)","      if (arr[i] == f) { arr.splice(i, 1); break; }","  }","","  var noHandlers = []","  function getHandlers(emitter, type) {","    var arr = emitter._handlers && emitter._handlers[type];","    return arr && arr.length ? arr.slice() : noHandlers","  }","","  function signal(type, a1, a2, a3, a4) {","    var arr = getHandlers(this, type)","    for (var i = 0; i < arr.length; ++i) arr[i].call(this, a1, a2, a3, a4)","  }","","  function signalReturnFirst(type, a1, a2, a3, a4) {","    var arr = getHandlers(this, type)","    for (var i = 0; i < arr.length; ++i) {","      var result = arr[i].call(this, a1, a2, a3, a4)","      if (result) return result","    }","  }","","  function hasHandler(type) {","    var arr = this._handlers && this._handlers[type]","    return arr && arr.length > 0 && arr","  }","","  exports.mixin = function(obj) {","    obj.on = on; obj.off = off;","    obj.signal = signal;","    obj.signalReturnFirst = signalReturnFirst;","    obj.hasHandler = hasHandler;","    return obj;","  };","});",""],"l":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"9":1,"10":0,"11":0,"14":1,"15":0,"16":0,"17":0,"20":1,"21":1,"22":0,"23":0,"26":1,"27":0,"28":0,"31":1,"32":0,"33":0,"34":0,"35":0,"39":1,"40":0,"41":0,"44":1,"45":3,"46":3,"47":3,"48":3,"49":3}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/comment.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/comment.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":15}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":21}}},"3":{"name":"isSpace","line":8,"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":23}}},"4":{"name":"onOwnLine","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":32}}},"5":{"name":"(anonymous_5)","line":22,"loc":{"start":{"line":22,"column":27},"end":{"line":22,"column":47}}},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":25},"end":{"line":65,"column":45}}},"7":{"name":"(anonymous_7)","line":83,"loc":{"start":{"line":83,"column":33},"end":{"line":83,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":87,"column":3}},"2":{"start":{"line":2,"column":2},"end":{"line":3,"column":24}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":24}},"4":{"start":{"line":4,"column":2},"end":{"line":5,"column":36}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":2},"end":{"line":6,"column":43}},"7":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":58}},"9":{"start":{"line":12,"column":2},"end":{"line":19,"column":3}},"10":{"start":{"line":13,"column":4},"end":{"line":17,"column":5}},"11":{"start":{"line":14,"column":6},"end":{"line":14,"column":40}},"12":{"start":{"line":15,"column":6},"end":{"line":15,"column":26}},"13":{"start":{"line":15,"column":20},"end":{"line":15,"column":26}},"14":{"start":{"line":16,"column":6},"end":{"line":16,"column":37}},"15":{"start":{"line":16,"column":24},"end":{"line":16,"column":37}},"16":{"start":{"line":18,"column":4},"end":{"line":18,"column":16}},"17":{"start":{"line":22,"column":2},"end":{"line":63,"column":4}},"18":{"start":{"line":23,"column":4},"end":{"line":23,"column":55}},"19":{"start":{"line":24,"column":4},"end":{"line":61,"column":5}},"20":{"start":{"line":24,"column":9},"end":{"line":61,"column":5}},"21":{"start":{"line":25,"column":6},"end":{"line":25,"column":42}},"22":{"start":{"line":26,"column":6},"end":{"line":60,"column":7}},"23":{"start":{"line":27,"column":8},"end":{"line":44,"column":9}},"24":{"start":{"line":28,"column":10},"end":{"line":28,"column":43}},"25":{"start":{"line":29,"column":10},"end":{"line":43,"column":11}},"26":{"start":{"line":30,"column":12},"end":{"line":30,"column":54}},"27":{"start":{"line":30,"column":44},"end":{"line":30,"column":54}},"28":{"start":{"line":31,"column":12},"end":{"line":31,"column":48}},"29":{"start":{"line":32,"column":12},"end":{"line":33,"column":58}},"30":{"start":{"line":32,"column":49},"end":{"line":32,"column":86}},"31":{"start":{"line":33,"column":17},"end":{"line":33,"column":58}},"32":{"start":{"line":34,"column":12},"end":{"line":34,"column":36}},"33":{"start":{"line":35,"column":12},"end":{"line":35,"column":27}},"34":{"start":{"line":36,"column":12},"end":{"line":36,"column":27}},"35":{"start":{"line":37,"column":12},"end":{"line":37,"column":18}},"36":{"start":{"line":38,"column":17},"end":{"line":43,"column":11}},"37":{"start":{"line":39,"column":12},"end":{"line":39,"column":57}},"38":{"start":{"line":39,"column":47},"end":{"line":39,"column":57}},"39":{"start":{"line":40,"column":12},"end":{"line":40,"column":18}},"40":{"start":{"line":41,"column":17},"end":{"line":43,"column":11}},"41":{"start":{"line":42,"column":12},"end":{"line":42,"column":28}},"42":{"start":{"line":45,"column":13},"end":{"line":60,"column":7}},"43":{"start":{"line":46,"column":8},"end":{"line":54,"column":9}},"44":{"start":{"line":47,"column":10},"end":{"line":53,"column":11}},"45":{"start":{"line":48,"column":12},"end":{"line":48,"column":54}},"46":{"start":{"line":48,"column":44},"end":{"line":48,"column":54}},"47":{"start":{"line":49,"column":12},"end":{"line":49,"column":71}},"48":{"start":{"line":50,"column":12},"end":{"line":50,"column":37}},"49":{"start":{"line":51,"column":12},"end":{"line":51,"column":27}},"50":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"51":{"start":{"line":55,"column":8},"end":{"line":55,"column":23}},"52":{"start":{"line":56,"column":13},"end":{"line":60,"column":7}},"53":{"start":{"line":57,"column":8},"end":{"line":57,"column":14}},"54":{"start":{"line":59,"column":8},"end":{"line":59,"column":14}},"55":{"start":{"line":62,"column":4},"end":{"line":62,"column":17}},"56":{"start":{"line":65,"column":2},"end":{"line":81,"column":4}},"57":{"start":{"line":66,"column":4},"end":{"line":80,"column":5}},"58":{"start":{"line":67,"column":6},"end":{"line":67,"column":38}},"59":{"start":{"line":68,"column":6},"end":{"line":79,"column":7}},"60":{"start":{"line":69,"column":8},"end":{"line":69,"column":50}},"61":{"start":{"line":70,"column":8},"end":{"line":75,"column":17}},"62":{"start":{"line":71,"column":10},"end":{"line":71,"column":44}},"63":{"start":{"line":72,"column":13},"end":{"line":75,"column":17}},"64":{"start":{"line":73,"column":10},"end":{"line":73,"column":44}},"65":{"start":{"line":75,"column":10},"end":{"line":75,"column":17}},"66":{"start":{"line":76,"column":8},"end":{"line":76,"column":64}},"67":{"start":{"line":77,"column":13},"end":{"line":79,"column":7}},"68":{"start":{"line":78,"column":8},"end":{"line":78,"column":14}},"69":{"start":{"line":83,"column":2},"end":{"line":86,"column":4}},"70":{"start":{"line":84,"column":4},"end":{"line":84,"column":74}},"71":{"start":{"line":84,"column":47},"end":{"line":84,"column":74}},"72":{"start":{"line":85,"column":4},"end":{"line":85,"column":74}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":61}}]},"3":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":6},"end":{"line":4,"column":33}},{"start":{"line":4,"column":37},"end":{"line":4,"column":47}}]},"5":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":18}},{"start":{"line":6,"column":23},"end":{"line":6,"column":40}}]},"6":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":12},"end":{"line":9,"column":19}},{"start":{"line":9,"column":23},"end":{"line":9,"column":29}},{"start":{"line":9,"column":34},"end":{"line":9,"column":43}},{"start":{"line":9,"column":47},"end":{"line":9,"column":57}}]},"7":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":6}},{"start":{"line":15,"column":6},"end":{"line":15,"column":6}}]},"8":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":6}},{"start":{"line":16,"column":6},"end":{"line":16,"column":6}}]},"9":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":6}},{"start":{"line":26,"column":6},"end":{"line":26,"column":6}}]},"10":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":10},"end":{"line":29,"column":10}},{"start":{"line":29,"column":10},"end":{"line":29,"column":10}}]},"11":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":14},"end":{"line":29,"column":24}},{"start":{"line":29,"column":28},"end":{"line":29,"column":59}}]},"12":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"13":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":12}},{"start":{"line":32,"column":12},"end":{"line":32,"column":12}}]},"14":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":27}},{"start":{"line":32,"column":31},"end":{"line":32,"column":47}}]},"15":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":23}},{"start":{"line":33,"column":28},"end":{"line":33,"column":38}}]},"16":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":17},"end":{"line":38,"column":17}},{"start":{"line":38,"column":17},"end":{"line":38,"column":17}}]},"17":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"18":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":25}},{"start":{"line":39,"column":29},"end":{"line":39,"column":45}}]},"19":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":17},"end":{"line":41,"column":17}},{"start":{"line":41,"column":17},"end":{"line":41,"column":17}}]},"20":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":21},"end":{"line":41,"column":30}},{"start":{"line":41,"column":34},"end":{"line":41,"column":48}}]},"21":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":13},"end":{"line":45,"column":13}},{"start":{"line":45,"column":13},"end":{"line":45,"column":13}}]},"22":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":17},"end":{"line":45,"column":27}},{"start":{"line":45,"column":31},"end":{"line":45,"column":61}}]},"23":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":10},"end":{"line":47,"column":10}},{"start":{"line":47,"column":10},"end":{"line":47,"column":10}}]},"24":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":14},"end":{"line":47,"column":45}},{"start":{"line":47,"column":49},"end":{"line":47,"column":80}}]},"25":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":12}},{"start":{"line":48,"column":12},"end":{"line":48,"column":12}}]},"26":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":18}},{"start":{"line":49,"column":23},"end":{"line":49,"column":33}}]},"27":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":13},"end":{"line":56,"column":13}},{"start":{"line":56,"column":13},"end":{"line":56,"column":13}}]},"28":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"29":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]},"30":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":13},"end":{"line":72,"column":13}},{"start":{"line":72,"column":13},"end":{"line":72,"column":13}}]},"31":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":45},"end":{"line":76,"column":56}},{"start":{"line":76,"column":59},"end":{"line":76,"column":62}}]},"32":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":13},"end":{"line":77,"column":13}},{"start":{"line":77,"column":13},"end":{"line":77,"column":13}}]},"33":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]}},"code":["(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(exports);","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"exports\"], mod);","  mod(tern.comment || (tern.comment = {}));","})(function(exports) {","  function isSpace(ch) {","    return (ch < 14 && ch > 8) || ch === 32 || ch === 160;","  }","","  function onOwnLine(text, pos) {","    for (; pos > 0; --pos) {","      var ch = text.charCodeAt(pos - 1);","      if (ch == 10) break;","      if (!isSpace(ch)) return false;","    }","    return true;","  }","","  // Gather comments directly before a function","  exports.commentsBefore = function(text, pos) {","    var found = null, emptyLines = 0, topIsLineComment;","    out: while (pos > 0) {","      var prev = text.charCodeAt(pos - 1);","      if (prev == 10) {","        for (var scan = --pos, sawNonWS = false; scan > 0; --scan) {","          prev = text.charCodeAt(scan - 1);","          if (prev == 47 && text.charCodeAt(scan - 2) == 47) {","            if (!onOwnLine(text, scan - 2)) break out;","            var content = text.slice(scan, pos);","            if (!emptyLines && topIsLineComment) found[0] = content + \"\\n\" + found[0];","            else (found || (found = [])).unshift(content);","            topIsLineComment = true;","            emptyLines = 0;","            pos = scan - 2;","            break;","          } else if (prev == 10) {","            if (!sawNonWS && ++emptyLines > 1) break out;","            break;","          } else if (!sawNonWS && !isSpace(prev)) {","            sawNonWS = true;","          }","        }","      } else if (prev == 47 && text.charCodeAt(pos - 2) == 42) {","        for (var scan = pos - 2; scan > 1; --scan) {","          if (text.charCodeAt(scan - 1) == 42 && text.charCodeAt(scan - 2) == 47) {","            if (!onOwnLine(text, scan - 2)) break out;","            (found || (found = [])).unshift(text.slice(scan, pos - 2));","            topIsLineComment = false;","            emptyLines = 0;","            break;","          }","        }","        pos = scan - 2;","      } else if (isSpace(prev)) {","        --pos;","      } else {","        break;","      }","    }","    return found;","  };","","  exports.commentAfter = function(text, pos) {","    while (pos < text.length) {","      var next = text.charCodeAt(pos);","      if (next == 47) {","        var after = text.charCodeAt(pos + 1), end;","        if (after == 47) // line comment","          end = text.indexOf(\"\\n\", pos + 2);","        else if (after == 42) // block comment","          end = text.indexOf(\"*/\", pos + 2);","        else","          return;","        return text.slice(pos + 2, end < 0 ? text.length : end);","      } else if (isSpace(next)) {","        ++pos;","      }","    }","  };","","  exports.ensureCommentsBefore = function(text, node) {","    if (node.hasOwnProperty(\"commentsBefore\")) return node.commentsBefore;","    return node.commentsBefore = exports.commentsBefore(text, node.start);","  };","});",""],"l":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"8":1,"9":0,"12":1,"13":0,"14":0,"15":0,"16":0,"18":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"55":0,"56":0,"57":0,"59":0,"62":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"75":0,"76":0,"77":0,"78":0,"83":1,"84":0,"85":0}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/condense.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/lib/condense.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":1,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":1,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":1,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":1,"199":0,"200":1,"201":0,"202":1,"203":0,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":1,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0,0,0],"30":[0,0,0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":1},"end":{"line":10,"column":21}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":9},"end":{"line":16,"column":34}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":21},"end":{"line":19,"column":54}}},"4":{"name":"State","line":47,"loc":{"start":{"line":47,"column":2},"end":{"line":47,"column":41}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":63},"end":{"line":50,"column":74}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":29},"end":{"line":62,"column":46}}},"7":{"name":"(anonymous_7)","line":66,"loc":{"start":{"line":66,"column":28},"end":{"line":66,"column":43}}},"8":{"name":"pathLen","line":77,"loc":{"start":{"line":77,"column":2},"end":{"line":77,"column":25}}},"9":{"name":"hop","line":86,"loc":{"start":{"line":86,"column":2},"end":{"line":86,"column":26}}},"10":{"name":"isSimpleInstance","line":90,"loc":{"start":{"line":90,"column":2},"end":{"line":90,"column":31}}},"11":{"name":"reach","line":95,"loc":{"start":{"line":95,"column":2},"end":{"line":95,"column":48}}},"12":{"name":"reachByName","line":125,"loc":{"start":{"line":125,"column":2},"end":{"line":125,"column":46}}},"13":{"name":"(anonymous_13)","line":130,"loc":{"start":{"line":130,"column":33},"end":{"line":130,"column":44}}},"14":{"name":"(anonymous_14)","line":132,"loc":{"start":{"line":132,"column":32},"end":{"line":132,"column":64}}},"15":{"name":"(anonymous_15)","line":143,"loc":{"start":{"line":143,"column":31},"end":{"line":143,"column":63}}},"16":{"name":"(anonymous_16)","line":153,"loc":{"start":{"line":153,"column":32},"end":{"line":153,"column":64}}},"17":{"name":"patchUpSimpleInstance","line":172,"loc":{"start":{"line":172,"column":2},"end":{"line":172,"column":45}}},"18":{"name":"createPath","line":183,"loc":{"start":{"line":183,"column":2},"end":{"line":183,"column":36}}},"19":{"name":"store","line":200,"loc":{"start":{"line":200,"column":2},"end":{"line":200,"column":35}}},"20":{"name":"storeAlt","line":213,"loc":{"start":{"line":213,"column":2},"end":{"line":213,"column":39}}},"21":{"name":"typeName","line":223,"loc":{"start":{"line":223,"column":2},"end":{"line":223,"column":27}}},"22":{"name":"(anonymous_22)","line":235,"loc":{"start":{"line":235,"column":34},"end":{"line":235,"column":45}}},"23":{"name":"(anonymous_23)","line":245,"loc":{"start":{"line":245,"column":25},"end":{"line":245,"column":36}}},"24":{"name":"(anonymous_24)","line":247,"loc":{"start":{"line":247,"column":34},"end":{"line":247,"column":45}}},"25":{"name":"(anonymous_25)","line":249,"loc":{"start":{"line":249,"column":33},"end":{"line":249,"column":44}}},"26":{"name":"(anonymous_26)","line":251,"loc":{"start":{"line":251,"column":33},"end":{"line":251,"column":44}}},"27":{"name":"(anonymous_27)","line":259,"loc":{"start":{"line":259,"column":32},"end":{"line":259,"column":43}}},"28":{"name":"(anonymous_28)","line":275,"loc":{"start":{"line":275,"column":33},"end":{"line":275,"column":44}}},"29":{"name":"simplify","line":281,"loc":{"start":{"line":281,"column":2},"end":{"line":281,"column":32}}},"30":{"name":"sortObject","line":294,"loc":{"start":{"line":294,"column":2},"end":{"line":294,"column":27}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":304,"column":3}},"2":{"start":{"line":11,"column":2},"end":{"line":12,"column":44}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":44}},"4":{"start":{"line":13,"column":2},"end":{"line":14,"column":47}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":47}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":43}},"7":{"start":{"line":19,"column":2},"end":{"line":45,"column":4}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":56}},"9":{"start":{"line":20,"column":36},"end":{"line":20,"column":56}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":70}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":50}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":37}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":41}},"14":{"start":{"line":27,"column":4},"end":{"line":28,"column":50}},"15":{"start":{"line":28,"column":6},"end":{"line":28,"column":50}},"16":{"start":{"line":29,"column":4},"end":{"line":30,"column":53}},"17":{"start":{"line":30,"column":6},"end":{"line":30,"column":53}},"18":{"start":{"line":32,"column":4},"end":{"line":32,"column":51}},"19":{"start":{"line":34,"column":4},"end":{"line":35,"column":74}},"20":{"start":{"line":35,"column":6},"end":{"line":35,"column":74}},"21":{"start":{"line":36,"column":4},"end":{"line":37,"column":50}},"22":{"start":{"line":37,"column":6},"end":{"line":37,"column":50}},"23":{"start":{"line":38,"column":4},"end":{"line":38,"column":23}},"24":{"start":{"line":39,"column":4},"end":{"line":39,"column":71}},"25":{"start":{"line":39,"column":48},"end":{"line":39,"column":62}},"26":{"start":{"line":39,"column":63},"end":{"line":39,"column":69}},"27":{"start":{"line":40,"column":4},"end":{"line":40,"column":48}},"28":{"start":{"line":40,"column":17},"end":{"line":40,"column":48}},"29":{"start":{"line":42,"column":4},"end":{"line":42,"column":46}},"30":{"start":{"line":44,"column":4},"end":{"line":44,"column":60}},"31":{"start":{"line":47,"column":2},"end":{"line":60,"column":3}},"32":{"start":{"line":48,"column":4},"end":{"line":48,"column":27}},"33":{"start":{"line":49,"column":4},"end":{"line":49,"column":25}},"34":{"start":{"line":50,"column":4},"end":{"line":50,"column":77}},"35":{"start":{"line":51,"column":4},"end":{"line":51,"column":31}},"36":{"start":{"line":52,"column":4},"end":{"line":53,"column":85}},"37":{"start":{"line":53,"column":6},"end":{"line":53,"column":85}},"38":{"start":{"line":54,"column":4},"end":{"line":54,"column":49}},"39":{"start":{"line":55,"column":4},"end":{"line":55,"column":27}},"40":{"start":{"line":56,"column":4},"end":{"line":56,"column":37}},"41":{"start":{"line":57,"column":4},"end":{"line":57,"column":40}},"42":{"start":{"line":58,"column":4},"end":{"line":58,"column":22}},"43":{"start":{"line":59,"column":4},"end":{"line":59,"column":37}},"44":{"start":{"line":62,"column":2},"end":{"line":64,"column":4}},"45":{"start":{"line":63,"column":4},"end":{"line":63,"column":45}},"46":{"start":{"line":66,"column":2},"end":{"line":75,"column":4}},"47":{"start":{"line":67,"column":4},"end":{"line":67,"column":80}},"48":{"start":{"line":67,"column":68},"end":{"line":67,"column":80}},"49":{"start":{"line":68,"column":4},"end":{"line":68,"column":36}},"50":{"start":{"line":68,"column":19},"end":{"line":68,"column":36}},"51":{"start":{"line":69,"column":4},"end":{"line":69,"column":35}},"52":{"start":{"line":70,"column":4},"end":{"line":70,"column":85}},"53":{"start":{"line":70,"column":73},"end":{"line":70,"column":85}},"54":{"start":{"line":71,"column":4},"end":{"line":71,"column":65}},"55":{"start":{"line":72,"column":4},"end":{"line":72,"column":69}},"56":{"start":{"line":73,"column":4},"end":{"line":74,"column":50}},"57":{"start":{"line":77,"column":2},"end":{"line":84,"column":3}},"58":{"start":{"line":78,"column":4},"end":{"line":78,"column":30}},"59":{"start":{"line":79,"column":4},"end":{"line":82,"column":5}},"60":{"start":{"line":80,"column":6},"end":{"line":80,"column":20}},"61":{"start":{"line":81,"column":6},"end":{"line":81,"column":46}},"62":{"start":{"line":83,"column":4},"end":{"line":83,"column":15}},"63":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"64":{"start":{"line":87,"column":4},"end":{"line":87,"column":59}},"65":{"start":{"line":90,"column":2},"end":{"line":93,"column":3}},"66":{"start":{"line":91,"column":4},"end":{"line":92,"column":36}},"67":{"start":{"line":95,"column":2},"end":{"line":124,"column":3}},"68":{"start":{"line":96,"column":4},"end":{"line":96,"column":37}},"69":{"start":{"line":97,"column":4},"end":{"line":97,"column":24}},"70":{"start":{"line":97,"column":17},"end":{"line":97,"column":24}},"71":{"start":{"line":98,"column":4},"end":{"line":98,"column":62}},"72":{"start":{"line":99,"column":4},"end":{"line":104,"column":5}},"73":{"start":{"line":100,"column":6},"end":{"line":100,"column":51}},"74":{"start":{"line":102,"column":6},"end":{"line":102,"column":44}},"75":{"start":{"line":102,"column":37},"end":{"line":102,"column":44}},"76":{"start":{"line":103,"column":6},"end":{"line":103,"column":38}},"77":{"start":{"line":105,"column":4},"end":{"line":105,"column":69}},"78":{"start":{"line":106,"column":4},"end":{"line":106,"column":66}},"79":{"start":{"line":107,"column":4},"end":{"line":123,"column":5}},"80":{"start":{"line":108,"column":6},"end":{"line":108,"column":65}},"81":{"start":{"line":108,"column":43},"end":{"line":108,"column":65}},"82":{"start":{"line":109,"column":6},"end":{"line":120,"column":7}},"83":{"start":{"line":110,"column":8},"end":{"line":110,"column":40}},"84":{"start":{"line":111,"column":8},"end":{"line":114,"column":37}},"85":{"start":{"line":112,"column":10},"end":{"line":112,"column":38}},"86":{"start":{"line":113,"column":10},"end":{"line":113,"column":43}},"87":{"start":{"line":114,"column":15},"end":{"line":114,"column":37}},"88":{"start":{"line":115,"column":8},"end":{"line":115,"column":131}},"89":{"start":{"line":116,"column":8},"end":{"line":116,"column":107}},"90":{"start":{"line":117,"column":8},"end":{"line":117,"column":36}},"91":{"start":{"line":118,"column":8},"end":{"line":118,"column":77}},"92":{"start":{"line":119,"column":8},"end":{"line":119,"column":36}},"93":{"start":{"line":122,"column":6},"end":{"line":122,"column":53}},"94":{"start":{"line":122,"column":20},"end":{"line":122,"column":53}},"95":{"start":{"line":125,"column":2},"end":{"line":128,"column":3}},"96":{"start":{"line":126,"column":4},"end":{"line":126,"column":30}},"97":{"start":{"line":127,"column":4},"end":{"line":127,"column":49}},"98":{"start":{"line":127,"column":14},"end":{"line":127,"column":49}},"99":{"start":{"line":130,"column":2},"end":{"line":130,"column":59}},"100":{"start":{"line":130,"column":45},"end":{"line":130,"column":57}},"101":{"start":{"line":132,"column":2},"end":{"line":141,"column":4}},"102":{"start":{"line":133,"column":4},"end":{"line":133,"column":29}},"103":{"start":{"line":133,"column":18},"end":{"line":133,"column":29}},"104":{"start":{"line":134,"column":4},"end":{"line":139,"column":5}},"105":{"start":{"line":135,"column":6},"end":{"line":136,"column":68}},"106":{"start":{"line":136,"column":8},"end":{"line":136,"column":68}},"107":{"start":{"line":138,"column":6},"end":{"line":138,"column":58}},"108":{"start":{"line":140,"column":4},"end":{"line":140,"column":16}},"109":{"start":{"line":143,"column":2},"end":{"line":151,"column":4}},"110":{"start":{"line":144,"column":4},"end":{"line":144,"column":66}},"111":{"start":{"line":145,"column":4},"end":{"line":149,"column":5}},"112":{"start":{"line":146,"column":6},"end":{"line":147,"column":56}},"113":{"start":{"line":147,"column":8},"end":{"line":147,"column":56}},"114":{"start":{"line":148,"column":6},"end":{"line":148,"column":52}},"115":{"start":{"line":150,"column":4},"end":{"line":150,"column":16}},"116":{"start":{"line":153,"column":2},"end":{"line":170,"column":4}},"117":{"start":{"line":154,"column":4},"end":{"line":159,"column":5}},"118":{"start":{"line":155,"column":6},"end":{"line":155,"column":70}},"119":{"start":{"line":155,"column":45},"end":{"line":155,"column":70}},"120":{"start":{"line":156,"column":6},"end":{"line":156,"column":18}},"121":{"start":{"line":157,"column":11},"end":{"line":159,"column":5}},"122":{"start":{"line":158,"column":6},"end":{"line":158,"column":47}},"123":{"start":{"line":160,"column":4},"end":{"line":160,"column":25}},"124":{"start":{"line":161,"column":4},"end":{"line":164,"column":5}},"125":{"start":{"line":162,"column":6},"end":{"line":162,"column":49}},"126":{"start":{"line":163,"column":6},"end":{"line":163,"column":22}},"127":{"start":{"line":165,"column":4},"end":{"line":168,"column":5}},"128":{"start":{"line":166,"column":6},"end":{"line":166,"column":30}},"129":{"start":{"line":167,"column":6},"end":{"line":167,"column":19}},"130":{"start":{"line":169,"column":4},"end":{"line":169,"column":16}},"131":{"start":{"line":172,"column":2},"end":{"line":181,"column":3}},"132":{"start":{"line":173,"column":4},"end":{"line":173,"column":38}},"133":{"start":{"line":174,"column":4},"end":{"line":178,"column":5}},"134":{"start":{"line":175,"column":6},"end":{"line":175,"column":36}},"135":{"start":{"line":177,"column":6},"end":{"line":177,"column":22}},"136":{"start":{"line":179,"column":4},"end":{"line":180,"column":48}},"137":{"start":{"line":180,"column":6},"end":{"line":180,"column":48}},"138":{"start":{"line":183,"column":2},"end":{"line":198,"column":3}},"139":{"start":{"line":184,"column":4},"end":{"line":184,"column":60}},"140":{"start":{"line":185,"column":4},"end":{"line":196,"column":5}},"141":{"start":{"line":186,"column":6},"end":{"line":186,"column":26}},"142":{"start":{"line":187,"column":6},"end":{"line":187,"column":45}},"143":{"start":{"line":188,"column":6},"end":{"line":188,"column":33}},"144":{"start":{"line":189,"column":6},"end":{"line":195,"column":7}},"145":{"start":{"line":190,"column":8},"end":{"line":191,"column":36}},"146":{"start":{"line":190,"column":29},"end":{"line":190,"column":47}},"147":{"start":{"line":191,"column":13},"end":{"line":191,"column":36}},"148":{"start":{"line":193,"column":8},"end":{"line":194,"column":36}},"149":{"start":{"line":193,"column":33},"end":{"line":193,"column":51}},"150":{"start":{"line":194,"column":13},"end":{"line":194,"column":36}},"151":{"start":{"line":197,"column":4},"end":{"line":197,"column":16}},"152":{"start":{"line":200,"column":2},"end":{"line":211,"column":3}},"153":{"start":{"line":201,"column":4},"end":{"line":201,"column":35}},"154":{"start":{"line":202,"column":4},"end":{"line":207,"column":5}},"155":{"start":{"line":203,"column":6},"end":{"line":203,"column":26}},"156":{"start":{"line":204,"column":11},"end":{"line":207,"column":5}},"157":{"start":{"line":205,"column":6},"end":{"line":205,"column":48}},"158":{"start":{"line":206,"column":6},"end":{"line":206,"column":54}},"159":{"start":{"line":206,"column":28},"end":{"line":206,"column":54}},"160":{"start":{"line":208,"column":4},"end":{"line":208,"column":44}},"161":{"start":{"line":208,"column":19},"end":{"line":208,"column":44}},"162":{"start":{"line":209,"column":4},"end":{"line":209,"column":41}},"163":{"start":{"line":209,"column":18},"end":{"line":209,"column":41}},"164":{"start":{"line":210,"column":4},"end":{"line":210,"column":44}},"165":{"start":{"line":210,"column":19},"end":{"line":210,"column":44}},"166":{"start":{"line":213,"column":2},"end":{"line":220,"column":3}},"167":{"start":{"line":214,"column":4},"end":{"line":214,"column":52}},"168":{"start":{"line":215,"column":4},"end":{"line":215,"column":31}},"169":{"start":{"line":215,"column":24},"end":{"line":215,"column":31}},"170":{"start":{"line":216,"column":4},"end":{"line":216,"column":45}},"171":{"start":{"line":217,"column":4},"end":{"line":217,"column":40}},"172":{"start":{"line":218,"column":4},"end":{"line":218,"column":61}},"173":{"start":{"line":218,"column":54},"end":{"line":218,"column":61}},"174":{"start":{"line":219,"column":4},"end":{"line":219,"column":70}},"175":{"start":{"line":219,"column":26},"end":{"line":219,"column":70}},"176":{"start":{"line":222,"column":2},"end":{"line":222,"column":25}},"177":{"start":{"line":223,"column":2},"end":{"line":233,"column":3}},"178":{"start":{"line":224,"column":4},"end":{"line":224,"column":45}},"179":{"start":{"line":225,"column":4},"end":{"line":229,"column":5}},"180":{"start":{"line":226,"column":6},"end":{"line":227,"column":33}},"181":{"start":{"line":227,"column":8},"end":{"line":227,"column":33}},"182":{"start":{"line":228,"column":6},"end":{"line":228,"column":32}},"183":{"start":{"line":230,"column":4},"end":{"line":230,"column":32}},"184":{"start":{"line":231,"column":4},"end":{"line":231,"column":36}},"185":{"start":{"line":231,"column":16},"end":{"line":231,"column":36}},"186":{"start":{"line":232,"column":4},"end":{"line":232,"column":16}},"187":{"start":{"line":235,"column":2},"end":{"line":243,"column":4}},"188":{"start":{"line":236,"column":4},"end":{"line":236,"column":43}},"189":{"start":{"line":236,"column":32},"end":{"line":236,"column":43}},"190":{"start":{"line":237,"column":4},"end":{"line":237,"column":63}},"191":{"start":{"line":237,"column":32},"end":{"line":237,"column":63}},"192":{"start":{"line":238,"column":4},"end":{"line":238,"column":53}},"193":{"start":{"line":239,"column":4},"end":{"line":239,"column":42}},"194":{"start":{"line":239,"column":31},"end":{"line":239,"column":42}},"195":{"start":{"line":240,"column":4},"end":{"line":241,"column":41}},"196":{"start":{"line":241,"column":6},"end":{"line":241,"column":41}},"197":{"start":{"line":242,"column":4},"end":{"line":242,"column":26}},"198":{"start":{"line":245,"column":2},"end":{"line":245,"column":52}},"199":{"start":{"line":245,"column":38},"end":{"line":245,"column":49}},"200":{"start":{"line":247,"column":2},"end":{"line":247,"column":67}},"201":{"start":{"line":247,"column":47},"end":{"line":247,"column":64}},"202":{"start":{"line":249,"column":2},"end":{"line":249,"column":70}},"203":{"start":{"line":249,"column":46},"end":{"line":249,"column":69}},"204":{"start":{"line":251,"column":2},"end":{"line":257,"column":4}},"205":{"start":{"line":252,"column":4},"end":{"line":252,"column":69}},"206":{"start":{"line":252,"column":21},"end":{"line":252,"column":69}},"207":{"start":{"line":253,"column":4},"end":{"line":253,"column":20}},"208":{"start":{"line":254,"column":4},"end":{"line":255,"column":53}},"209":{"start":{"line":255,"column":6},"end":{"line":255,"column":53}},"210":{"start":{"line":256,"column":4},"end":{"line":256,"column":41}},"211":{"start":{"line":259,"column":2},"end":{"line":273,"column":4}},"212":{"start":{"line":260,"column":4},"end":{"line":260,"column":46}},"213":{"start":{"line":261,"column":4},"end":{"line":266,"column":5}},"214":{"start":{"line":262,"column":6},"end":{"line":262,"column":25}},"215":{"start":{"line":262,"column":13},"end":{"line":262,"column":25}},"216":{"start":{"line":263,"column":6},"end":{"line":263,"column":34}},"217":{"start":{"line":264,"column":6},"end":{"line":264,"column":50}},"218":{"start":{"line":264,"column":31},"end":{"line":264,"column":50}},"219":{"start":{"line":265,"column":6},"end":{"line":265,"column":36}},"220":{"start":{"line":267,"column":4},"end":{"line":267,"column":15}},"221":{"start":{"line":268,"column":4},"end":{"line":271,"column":44}},"222":{"start":{"line":269,"column":6},"end":{"line":269,"column":44}},"223":{"start":{"line":270,"column":9},"end":{"line":271,"column":44}},"224":{"start":{"line":271,"column":6},"end":{"line":271,"column":44}},"225":{"start":{"line":272,"column":4},"end":{"line":272,"column":15}},"226":{"start":{"line":275,"column":2},"end":{"line":279,"column":4}},"227":{"start":{"line":276,"column":4},"end":{"line":276,"column":52}},"228":{"start":{"line":276,"column":27},"end":{"line":276,"column":52}},"229":{"start":{"line":277,"column":4},"end":{"line":277,"column":31}},"230":{"start":{"line":277,"column":20},"end":{"line":277,"column":31}},"231":{"start":{"line":278,"column":4},"end":{"line":278,"column":21}},"232":{"start":{"line":281,"column":2},"end":{"line":292,"column":3}},"233":{"start":{"line":282,"column":4},"end":{"line":282,"column":45}},"234":{"start":{"line":282,"column":33},"end":{"line":282,"column":45}},"235":{"start":{"line":283,"column":4},"end":{"line":283,"column":42}},"236":{"start":{"line":284,"column":4},"end":{"line":289,"column":5}},"237":{"start":{"line":285,"column":6},"end":{"line":286,"column":27}},"238":{"start":{"line":285,"column":27},"end":{"line":285,"column":42}},"239":{"start":{"line":286,"column":11},"end":{"line":286,"column":27}},"240":{"start":{"line":287,"column":6},"end":{"line":288,"column":48}},"241":{"start":{"line":288,"column":8},"end":{"line":288,"column":48}},"242":{"start":{"line":290,"column":4},"end":{"line":290,"column":51}},"243":{"start":{"line":290,"column":30},"end":{"line":290,"column":51}},"244":{"start":{"line":291,"column":4},"end":{"line":291,"column":42}},"245":{"start":{"line":294,"column":2},"end":{"line":303,"column":3}},"246":{"start":{"line":295,"column":4},"end":{"line":295,"column":29}},"247":{"start":{"line":296,"column":4},"end":{"line":296,"column":43}},"248":{"start":{"line":296,"column":26},"end":{"line":296,"column":43}},"249":{"start":{"line":297,"column":4},"end":{"line":297,"column":17}},"250":{"start":{"line":298,"column":4},"end":{"line":301,"column":5}},"251":{"start":{"line":299,"column":6},"end":{"line":299,"column":26}},"252":{"start":{"line":300,"column":6},"end":{"line":300,"column":28}},"253":{"start":{"line":302,"column":4},"end":{"line":302,"column":15}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":32}},{"start":{"line":11,"column":36},"end":{"line":11,"column":61}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"4":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":33}},{"start":{"line":13,"column":37},"end":{"line":13,"column":47}}]},"5":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":15}},{"start":{"line":15,"column":20},"end":{"line":15,"column":34}}]},"6":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"7":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":35},"end":{"line":21,"column":39}},{"start":{"line":21,"column":43},"end":{"line":21,"column":53}}]},"8":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":55},"end":{"line":21,"column":62}},{"start":{"line":21,"column":66},"end":{"line":21,"column":68}}]},"9":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"10":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":18},"end":{"line":50,"column":32}},{"start":{"line":50,"column":36},"end":{"line":50,"column":50}},{"start":{"line":50,"column":54},"end":{"line":50,"column":77}}]},"11":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"12":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":35}},{"start":{"line":67,"column":39},"end":{"line":67,"column":66}}]},"13":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"14":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"15":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":12}},{"start":{"line":70,"column":16},"end":{"line":70,"column":32}},{"start":{"line":70,"column":36},"end":{"line":70,"column":71}}]},"16":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":39},"end":{"line":81,"column":41}},{"start":{"line":81,"column":44},"end":{"line":81,"column":45}}]},"17":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":11},"end":{"line":91,"column":18}},{"start":{"line":91,"column":22},"end":{"line":91,"column":46}},{"start":{"line":91,"column":50},"end":{"line":91,"column":85}},{"start":{"line":92,"column":6},"end":{"line":92,"column":21}},{"start":{"line":92,"column":25},"end":{"line":92,"column":35}}]},"18":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"19":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":15},"end":{"line":98,"column":26}},{"start":{"line":98,"column":30},"end":{"line":98,"column":43}}]},"20":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"21":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":6}},{"start":{"line":102,"column":6},"end":{"line":102,"column":6}}]},"22":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":25},"end":{"line":105,"column":40}},{"start":{"line":105,"column":43},"end":{"line":105,"column":45}}]},"23":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":18},"end":{"line":106,"column":26}},{"start":{"line":106,"column":30},"end":{"line":106,"column":65}}]},"24":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"25":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":6}},{"start":{"line":108,"column":6},"end":{"line":108,"column":6}}]},"26":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":6},"end":{"line":109,"column":6}},{"start":{"line":109,"column":6},"end":{"line":109,"column":6}}]},"27":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":10},"end":{"line":109,"column":51}},{"start":{"line":109,"column":55},"end":{"line":109,"column":63}}]},"28":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"29":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":20},"end":{"line":115,"column":39}},{"start":{"line":115,"column":44},"end":{"line":115,"column":58}},{"start":{"line":115,"column":62},"end":{"line":115,"column":91}},{"start":{"line":115,"column":95},"end":{"line":115,"column":116}},{"start":{"line":115,"column":121},"end":{"line":115,"column":130}}]},"30":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":19},"end":{"line":116,"column":27}},{"start":{"line":116,"column":32},"end":{"line":116,"column":46}},{"start":{"line":116,"column":50},"end":{"line":116,"column":79}},{"start":{"line":116,"column":83},"end":{"line":116,"column":93}},{"start":{"line":116,"column":98},"end":{"line":116,"column":106}}]},"31":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":44},"end":{"line":118,"column":52}},{"start":{"line":118,"column":55},"end":{"line":118,"column":76}}]},"32":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":55},"end":{"line":118,"column":66}},{"start":{"line":118,"column":70},"end":{"line":118,"column":76}}]},"33":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":122,"column":6}},{"start":{"line":122,"column":6},"end":{"line":122,"column":6}}]},"34":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"35":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"36":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"37":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"38":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"39":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":30}},{"start":{"line":154,"column":34},"end":{"line":154,"column":60}}]},"40":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]},"41":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":11},"end":{"line":157,"column":11}},{"start":{"line":157,"column":11},"end":{"line":157,"column":11}}]},"42":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":15},"end":{"line":157,"column":25}},{"start":{"line":157,"column":29},"end":{"line":157,"column":38}}]},"43":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"44":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":17}},{"start":{"line":165,"column":21},"end":{"line":165,"column":47}},{"start":{"line":165,"column":51},"end":{"line":165,"column":78}}]},"45":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"46":{"line":187,"type":"cond-expr","locations":[{"start":{"line":187,"column":20},"end":{"line":187,"column":37}},{"start":{"line":187,"column":40},"end":{"line":187,"column":44}}]},"47":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]},"48":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":10},"end":{"line":189,"column":31}},{"start":{"line":189,"column":35},"end":{"line":189,"column":37}},{"start":{"line":189,"column":41},"end":{"line":189,"column":50}}]},"49":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":8}},{"start":{"line":190,"column":8},"end":{"line":190,"column":8}}]},"50":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":8}},{"start":{"line":193,"column":8},"end":{"line":193,"column":8}}]},"51":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"52":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":30}},{"start":{"line":202,"column":34},"end":{"line":202,"column":45}}]},"53":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":11},"end":{"line":204,"column":11}},{"start":{"line":204,"column":11},"end":{"line":204,"column":11}}]},"54":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":15},"end":{"line":204,"column":30}},{"start":{"line":204,"column":34},"end":{"line":204,"column":75}}]},"55":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":6},"end":{"line":206,"column":6}},{"start":{"line":206,"column":6},"end":{"line":206,"column":6}}]},"56":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"57":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"58":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"59":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"60":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"61":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":13}},{"start":{"line":218,"column":17},"end":{"line":218,"column":52}}]},"62":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":219,"column":4}},{"start":{"line":219,"column":4},"end":{"line":219,"column":4}}]},"63":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":39},"end":{"line":219,"column":56}},{"start":{"line":219,"column":60},"end":{"line":219,"column":69}}]},"64":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"65":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":6}},{"start":{"line":226,"column":6},"end":{"line":226,"column":6}}]},"66":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":15},"end":{"line":227,"column":25}},{"start":{"line":227,"column":29},"end":{"line":227,"column":32}}]},"67":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":4}},{"start":{"line":231,"column":4},"end":{"line":231,"column":4}}]},"68":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"69":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"70":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":239,"column":4}},{"start":{"line":239,"column":4},"end":{"line":239,"column":4}}]},"71":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"72":{"line":260,"type":"cond-expr","locations":[{"start":{"line":260,"column":31},"end":{"line":260,"column":37}},{"start":{"line":260,"column":40},"end":{"line":260,"column":45}}]},"73":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":6},"end":{"line":262,"column":6}},{"start":{"line":262,"column":6},"end":{"line":262,"column":6}}]},"74":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":6},"end":{"line":264,"column":6}},{"start":{"line":264,"column":6},"end":{"line":264,"column":6}}]},"75":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":10},"end":{"line":264,"column":14}},{"start":{"line":264,"column":18},"end":{"line":264,"column":29}}]},"76":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":4},"end":{"line":268,"column":4}},{"start":{"line":268,"column":4},"end":{"line":268,"column":4}}]},"77":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":9},"end":{"line":270,"column":9}},{"start":{"line":270,"column":9},"end":{"line":270,"column":9}}]},"78":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"79":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"80":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":4},"end":{"line":282,"column":4}},{"start":{"line":282,"column":4},"end":{"line":282,"column":4}}]},"81":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":6},"end":{"line":285,"column":6}},{"start":{"line":285,"column":6},"end":{"line":285,"column":6}}]},"82":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":6},"end":{"line":287,"column":6}},{"start":{"line":287,"column":6},"end":{"line":287,"column":6}}]},"83":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"84":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":8},"end":{"line":290,"column":15}},{"start":{"line":290,"column":19},"end":{"line":290,"column":28}}]},"85":{"line":291,"type":"cond-expr","locations":[{"start":{"line":291,"column":18},"end":{"line":291,"column":34}},{"start":{"line":291,"column":37},"end":{"line":291,"column":41}}]}},"code":["// Condensing an inferred set of types to a JSON description document.","","// This code can be used to, after a library has been analyzed,","// extract the types defined in that library and dump them as a JSON","// structure (as parsed by def.js).","","// The idea being that big libraries can be analyzed once, dumped, and","// then cheaply included in later analysis.","","(function(root, mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(exports, require(\"./infer\"));","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"exports\", \"./infer\"], mod);","  mod(root.tern || (root.tern = {}), tern); // Plain browser env","})(this, function(exports, infer) {","  \"use strict\";","","  exports.condense = function(origins, name, options) {","    if (typeof origins == \"string\") origins = [origins];","    var state = new State(origins, name || origins[0], options || {});","","    state.server.signal(\"preCondenseReach\", state)","","    state.cx.topScope.path = \"<top>\";","    state.cx.topScope.reached(\"\", state);","    for (var path in state.roots)","      reach(state.roots[path], null, path, state);","    for (var i = 0; i < state.patchUp.length; ++i)","      patchUpSimpleInstance(state.patchUp[i], state);","","    state.server.signal(\"postCondenseReach\", state)","","    for (var path in state.types)","      store(createPath(path.split(\".\"), state), state.types[path], state);","    for (var path in state.altPaths)","      storeAlt(path, state.altPaths[path], state);","    var hasDef = false;","    for (var _def in state.output[\"!define\"]) { hasDef = true; break; }","    if (!hasDef) delete state.output[\"!define\"];","","    state.server.signal(\"postCondense\", state)","","    return simplify(state.output, state.options.sortOutput);","  };","","  function State(origins, name, options) {","    this.origins = origins;","    this.cx = infer.cx();","    this.server = options.server || this.cx.parent || {signal: function() {}}","    this.maxOrigin = -Infinity;","    for (var i = 0; i < origins.length; ++i)","      this.maxOrigin = Math.max(this.maxOrigin, this.cx.origins.indexOf(origins[i]));","    this.output = {\"!name\": name, \"!define\": {}};","    this.options = options;","    this.types = Object.create(null);","    this.altPaths = Object.create(null);","    this.patchUp = [];","    this.roots = Object.create(null);","  }","","  State.prototype.isTarget = function(origin) {","    return this.origins.indexOf(origin) > -1;","  };","","  State.prototype.getSpan = function(node) {","    if (this.options.spans == false || !this.isTarget(node.origin)) return null;","    if (node.span) return node.span;","    var srv = this.cx.parent, file;","    if (!srv || !node.originNode || !(file = srv.findFile(node.origin))) return null;","    var start = node.originNode.start, end = node.originNode.end;","    var pStart = file.asLineChar(start), pEnd = file.asLineChar(end);","    return start + \"[\" + pStart.line + \":\" + pStart.ch + \"]-\" +","      end + \"[\" + pEnd.line + \":\" + pEnd.ch + \"]\";","  };","","  function pathLen(path) {","    var len = 1, pos = 0, dot;","    while ((dot = path.indexOf(\".\", pos)) != -1) {","      pos = dot + 1;","      len += path.charAt(pos) == \"!\" ? 10 : 1;","    }","    return len;","  }","","  function hop(obj, prop) {","    return Object.prototype.hasOwnProperty.call(obj, prop);","  }","","  function isSimpleInstance(o) {","    return o.proto && !(o instanceof infer.Fn) && o.proto != infer.cx().protos.Object &&","      o.proto.hasCtor && !o.hasCtor;","  }","","  function reach(type, path, id, state, byName) {","    var actual = type.getType(false);","    if (!actual) return;","    var orig = type.origin || actual.origin, relevant = false;","    if (orig) {","      var origPos = state.cx.origins.indexOf(orig);","      // This is a path that is newer than the code we are interested in.","      if (origPos > state.maxOrigin) return;","      relevant = state.isTarget(orig);","    }","    var newPath = path ? path + \".\" + id : id, oldPath = actual.path;","    var shorter = !oldPath || pathLen(oldPath) > pathLen(newPath);","    if (shorter) {","      if (!(actual instanceof infer.Prim)) actual.path = newPath;","      if (actual.reached(newPath, state, !relevant) && relevant) {","        var data = state.types[oldPath];","        if (data) {","          delete state.types[oldPath];","          state.altPaths[oldPath] = actual;","        } else data = {type: actual};","        data.span = state.getSpan(type) || (actual != type && state.isTarget(actual.origin) && state.getSpan(actual)) || data.span;","        data.doc = type.doc || (actual != type && state.isTarget(actual.origin) && actual.doc) || data.doc;","        data.data = actual.metaData;","        data.byName = data.byName == null ? !!byName : data.byName && byName;","        state.types[newPath] = data;","      }","    } else {","      if (relevant) state.altPaths[newPath] = actual;","    }","  }","  function reachByName(aval, path, id, state) {","    var type = aval.getType();","    if (type) reach(type, path, id, state, true);","  }","","  infer.Prim.prototype.reached = function() {return true;};","","  infer.Arr.prototype.reached = function(path, state, concrete) {","    if (concrete) return true","    if (this.tuple) {","      for (var i = 0; i < this.tuple; i++)","        reachByName(this.getProp(String(i)), path, String(i), state)","    } else {","      reachByName(this.getProp(\"<i>\"), path, \"<i>\", state)","    }","    return true;","  };","","  infer.Fn.prototype.reached = function(path, state, concrete) {","    infer.Obj.prototype.reached.call(this, path, state, concrete);","    if (!concrete) {","      for (var i = 0; i < this.args.length; ++i)","        reachByName(this.args[i], path, \"!\" + i, state);","      reachByName(this.retval, path, \"!ret\", state);","    }","    return true;","  };","","  infer.Obj.prototype.reached = function(path, state, concrete) {","    if (isSimpleInstance(this) && !this.condenseForceInclude) {","      if (state.patchUp.indexOf(this) == -1) state.patchUp.push(this);","      return true;","    } else if (this.proto && !concrete) {","      reach(this.proto, path, \"!proto\", state);","    }","    var hasProps = false;","    for (var prop in this.props) {","      reach(this.props[prop], path, prop, state);","      hasProps = true;","    }","    if (!hasProps && !this.condenseForceInclude && !(this instanceof infer.Fn)) {","      this.nameOverride = \"?\";","      return false;","    }","    return true;","  };","","  function patchUpSimpleInstance(obj, state) {","    var path = obj.proto.hasCtor.path;","    if (path) {","      obj.nameOverride = \"+\" + path;","    } else {","      path = obj.path;","    }","    for (var prop in obj.props)","      reach(obj.props[prop], path, prop, state);","  }","","  function createPath(parts, state) {","    var base = state.output, defs = state.output[\"!define\"];","    for (var i = 0, path; i < parts.length; ++i) {","      var part = parts[i];","      path = path ? path + \".\" + part : part;","      var me = state.types[path];","      if (part.charAt(0) == \"!\" || me && me.byName) {","        if (hop(defs, path)) base = defs[path];","        else defs[path] = base = {};","      } else {","        if (hop(base, parts[i])) base = base[part];","        else base = base[part] = {};","      }","    }","    return base;","  }","","  function store(out, info, state) {","    var name = typeName(info.type);","    if (name != info.type.path && name != \"?\") {","      out[\"!type\"] = name;","    } else if (info.type.proto && info.type.proto != state.cx.protos.Object) {","      var protoName = typeName(info.type.proto);","      if (protoName != \"?\") out[\"!proto\"] = protoName;","    }","    if (info.span) out[\"!span\"] = info.span;","    if (info.doc) out[\"!doc\"] = info.doc;","    if (info.data) out[\"!data\"] = info.data;","  }","","  function storeAlt(path, type, state) {","    var parts = path.split(\".\"), last = parts.pop();","    if (last[0] == \"!\") return;","    var known = state.types[parts.join(\".\")];","    var base = createPath(parts, state);","    if (known && known.type.constructor != infer.Obj) return;","    if (!hop(base, last)) base[last] = type.nameOverride || type.path;","  }","","  var typeNameStack = [];","  function typeName(value) {","    var isType = value instanceof infer.Type;","    if (isType) {","      if (typeNameStack.indexOf(value) > -1)","        return value.path || \"?\";","      typeNameStack.push(value);","    }","    var name = value.typeName();","    if (isType) typeNameStack.pop();","    return name;","  }","","  infer.AVal.prototype.typeName = function() {","    if (this.types.length == 0) return \"?\";","    if (this.types.length == 1) return typeName(this.types[0]);","    var simplified = infer.simplifyTypes(this.types);","    if (simplified.length > 2) return \"?\";","    for (var strs = [], i = 0; i < simplified.length; i++)","      strs.push(typeName(simplified[i]));","    return strs.join(\"|\");","  };","","  infer.ANull.typeName = function() { return \"?\"; };","","  infer.Prim.prototype.typeName = function() { return this.name; };","","  infer.Sym.prototype.typeName = function() { return this.asPropName }","","  infer.Arr.prototype.typeName = function() {","    if (!this.tuple) return \"[\" + typeName(this.getProp(\"<i>\")) + \"]\"","    var content = []","    for (var i = 0; i < this.tuple; i++)","      content.push(typeName(this.getProp(String(i))))","    return \"[\" + content.join(\", \") + \"]\"","  };","","  infer.Fn.prototype.typeName = function() {","    var out = this.generator ? \"fn*(\" : \"fn(\";","    for (var i = 0; i < this.args.length; ++i) {","      if (i) out += \", \";","      var name = this.argNames[i];","      if (name && name != \"?\") out += name + \": \";","      out += typeName(this.args[i]);","    }","    out += \")\";","    if (this.computeRetSource)","      out += \" -> \" + this.computeRetSource;","    else if (!this.retval.isEmpty())","      out += \" -> \" + typeName(this.retval);","    return out;","  };","","  infer.Obj.prototype.typeName = function() {","    if (this.nameOverride) return this.nameOverride;","    if (!this.path) return \"?\";","    return this.path;","  };","","  function simplify(data, sort) {","    if (typeof data != \"object\") return data;","    var sawType = false, sawOther = false;","    for (var prop in data) {","      if (prop == \"!type\") sawType = true;","      else sawOther = true;","      if (prop != \"!data\")","        data[prop] = simplify(data[prop], sort);","    }","    if (sawType && !sawOther) return data[\"!type\"];","    return sort ? sortObject(data) : data;","  }","","  function sortObject(obj) {","    var props = [], out = {};","    for (var prop in obj) props.push(prop);","    props.sort();","    for (var i = 0; i < props.length; ++i) {","      var prop = props[i];","      out[prop] = obj[prop];","    }","    return out;","  }","});",""],"l":{"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"19":1,"20":0,"21":0,"23":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"44":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"62":1,"63":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"77":1,"78":0,"79":0,"80":0,"81":0,"83":0,"86":1,"87":0,"90":1,"91":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"102":0,"103":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"122":0,"125":1,"126":0,"127":0,"130":1,"132":1,"133":0,"134":0,"135":0,"136":0,"138":0,"140":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"150":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":0,"160":0,"161":0,"162":0,"163":0,"165":0,"166":0,"167":0,"169":0,"172":1,"173":0,"174":0,"175":0,"177":0,"179":0,"180":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"193":0,"194":0,"197":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"208":0,"209":0,"210":0,"213":1,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"222":1,"223":1,"224":0,"225":0,"226":0,"227":0,"228":0,"230":0,"231":0,"232":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"245":1,"247":1,"249":1,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"259":1,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"275":1,"276":0,"277":0,"278":0,"281":1,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"290":0,"291":0,"294":1,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"302":0}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/angular.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/angular.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":1,"218":0,"219":1,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0,0,0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":15}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":3},"end":{"line":8,"column":40}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":29}}},"4":{"name":"(anonymous_4)","line":13,"loc":{"start":{"line":13,"column":13},"end":{"line":13,"column":28}}},"5":{"name":"Injector","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":22}}},"6":{"name":"(anonymous_6)","line":23,"loc":{"start":{"line":23,"column":27},"end":{"line":23,"column":42}}},"7":{"name":"(anonymous_7)","line":29,"loc":{"start":{"line":29,"column":27},"end":{"line":29,"column":65}}},"8":{"name":"(anonymous_8)","line":41,"loc":{"start":{"line":41,"column":33},"end":{"line":41,"column":52}}},"9":{"name":"globalInclude","line":49,"loc":{"start":{"line":49,"column":2},"end":{"line":49,"column":31}}},"10":{"name":"getInclude","line":54,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":33}}},"11":{"name":"applyWithInjection","line":61,"loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":56}}},"12":{"name":"(anonymous_12)","line":90,"loc":{"start":{"line":90,"column":47},"end":{"line":90,"column":62}}},"13":{"name":"(anonymous_13)","line":91,"loc":{"start":{"line":91,"column":11},"end":{"line":91,"column":42}}},"14":{"name":"(anonymous_14)","line":98,"loc":{"start":{"line":98,"column":49},"end":{"line":98,"column":80}}},"15":{"name":"(anonymous_15)","line":107,"loc":{"start":{"line":107,"column":48},"end":{"line":107,"column":79}}},"16":{"name":"(anonymous_16)","line":116,"loc":{"start":{"line":116,"column":45},"end":{"line":116,"column":76}}},"17":{"name":"arrayNodeToStrings","line":122,"loc":{"start":{"line":122,"column":2},"end":{"line":122,"column":36}}},"18":{"name":"moduleProto","line":133,"loc":{"start":{"line":133,"column":2},"end":{"line":133,"column":27}}},"19":{"name":"declareMod","line":138,"loc":{"start":{"line":138,"column":2},"end":{"line":138,"column":38}}},"20":{"name":"(anonymous_20)","line":165,"loc":{"start":{"line":165,"column":43},"end":{"line":165,"column":76}}},"21":{"name":"(anonymous_21)","line":175,"loc":{"start":{"line":175,"column":15},"end":{"line":175,"column":44}}},"22":{"name":"(anonymous_22)","line":178,"loc":{"start":{"line":178,"column":13},"end":{"line":178,"column":26}}},"23":{"name":"(anonymous_23)","line":188,"loc":{"start":{"line":188,"column":41},"end":{"line":188,"column":63}}},"24":{"name":"postParse","line":195,"loc":{"start":{"line":195,"column":2},"end":{"line":195,"column":32}}},"25":{"name":"(anonymous_25)","line":197,"loc":{"start":{"line":197,"column":22},"end":{"line":197,"column":37}}},"26":{"name":"postLoadDef","line":213,"loc":{"start":{"line":213,"column":2},"end":{"line":213,"column":29}}},"27":{"name":"preCondenseReach","line":238,"loc":{"start":{"line":238,"column":2},"end":{"line":238,"column":35}}},"28":{"name":"postCondenseReach","line":257,"loc":{"start":{"line":257,"column":2},"end":{"line":257,"column":36}}},"29":{"name":"initServer","line":271,"loc":{"start":{"line":271,"column":2},"end":{"line":271,"column":30}}},"30":{"name":"(anonymous_30)","line":279,"loc":{"start":{"line":279,"column":33},"end":{"line":279,"column":50}}},"31":{"name":"(anonymous_31)","line":282,"loc":{"start":{"line":282,"column":23},"end":{"line":282,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1021,"column":3}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":43}},"3":{"start":{"line":3,"column":4},"end":{"line":4,"column":43}},"4":{"start":{"line":5,"column":2},"end":{"line":6,"column":93}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":93}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":44}},"7":{"start":{"line":11,"column":2},"end":{"line":16,"column":5}},"8":{"start":{"line":12,"column":31},"end":{"line":12,"column":46}},"9":{"start":{"line":14,"column":6},"end":{"line":14,"column":41}},"10":{"start":{"line":14,"column":21},"end":{"line":14,"column":41}},"11":{"start":{"line":18,"column":2},"end":{"line":21,"column":3}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":38}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"14":{"start":{"line":23,"column":2},"end":{"line":28,"column":4}},"15":{"start":{"line":24,"column":4},"end":{"line":24,"column":96}},"16":{"start":{"line":24,"column":26},"end":{"line":24,"column":96}},"17":{"start":{"line":25,"column":4},"end":{"line":25,"column":54}},"18":{"start":{"line":25,"column":29},"end":{"line":25,"column":54}},"19":{"start":{"line":26,"column":4},"end":{"line":26,"column":51}},"20":{"start":{"line":27,"column":4},"end":{"line":27,"column":17}},"21":{"start":{"line":29,"column":2},"end":{"line":40,"column":4}},"22":{"start":{"line":30,"column":4},"end":{"line":30,"column":56}},"23":{"start":{"line":30,"column":49},"end":{"line":30,"column":56}},"24":{"start":{"line":31,"column":4},"end":{"line":31,"column":74}},"25":{"start":{"line":32,"column":4},"end":{"line":32,"column":35}},"26":{"start":{"line":32,"column":16},"end":{"line":32,"column":35}},"27":{"start":{"line":33,"column":4},"end":{"line":33,"column":59}},"28":{"start":{"line":33,"column":23},"end":{"line":33,"column":59}},"29":{"start":{"line":34,"column":4},"end":{"line":35,"column":91}},"30":{"start":{"line":34,"column":48},"end":{"line":34,"column":66}},"31":{"start":{"line":35,"column":9},"end":{"line":35,"column":91}},"32":{"start":{"line":35,"column":67},"end":{"line":35,"column":91}},"33":{"start":{"line":36,"column":4},"end":{"line":36,"column":67}},"34":{"start":{"line":36,"column":15},"end":{"line":36,"column":31}},"35":{"start":{"line":36,"column":32},"end":{"line":36,"column":65}},"36":{"start":{"line":37,"column":4},"end":{"line":37,"column":25}},"37":{"start":{"line":38,"column":4},"end":{"line":39,"column":66}},"38":{"start":{"line":39,"column":6},"end":{"line":39,"column":66}},"39":{"start":{"line":41,"column":2},"end":{"line":47,"column":4}},"40":{"start":{"line":42,"column":4},"end":{"line":42,"column":32}},"41":{"start":{"line":43,"column":4},"end":{"line":46,"column":5}},"42":{"start":{"line":44,"column":6},"end":{"line":44,"column":35}},"43":{"start":{"line":45,"column":6},"end":{"line":45,"column":71}},"44":{"start":{"line":49,"column":2},"end":{"line":52,"column":3}},"45":{"start":{"line":50,"column":4},"end":{"line":50,"column":57}},"46":{"start":{"line":51,"column":4},"end":{"line":51,"column":60}},"47":{"start":{"line":51,"column":31},"end":{"line":51,"column":60}},"48":{"start":{"line":54,"column":2},"end":{"line":59,"column":3}},"49":{"start":{"line":55,"column":4},"end":{"line":55,"column":35}},"50":{"start":{"line":56,"column":4},"end":{"line":56,"column":26}},"51":{"start":{"line":56,"column":14},"end":{"line":56,"column":26}},"52":{"start":{"line":57,"column":4},"end":{"line":57,"column":42}},"53":{"start":{"line":57,"column":23},"end":{"line":57,"column":42}},"54":{"start":{"line":58,"column":4},"end":{"line":58,"column":63}},"55":{"start":{"line":61,"column":2},"end":{"line":88,"column":3}},"56":{"start":{"line":62,"column":4},"end":{"line":62,"column":18}},"57":{"start":{"line":63,"column":4},"end":{"line":77,"column":5}},"58":{"start":{"line":64,"column":6},"end":{"line":65,"column":56}},"59":{"start":{"line":65,"column":8},"end":{"line":65,"column":56}},"60":{"start":{"line":66,"column":11},"end":{"line":77,"column":5}},"61":{"start":{"line":67,"column":6},"end":{"line":73,"column":7}},"62":{"start":{"line":68,"column":8},"end":{"line":68,"column":35}},"63":{"start":{"line":69,"column":8},"end":{"line":72,"column":33}},"64":{"start":{"line":70,"column":10},"end":{"line":70,"column":48}},"65":{"start":{"line":72,"column":10},"end":{"line":72,"column":33}},"66":{"start":{"line":74,"column":6},"end":{"line":74,"column":57}},"67":{"start":{"line":75,"column":6},"end":{"line":76,"column":35}},"68":{"start":{"line":76,"column":8},"end":{"line":76,"column":35}},"69":{"start":{"line":78,"column":4},"end":{"line":78,"column":32}},"70":{"start":{"line":79,"column":4},"end":{"line":86,"column":5}},"71":{"start":{"line":80,"column":6},"end":{"line":80,"column":32}},"72":{"start":{"line":81,"column":6},"end":{"line":81,"column":47}},"73":{"start":{"line":82,"column":6},"end":{"line":82,"column":33}},"74":{"start":{"line":83,"column":6},"end":{"line":83,"column":86}},"75":{"start":{"line":85,"column":6},"end":{"line":85,"column":84}},"76":{"start":{"line":87,"column":4},"end":{"line":87,"column":18}},"77":{"start":{"line":90,"column":2},"end":{"line":96,"column":5}},"78":{"start":{"line":91,"column":4},"end":{"line":95,"column":6}},"79":{"start":{"line":92,"column":6},"end":{"line":92,"column":31}},"80":{"start":{"line":93,"column":6},"end":{"line":94,"column":60}},"81":{"start":{"line":94,"column":8},"end":{"line":94,"column":60}},"82":{"start":{"line":98,"column":2},"end":{"line":105,"column":5}},"83":{"start":{"line":99,"column":4},"end":{"line":99,"column":29}},"84":{"start":{"line":100,"column":4},"end":{"line":104,"column":5}},"85":{"start":{"line":101,"column":6},"end":{"line":101,"column":65}},"86":{"start":{"line":102,"column":6},"end":{"line":103,"column":89}},"87":{"start":{"line":103,"column":8},"end":{"line":103,"column":89}},"88":{"start":{"line":107,"column":2},"end":{"line":114,"column":5}},"89":{"start":{"line":108,"column":4},"end":{"line":108,"column":29}},"90":{"start":{"line":109,"column":4},"end":{"line":113,"column":5}},"91":{"start":{"line":110,"column":6},"end":{"line":110,"column":71}},"92":{"start":{"line":111,"column":6},"end":{"line":112,"column":89}},"93":{"start":{"line":112,"column":8},"end":{"line":112,"column":89}},"94":{"start":{"line":116,"column":2},"end":{"line":120,"column":5}},"95":{"start":{"line":117,"column":4},"end":{"line":117,"column":29}},"96":{"start":{"line":118,"column":4},"end":{"line":119,"column":88}},"97":{"start":{"line":119,"column":6},"end":{"line":119,"column":88}},"98":{"start":{"line":122,"column":2},"end":{"line":131,"column":3}},"99":{"start":{"line":123,"column":4},"end":{"line":123,"column":21}},"100":{"start":{"line":124,"column":4},"end":{"line":129,"column":7}},"101":{"start":{"line":125,"column":6},"end":{"line":129,"column":7}},"102":{"start":{"line":126,"column":8},"end":{"line":126,"column":35}},"103":{"start":{"line":127,"column":8},"end":{"line":128,"column":34}},"104":{"start":{"line":128,"column":10},"end":{"line":128,"column":34}},"105":{"start":{"line":130,"column":4},"end":{"line":130,"column":19}},"106":{"start":{"line":133,"column":2},"end":{"line":136,"column":3}},"107":{"start":{"line":134,"column":4},"end":{"line":134,"column":40}},"108":{"start":{"line":135,"column":4},"end":{"line":135,"column":66}},"109":{"start":{"line":138,"column":2},"end":{"line":163,"column":3}},"110":{"start":{"line":139,"column":4},"end":{"line":139,"column":54}},"111":{"start":{"line":140,"column":4},"end":{"line":140,"column":32}},"112":{"start":{"line":141,"column":4},"end":{"line":141,"column":43}},"113":{"start":{"line":142,"column":4},"end":{"line":142,"column":44}},"114":{"start":{"line":142,"column":16},"end":{"line":142,"column":44}},"115":{"start":{"line":143,"column":4},"end":{"line":143,"column":30}},"116":{"start":{"line":144,"column":4},"end":{"line":144,"column":34}},"117":{"start":{"line":145,"column":4},"end":{"line":145,"column":40}},"118":{"start":{"line":146,"column":4},"end":{"line":152,"column":5}},"119":{"start":{"line":147,"column":6},"end":{"line":147,"column":45}},"120":{"start":{"line":148,"column":6},"end":{"line":151,"column":48}},"121":{"start":{"line":149,"column":8},"end":{"line":149,"column":105}},"122":{"start":{"line":150,"column":11},"end":{"line":151,"column":48}},"123":{"start":{"line":151,"column":8},"end":{"line":151,"column":48}},"124":{"start":{"line":153,"column":4},"end":{"line":161,"column":5}},"125":{"start":{"line":154,"column":6},"end":{"line":154,"column":31}},"126":{"start":{"line":155,"column":6},"end":{"line":155,"column":46}},"127":{"start":{"line":156,"column":6},"end":{"line":160,"column":7}},"128":{"start":{"line":157,"column":8},"end":{"line":157,"column":41}},"129":{"start":{"line":158,"column":8},"end":{"line":159,"column":45}},"130":{"start":{"line":159,"column":10},"end":{"line":159,"column":45}},"131":{"start":{"line":162,"column":4},"end":{"line":162,"column":15}},"132":{"start":{"line":165,"column":2},"end":{"line":172,"column":5}},"133":{"start":{"line":166,"column":4},"end":{"line":166,"column":98}},"134":{"start":{"line":167,"column":4},"end":{"line":168,"column":56}},"135":{"start":{"line":168,"column":6},"end":{"line":168,"column":56}},"136":{"start":{"line":169,"column":4},"end":{"line":170,"column":74}},"137":{"start":{"line":170,"column":6},"end":{"line":170,"column":74}},"138":{"start":{"line":171,"column":4},"end":{"line":171,"column":15}},"139":{"start":{"line":174,"column":2},"end":{"line":186,"column":5}},"140":{"start":{"line":176,"column":6},"end":{"line":176,"column":23}},"141":{"start":{"line":176,"column":24},"end":{"line":176,"column":41}},"142":{"start":{"line":176,"column":42},"end":{"line":176,"column":63}},"143":{"start":{"line":179,"column":6},"end":{"line":179,"column":44}},"144":{"start":{"line":179,"column":37},"end":{"line":179,"column":44}},"145":{"start":{"line":180,"column":6},"end":{"line":181,"column":88}},"146":{"start":{"line":182,"column":6},"end":{"line":182,"column":35}},"147":{"start":{"line":183,"column":6},"end":{"line":184,"column":43}},"148":{"start":{"line":184,"column":8},"end":{"line":184,"column":43}},"149":{"start":{"line":188,"column":2},"end":{"line":193,"column":5}},"150":{"start":{"line":189,"column":4},"end":{"line":189,"column":44}},"151":{"start":{"line":189,"column":25},"end":{"line":189,"column":44}},"152":{"start":{"line":190,"column":4},"end":{"line":190,"column":32}},"153":{"start":{"line":191,"column":4},"end":{"line":191,"column":67}},"154":{"start":{"line":192,"column":4},"end":{"line":192,"column":18}},"155":{"start":{"line":195,"column":2},"end":{"line":211,"column":3}},"156":{"start":{"line":196,"column":4},"end":{"line":210,"column":7}},"157":{"start":{"line":198,"column":8},"end":{"line":208,"column":9}},"158":{"start":{"line":201,"column":10},"end":{"line":201,"column":84}},"159":{"start":{"line":202,"column":10},"end":{"line":207,"column":11}},"160":{"start":{"line":203,"column":12},"end":{"line":203,"column":62}},"161":{"start":{"line":204,"column":12},"end":{"line":204,"column":57}},"162":{"start":{"line":204,"column":25},"end":{"line":204,"column":57}},"163":{"start":{"line":205,"column":12},"end":{"line":205,"column":71}},"164":{"start":{"line":206,"column":12},"end":{"line":206,"column":49}},"165":{"start":{"line":213,"column":2},"end":{"line":236,"column":3}},"166":{"start":{"line":214,"column":4},"end":{"line":214,"column":81}},"167":{"start":{"line":215,"column":4},"end":{"line":219,"column":5}},"168":{"start":{"line":216,"column":6},"end":{"line":216,"column":78}},"169":{"start":{"line":217,"column":6},"end":{"line":217,"column":79}},"170":{"start":{"line":217,"column":17},"end":{"line":217,"column":79}},"171":{"start":{"line":217,"column":56},"end":{"line":217,"column":79}},"172":{"start":{"line":218,"column":6},"end":{"line":218,"column":13}},"173":{"start":{"line":220,"column":4},"end":{"line":220,"column":35}},"174":{"start":{"line":221,"column":4},"end":{"line":235,"column":5}},"175":{"start":{"line":221,"column":14},"end":{"line":235,"column":5}},"176":{"start":{"line":222,"column":6},"end":{"line":222,"column":43}},"177":{"start":{"line":223,"column":6},"end":{"line":223,"column":97}},"178":{"start":{"line":224,"column":6},"end":{"line":224,"column":27}},"179":{"start":{"line":225,"column":6},"end":{"line":234,"column":7}},"180":{"start":{"line":226,"column":8},"end":{"line":226,"column":54}},"181":{"start":{"line":227,"column":8},"end":{"line":227,"column":26}},"182":{"start":{"line":227,"column":17},"end":{"line":227,"column":26}},"183":{"start":{"line":228,"column":8},"end":{"line":233,"column":9}},"184":{"start":{"line":229,"column":10},"end":{"line":229,"column":48}},"185":{"start":{"line":229,"column":24},"end":{"line":229,"column":48}},"186":{"start":{"line":230,"column":10},"end":{"line":230,"column":65}},"187":{"start":{"line":232,"column":10},"end":{"line":232,"column":55}},"188":{"start":{"line":238,"column":2},"end":{"line":255,"column":3}},"189":{"start":{"line":239,"column":4},"end":{"line":239,"column":53}},"190":{"start":{"line":240,"column":4},"end":{"line":240,"column":48}},"191":{"start":{"line":241,"column":4},"end":{"line":253,"column":5}},"192":{"start":{"line":242,"column":6},"end":{"line":242,"column":27}},"193":{"start":{"line":243,"column":6},"end":{"line":252,"column":7}},"194":{"start":{"line":244,"column":8},"end":{"line":244,"column":48}},"195":{"start":{"line":245,"column":8},"end":{"line":245,"column":46}},"196":{"start":{"line":246,"column":8},"end":{"line":246,"column":40}},"197":{"start":{"line":247,"column":8},"end":{"line":247,"column":16}},"198":{"start":{"line":248,"column":8},"end":{"line":251,"column":9}},"199":{"start":{"line":248,"column":26},"end":{"line":251,"column":9}},"200":{"start":{"line":249,"column":10},"end":{"line":249,"column":47}},"201":{"start":{"line":250,"column":10},"end":{"line":250,"column":86}},"202":{"start":{"line":250,"column":27},"end":{"line":250,"column":86}},"203":{"start":{"line":254,"column":4},"end":{"line":254,"column":43}},"204":{"start":{"line":254,"column":15},"end":{"line":254,"column":43}},"205":{"start":{"line":257,"column":2},"end":{"line":269,"column":3}},"206":{"start":{"line":258,"column":4},"end":{"line":258,"column":53}},"207":{"start":{"line":259,"column":4},"end":{"line":268,"column":5}},"208":{"start":{"line":260,"column":6},"end":{"line":260,"column":12}},"209":{"start":{"line":261,"column":6},"end":{"line":267,"column":7}},"210":{"start":{"line":262,"column":8},"end":{"line":262,"column":48}},"211":{"start":{"line":263,"column":8},"end":{"line":263,"column":46}},"212":{"start":{"line":264,"column":8},"end":{"line":264,"column":37}},"213":{"start":{"line":265,"column":8},"end":{"line":265,"column":47}},"214":{"start":{"line":265,"column":24},"end":{"line":265,"column":47}},"215":{"start":{"line":266,"column":8},"end":{"line":266,"column":44}},"216":{"start":{"line":266,"column":23},"end":{"line":266,"column":44}},"217":{"start":{"line":271,"column":2},"end":{"line":277,"column":3}},"218":{"start":{"line":272,"column":4},"end":{"line":276,"column":6}},"219":{"start":{"line":279,"column":2},"end":{"line":289,"column":5}},"220":{"start":{"line":280,"column":4},"end":{"line":280,"column":23}},"221":{"start":{"line":282,"column":4},"end":{"line":282,"column":59}},"222":{"start":{"line":282,"column":36},"end":{"line":282,"column":55}},"223":{"start":{"line":283,"column":4},"end":{"line":283,"column":37}},"224":{"start":{"line":284,"column":4},"end":{"line":284,"column":41}},"225":{"start":{"line":285,"column":4},"end":{"line":285,"column":51}},"226":{"start":{"line":286,"column":4},"end":{"line":286,"column":53}},"227":{"start":{"line":288,"column":4},"end":{"line":288,"column":30}},"228":{"start":{"line":291,"column":2},"end":{"line":1020,"column":4}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":61}}]},"3":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":2},"end":{"line":5,"column":2}},{"start":{"line":5,"column":2},"end":{"line":5,"column":2}}]},"4":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":6},"end":{"line":5,"column":33}},{"start":{"line":5,"column":37},"end":{"line":5,"column":47}}]},"5":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":6}},{"start":{"line":14,"column":6},"end":{"line":14,"column":6}}]},"6":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"7":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"8":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"9":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":24}},{"start":{"line":30,"column":28},"end":{"line":30,"column":33}},{"start":{"line":30,"column":37},"end":{"line":30,"column":47}}]},"10":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":16},"end":{"line":31,"column":33}},{"start":{"line":31,"column":38},"end":{"line":31,"column":72}}]},"11":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"12":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"13":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"14":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":31}},{"start":{"line":34,"column":35},"end":{"line":34,"column":46}}]},"15":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":9},"end":{"line":35,"column":9}},{"start":{"line":35,"column":9},"end":{"line":35,"column":9}}]},"16":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":13},"end":{"line":35,"column":17}},{"start":{"line":35,"column":21},"end":{"line":35,"column":44}},{"start":{"line":35,"column":48},"end":{"line":35,"column":65}}]},"17":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"18":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":49},"end":{"line":39,"column":54}},{"start":{"line":39,"column":58},"end":{"line":39,"column":59}}]},"19":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":40},"end":{"line":45,"column":48}},{"start":{"line":45,"column":52},"end":{"line":45,"column":66}}]},"20":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"21":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"22":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"23":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":26},"end":{"line":58,"column":48}},{"start":{"line":58,"column":51},"end":{"line":58,"column":62}}]},"24":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"25":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":11},"end":{"line":66,"column":11}},{"start":{"line":66,"column":11},"end":{"line":66,"column":11}}]},"26":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"27":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":33}},{"start":{"line":69,"column":37},"end":{"line":69,"column":65}}]},"28":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]},"29":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":10},"end":{"line":75,"column":14}},{"start":{"line":75,"column":18},"end":{"line":75,"column":54}}]},"30":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"31":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":6}},{"start":{"line":93,"column":6},"end":{"line":93,"column":6}}]},"32":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":10},"end":{"line":93,"column":13}},{"start":{"line":93,"column":17},"end":{"line":93,"column":25}},{"start":{"line":93,"column":29},"end":{"line":93,"column":43}}]},"33":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"34":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":11}},{"start":{"line":100,"column":15},"end":{"line":100,"column":23}},{"start":{"line":100,"column":27},"end":{"line":100,"column":46}}]},"35":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":6}},{"start":{"line":102,"column":6},"end":{"line":102,"column":6}}]},"36":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":10},"end":{"line":102,"column":22}},{"start":{"line":102,"column":26},"end":{"line":102,"column":55}}]},"37":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"38":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":11}},{"start":{"line":109,"column":15},"end":{"line":109,"column":23}},{"start":{"line":109,"column":27},"end":{"line":109,"column":46}}]},"39":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"40":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":10},"end":{"line":111,"column":22}},{"start":{"line":111,"column":26},"end":{"line":111,"column":55}}]},"41":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"42":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":11}},{"start":{"line":118,"column":15},"end":{"line":118,"column":27}},{"start":{"line":118,"column":31},"end":{"line":118,"column":39}},{"start":{"line":118,"column":43},"end":{"line":118,"column":54}},{"start":{"line":118,"column":58},"end":{"line":118,"column":87}},{"start":{"line":118,"column":91},"end":{"line":118,"column":98}}]},"43":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"44":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":12}},{"start":{"line":124,"column":16},"end":{"line":124,"column":46}}]},"45":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":8}},{"start":{"line":127,"column":8},"end":{"line":127,"column":8}}]},"46":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":33}},{"start":{"line":127,"column":37},"end":{"line":127,"column":65}}]},"47":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":11},"end":{"line":135,"column":17}},{"start":{"line":135,"column":21},"end":{"line":135,"column":65}}]},"48":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":28},"end":{"line":141,"column":33}},{"start":{"line":141,"column":37},"end":{"line":141,"column":41}}]},"49":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"50":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":6},"end":{"line":148,"column":6}},{"start":{"line":148,"column":6},"end":{"line":148,"column":6}}]},"51":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":9},"end":{"line":149,"column":41}},{"start":{"line":149,"column":46},"end":{"line":149,"column":83}}]},"52":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":11},"end":{"line":150,"column":11}},{"start":{"line":150,"column":11},"end":{"line":150,"column":11}}]},"53":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"54":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":6},"end":{"line":156,"column":6}},{"start":{"line":156,"column":6},"end":{"line":156,"column":6}}]},"55":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":20},"end":{"line":166,"column":28}},{"start":{"line":166,"column":32},"end":{"line":166,"column":43}},{"start":{"line":166,"column":47},"end":{"line":166,"column":76}},{"start":{"line":166,"column":80},"end":{"line":166,"column":97}}]},"56":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"57":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"58":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":48},"end":{"line":170,"column":56}},{"start":{"line":170,"column":60},"end":{"line":170,"column":71}}]},"59":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":6}},{"start":{"line":179,"column":6},"end":{"line":179,"column":6}}]},"60":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"61":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"62":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":12},"end":{"line":198,"column":50}},{"start":{"line":199,"column":12},"end":{"line":199,"column":33}},{"start":{"line":199,"column":37},"end":{"line":199,"column":58}},{"start":{"line":200,"column":12},"end":{"line":200,"column":92}}]},"63":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":10},"end":{"line":202,"column":10}},{"start":{"line":202,"column":10},"end":{"line":202,"column":10}}]},"64":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":12},"end":{"line":204,"column":12}},{"start":{"line":204,"column":12},"end":{"line":204,"column":12}}]},"65":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"66":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":6}},{"start":{"line":217,"column":6},"end":{"line":217,"column":6}}]},"67":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":15},"end":{"line":220,"column":19}},{"start":{"line":220,"column":23},"end":{"line":220,"column":34}}]},"68":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":221,"column":4}},{"start":{"line":221,"column":4},"end":{"line":221,"column":4}}]},"69":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":52},"end":{"line":223,"column":64}},{"start":{"line":223,"column":68},"end":{"line":223,"column":89}},{"start":{"line":223,"column":93},"end":{"line":223,"column":95}}]},"70":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":227,"column":8}},{"start":{"line":227,"column":8},"end":{"line":227,"column":8}}]},"71":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":8},"end":{"line":228,"column":8}},{"start":{"line":228,"column":8},"end":{"line":228,"column":8}}]},"72":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":10},"end":{"line":229,"column":10}},{"start":{"line":229,"column":10},"end":{"line":229,"column":10}}]},"73":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":6},"end":{"line":243,"column":6}},{"start":{"line":243,"column":6},"end":{"line":243,"column":6}}]},"74":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8}},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"75":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":10},"end":{"line":250,"column":10}},{"start":{"line":250,"column":10},"end":{"line":250,"column":10}}]},"76":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":4},"end":{"line":254,"column":4}},{"start":{"line":254,"column":4},"end":{"line":254,"column":4}}]},"77":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":6},"end":{"line":261,"column":6}},{"start":{"line":261,"column":6},"end":{"line":261,"column":6}}]},"78":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":8},"end":{"line":265,"column":8}},{"start":{"line":265,"column":8},"end":{"line":265,"column":8}}]},"79":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":8},"end":{"line":266,"column":8}},{"start":{"line":266,"column":8},"end":{"line":266,"column":8}}]}},"code":["(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(require(\"../lib/infer\"), require(\"../lib/tern\"), require(\"../lib/comment\"),","               require(\"acorn/dist/walk\"));","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"../lib/infer\", \"../lib/tern\", \"../lib/comment\", \"acorn/dist/walk\"], mod);","  mod(tern, tern, tern.comment, acorn.walk);","})(function(infer, tern, comment, walk) {","  \"use strict\";","","  var SetDoc = infer.constraint({","    construct: function(doc) { this.doc = doc; },","    addType: function(type) {","      if (!type.doc) type.doc = this.doc;","    }","  });","","  function Injector() {","    this.fields = Object.create(null);","    this.forward = [];","  }","","  Injector.prototype.get = function(name) {","    if (name == \"$scope\") return new infer.Obj(globalInclude(\"$rootScope\").getType(), \"$scope\");","    if (name in this.fields) return this.fields[name];","    var field = this.fields[name] = new infer.AVal;","    return field;","  };","  Injector.prototype.set = function(name, val, doc, node, depth) {","    if (name == \"$scope\" || depth && depth > 10) return;","    var field = this.fields[name] || (this.fields[name] = new infer.AVal);","    if (!depth) field.local = true;","    if (!field.origin) field.origin = infer.cx().curOrigin;","    if (typeof node == \"string\" && !field.span) field.span = node;","    else if (node && typeof node == \"object\" && !field.originNode) field.originNode = node;","    if (doc) { field.doc = doc; field.propagate(new SetDoc(doc)); }","    val.propagate(field);","    for (var i = 0; i < this.forward.length; ++i)","      this.forward[i].set(name, val, doc, node, (depth || 0) + 1);","  };","  Injector.prototype.forwardTo = function(injector) {","    this.forward.push(injector);","    for (var field in this.fields) {","      var val = this.fields[field];","      injector.set(field, val, val.doc, val.span || val.originNode, 1);","    }","  };","","  function globalInclude(name) {","    var service = infer.cx().definitions.angular.service;","    if (service.hasProp(name)) return service.getProp(name);","  }","","  function getInclude(mod, name) {","    var glob = globalInclude(name);","    if (glob) return glob;","    if (!mod.injector) return infer.ANull;","    return mod.injector ? mod.injector.get(name) : infer.ANull;","  }","","  function applyWithInjection(mod, fnType, node, asNew) {","    var deps = [];","    if (/FunctionExpression/.test(node.type)) {","      for (var i = 0; i < node.params.length; ++i)","        deps.push(getInclude(mod, node.params[i].name));","    } else if (node.type == \"ArrayExpression\") {","      for (var i = 0; i < node.elements.length - 1; ++i) {","        var elt = node.elements[i];","        if (elt.type == \"Literal\" && typeof elt.value == \"string\")","          deps.push(getInclude(mod, elt.value));","        else","          deps.push(infer.ANull);","      }","      var last = node.elements[node.elements.length - 1];","      if (last && /FunctionExpression/.test(last.type))","        fnType = last.scope.fnType;","    }","    var result = new infer.AVal;","    if (asNew) {","      var self = new infer.AVal;","      fnType.propagate(new infer.IsCtor(self));","      self.propagate(result, 90);","      fnType.propagate(new infer.IsCallee(self, deps, null, new infer.IfObj(result)));","    } else {","      fnType.propagate(new infer.IsCallee(infer.cx().topScope, deps, null, result));","    }","    return result;","  }","","  infer.registerFunction(\"angular_callInject\", function(argN) {","    return function(self, args, argNodes) {","      var mod = self.getType();","      if (mod && argNodes && argNodes[argN])","        applyWithInjection(mod, args[argN], argNodes[argN]);","    };","  });","","  infer.registerFunction(\"angular_regFieldCall\", function(self, args, argNodes) {","    var mod = self.getType();","    if (mod && argNodes && argNodes.length > 1) {","      var result = applyWithInjection(mod, args[1], argNodes[1]);","      if (mod.injector && argNodes[0].type == \"Literal\")","        mod.injector.set(argNodes[0].value, result, argNodes[0].angularDoc, argNodes[0]);","    }","  });","","  infer.registerFunction(\"angular_regFieldNew\", function(self, args, argNodes) {","    var mod = self.getType();","    if (mod && argNodes && argNodes.length > 1) {","      var result = applyWithInjection(mod, args[1], argNodes[1], true);","      if (mod.injector && argNodes[0].type == \"Literal\")","        mod.injector.set(argNodes[0].value, result, argNodes[0].angularDoc, argNodes[0]);","    }","  });","","  infer.registerFunction(\"angular_regField\", function(self, args, argNodes) {","    var mod = self.getType();","    if (mod && mod.injector && argNodes && argNodes[0] && argNodes[0].type == \"Literal\" && args[1])","      mod.injector.set(argNodes[0].value, args[1], argNodes[0].angularDoc, argNodes[0]);","  });","","  function arrayNodeToStrings(node) {","    var strings = [];","    if (node && node.type == \"ArrayExpression\")","      for (var i = 0; i < node.elements.length; ++i) {","        var elt = node.elements[i];","        if (elt.type == \"Literal\" && typeof elt.value == \"string\")","          strings.push(elt.value);","      }","    return strings;","  }","","  function moduleProto(cx) {","    var ngDefs = cx.definitions.angular;","    return ngDefs && ngDefs.Module.getProp(\"prototype\").getType();","  }","","  function declareMod(name, includes) {","    var cx = infer.cx(), data = cx.parent.mod.angular;","    var proto = moduleProto(cx);","    var mod = new infer.Obj(proto || true);","    if (!proto) data.nakedModules.push(mod);","    mod.origin = cx.curOrigin;","    mod.injector = new Injector();","    mod.metaData = {includes: includes};","    for (var i = 0; i < includes.length; ++i) {","      var depMod = data.modules[includes[i]];","      if (!depMod)","        (data.pendingImports[includes[i]] || (data.pendingImports[includes[i]] = [])).push(mod.injector);","      else if (depMod.injector)","        depMod.injector.forwardTo(mod.injector);","    }","    if (typeof name == \"string\") {","      data.modules[name] = mod;","      var pending = data.pendingImports[name];","      if (pending) {","        delete data.pendingImports[name];","        for (var i = 0; i < pending.length; ++i)","          mod.injector.forwardTo(pending[i]);","      }","    }","    return mod;","  }","","  infer.registerFunction(\"angular_module\", function(_self, _args, argNodes) {","    var mod, name = argNodes && argNodes[0] && argNodes[0].type == \"Literal\" && argNodes[0].value;","    if (typeof name == \"string\")","      mod = infer.cx().parent.mod.angular.modules[name];","    if (!mod)","      mod = declareMod(name, arrayNodeToStrings(argNodes && argNodes[1]));","    return mod;","  });","","  var IsBound = infer.constraint({","    construct: function(self, args, target) {","      this.self = self; this.args = args; this.target = target;","    },","    addType: function(tp) {","      if (!(tp instanceof infer.Fn)) return;","      this.target.addType(new infer.Fn(tp.name, tp.self, tp.args.slice(this.args.length),","                                       tp.argNames.slice(this.args.length), tp.retval));","      this.self.propagate(tp.self);","      for (var i = 0; i < Math.min(tp.args.length, this.args.length); ++i)","        this.args[i].propagate(tp.args[i]);","    }","  });","","  infer.registerFunction(\"angular_bind\", function(_self, args) {","    if (args.length < 2) return infer.ANull;","    var result = new infer.AVal;","    args[1].propagate(new IsBound(args[0], args.slice(2), result));","    return result;","  });","","  function postParse(ast, text) {","    walk.simple(ast, {","      CallExpression: function(node) {","        if (node.callee.type == \"MemberExpression\" &&","            !node.callee.computed && node.arguments.length &&","            /^(value|constant|controller|factory|provider)$/.test(node.callee.property.name)) {","          var before = comment.commentsBefore(text, node.callee.property.start - 1);","          if (before) {","            var first = before[0], dot = first.search(/\\.\\s/);","            if (dot > 5) first = first.slice(0, dot + 1);","            first = first.trim().replace(/\\s*\\n\\s*\\*\\s*|\\s{1,}/g, \" \");","            node.arguments[0].angularDoc = first;","          }","        }","      }","    });","  }","","  function postLoadDef(json) {","    var cx = infer.cx(), defName = json[\"!name\"], defs = cx.definitions[defName];","    if (defName == \"angular\") {","      var proto = moduleProto(cx), naked = cx.parent.mod.angular.nakedModules;","      if (proto) for (var i = 0; i < naked.length; ++i) naked[i].proto = proto;","      return;","    }","    var mods = defs && defs[\"!ng\"];","    if (mods) for (var name in mods.props) {","      var obj = mods.props[name].getType();","      var mod = declareMod(name.replace(/`/g, \".\"), obj.metaData && obj.metaData.includes || []);","      mod.origin = defName;","      for (var prop in obj.props) {","        var val = obj.props[prop], tp = val.getType();","        if (!tp) continue;","        if (/^_inject_/.test(prop)) {","          if (!tp.name) tp.name = prop.slice(8);","          mod.injector.set(prop.slice(8), tp, val.doc, val.span);","        } else {","          obj.props[prop].propagate(mod.defProp(prop));","        }","      }","    }","  }","","  function preCondenseReach(state) {","    var mods = infer.cx().parent.mod.angular.modules;","    var modObj = new infer.Obj(null), found = 0;","    for (var name in mods) {","      var mod = mods[name];","      if (state.origins.indexOf(mod.origin) > -1) {","        var propName = name.replace(/\\./g, \"`\");","        modObj.defProp(propName).addType(mod);","        mod.condenseForceInclude = true;","        ++found;","        if (mod.injector) for (var inj in mod.injector.fields) {","          var field = mod.injector.fields[inj];","          if (field.local) state.roots[\"!ng.\" + propName + \"._inject_\" + inj] = field;","        }","      }","    }","    if (found) state.roots[\"!ng\"] = modObj;","  }","","  function postCondenseReach(state) {","    var mods = infer.cx().parent.mod.angular.modules;","    for (var path in state.types) {","      var m;","      if (m = path.match(/^!ng\\.([^\\.]+)\\._inject_([^\\.]+)^/)) {","        var mod = mods[m[1].replace(/`/g, \".\")];","        var field = mod.injector.fields[m[2]];","        var data = state.types[path];","        if (field.span) data.span = field.span;","        if (field.doc) data.doc = field.doc;","      }","    }","  }","","  function initServer(server) {","    server.mod.angular = {","      modules: Object.create(null),","      pendingImports: Object.create(null),","      nakedModules: []","    };","  }","","  tern.registerPlugin(\"angular\", function(server) {","    initServer(server);","","    server.on(\"reset\", function() { initServer(server); });","    server.on(\"postParse\", postParse)","    server.on(\"postLoadDef\", postLoadDef)","    server.on(\"preCondenseReach\", preCondenseReach)","    server.on(\"postCondenseReach\", postCondenseReach)","","    server.addDefs(defs, true)","  });","","  var defs = {","    \"!name\": \"angular\",","    \"!define\": {","      cacheObj: {","        info: \"fn() -> ?\",","        put: \"fn(key: string, value: ?) -> !1\",","        get: \"fn(key: string) -> ?\",","        remove: \"fn(key: string)\",","        removeAll: \"fn()\",","        destroy: \"fn()\"","      },","      eventObj: {","        targetScope: \"service.$rootScope\",","        currentScope: \"service.$rootScope\",","        name: \"string\",","        stopPropagation: \"fn()\",","        preventDefault: \"fn()\",","        defaultPrevented: \"bool\"","      },","      directiveObj: {","        multiElement: {","          \"!type\": \"bool\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-multielement-\",","          \"!doc\": \"When this property is set to true, the HTML compiler will collect DOM nodes between nodes with the attributes directive-name-start and directive-name-end, and group them together as the directive elements. It is recommended that this feature be used on directives which are not strictly behavioural (such as ngClick), and which do not manipulate or replace child nodes (such as ngInclude).\"","        },","        priority: {","          \"!type\": \"number\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-priority-\",","          \"!doc\": \"When there are multiple directives defined on a single DOM element, sometimes it is necessary to specify the order in which the directives are applied. The priority is used to sort the directives before their compile functions get called. Priority is defined as a number. Directives with greater numerical priority are compiled first. Pre-link functions are also run in priority order, but post-link functions are run in reverse order. The order of directives with the same priority is undefined. The default priority is 0.\"","        },","        terminal: {","          \"!type\": \"bool\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-terminal-\",","          \"!doc\": \"If set to true then the current priority will be the last set of directives which will execute (any directives at the current priority will still execute as the order of execution on same priority is undefined). Note that expressions and other directives used in the directive's template will also be excluded from execution.\"","        },","        scope: {","          \"!type\": \"?\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-scope-\",","          \"!doc\": \"If set to true, then a new scope will be created for this directive. If multiple directives on the same element request a new scope, only one new scope is created. The new scope rule does not apply for the root of the template since the root of the template always gets a new scope. If set to {} (object hash), then a new 'isolate' scope is created. The 'isolate' scope differs from normal scope in that it does not prototypically inherit from the parent scope. This is useful when creating reusable components, which should not accidentally read or modify data in the parent scope.\"","        },","        bindToController: {","          \"!type\": \"bool\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-bindtocontroller-\",","          \"!doc\": \"When an isolate scope is used for a component (see above), and controllerAs is used, bindToController: true will allow a component to have its properties bound to the controller, rather than to scope. When the controller is instantiated, the initial values of the isolate scope bindings are already available.\"","        },","        controller: {","          \"!type\": \"fn()\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-controller-\",","          \"!doc\": \"Controller constructor function. The controller is instantiated before the pre-linking phase and it is shared with other directives (see require attribute). This allows the directives to communicate with each other and augment each other's behavior.\"","        },","        require: {","          \"!type\": \"string\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-require-\",","          \"!doc\": \"Require another directive and inject its controller as the fourth argument to the linking function. The require takes a string name (or array of strings) of the directive(s) to pass in. If an array is used, the injected argument will be an array in corresponding order. If no such directive can be found, or if the directive does not have a controller, then an error is raised.\"","        },","        controllerAs: {","          \"!type\": \"string\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-controlleras-\",","          \"!doc\": \"Controller alias at the directive scope. An alias for the controller so it can be referenced at the directive template. The directive needs to define a scope for this configuration to be used. Useful in the case when directive is used as component.\"","        },","        restrict: {","          \"!type\": \"string\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-restrict-\",","          \"!doc\": \"String of subset of EACM which restricts the directive to a specific directive declaration style. If omitted, the defaults (elements and attributes) are used. E - Element name (default): <my-directive></my-directive>. A - Attribute (default): <div my-directive='exp'></div>. C - Class: <div class='my-directive: exp;'></div>. M - Comment: <!-- directive: my-directive exp --> \"","        },","        templateNamespace: {","          \"!type\": \"string\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-templatenamespace-\",","          \"!doc\": \"String representing the document type used by the markup in the template. AngularJS needs this information as those elements need to be created and cloned in a special way when they are defined outside their usual containers like <svg> and <math>.\"","        },","        template: {","          \"!type\": \"string\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-template-\",","          \"!doc\": \"HTML markup that may: Replace the contents of the directive's element (default). Replace the directive's element itself (if replace is true - DEPRECATED). Wrap the contents of the directive's element (if transclude is true).\"","        },","        templateUrl: {","          \"!type\": \"string\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-templateurl-\",","          \"!doc\": \"This is similar to template but the template is loaded from the specified URL, asynchronously.\"","        },","        transclude: {","          \"!type\": \"bool\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-transclude-\",","          \"!doc\": \"Extract the contents of the element where the directive appears and make it available to the directive. The contents are compiled and provided to the directive as a transclusion function.\"","        },","        compile: {","          \"!type\": \"fn(tElement: +Element, tAttrs: +Attr)\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-transclude-\",","          \"!doc\": \"The compile function deals with transforming the template DOM. Since most directives do not do template transformation, it is not used often.\"","        },","        link: {","          \"!type\": \"fn(scope: ?, iElement: +Element, iAttrs: +Attr, controller: ?, transcludeFn: fn())\",","          \"!url\": \"https://docs.angularjs.org/api/ng/service/$compile#-link-\",","          \"!doc\": \"The link function is responsible for registering DOM listeners as well as updating the DOM. It is executed after the template has been cloned. This is where most of the directive logic will be put.\"","        }","      },","      Module: {","        \"!url\": \"http://docs.angularjs.org/api/angular.Module\",","        \"!doc\": \"Interface for configuring angular modules.\",","        prototype: {","          animation: {","            \"!type\": \"fn(name: string, animationFactory: fn()) -> !this\",","            \"!url\": \"http://docs.angularjs.org/api/angular.Module#animation\",","            \"!doc\": \"Defines an animation hook that can be later used with $animate service and directives that use this service.\"","          },","          config: {","            \"!type\": \"fn(configFn: fn()) -> !this\",","            \"!effects\": [\"custom angular_callInject 0\"],","            \"!url\": \"http://docs.angularjs.org/api/angular.Module#config\",","            \"!doc\": \"Use this method to register work which needs to be performed on module loading.\"","          },","          constant: \"service.$provide.constant\",","          controller: {","            \"!type\": \"fn(name: string, constructor: fn()) -> !this\",","            \"!effects\": [\"custom angular_regFieldCall\"],","            \"!url\": \"http://docs.angularjs.org/api/ng.$controllerProvider\",","            \"!doc\": \"Register a controller.\"","          },","          directive: {","            \"!type\": \"fn(name: string, directiveFactory: fn() -> directiveObj) -> !this\",","            \"!effects\": [\"custom angular_regFieldCall\"],","            \"!url\": \"http://docs.angularjs.org/api/ng.$compileProvider#directive\",","            \"!doc\": \"Register a new directive with the compiler.\"","          },","          factory: \"service.$provide.factory\",","          filter: {","            \"!type\": \"fn(name: string, filterFactory: fn()) -> !this\",","            \"!effects\": [\"custom angular_callInject 1\"],","            \"!url\": \"http://docs.angularjs.org/api/ng.$filterProvider\",","            \"!doc\": \"Register filter factory function.\"","          },","          provider: \"service.$provide.provider\",","          run: {","            \"!type\": \"fn(initializationFn: fn()) -> !this\",","            \"!effects\": [\"custom angular_callInject 0\"],","            \"!url\": \"http://docs.angularjs.org/api/angular.Module#run\",","            \"!doc\": \"Register work which should be performed when the injector is done loading all modules.\"","          },","          service: \"service.$provide.service\",","          value: \"service.$provide.value\",","          name: {","            \"!type\": \"string\",","            \"!url\": \"http://docs.angularjs.org/api/angular.Module#name\",","            \"!doc\": \"Name of the module.\"","          },","          requires: {","            \"!type\": \"[string]\",","            \"!url\": \"http://docs.angularjs.org/api/angular.Module#requires\",","            \"!doc\": \"List of module names which must be loaded before this module.\"","          }","        }","      },","      Promise: {","        \"!url\": \"http://docs.angularjs.org/api/ng.$q\",","        \"!doc\": \"Allow for interested parties to get access to the result of the deferred task when it completes.\",","        prototype: {","          then: \"fn(successCallback: fn(value: ?), errorCallback: fn(reason: ?), notifyCallback: fn(value: ?)) -> +Promise\",","          \"catch\": \"fn(errorCallback: fn(reason: ?))\",","          \"finally\": \"fn(callback: fn()) -> +Promise\",","          success: \"fn(callback: fn(data: ?, status: number, headers: ?, config: ?)) -> +Promise\",","          error: \"fn(callback: fn(data: ?, status: number, headers: ?, config: ?)) -> +Promise\"","        }","      },","      Deferred: {","        \"!url\": \"http://docs.angularjs.org/api/ng.$q\",","        prototype: {","          resolve: \"fn(value: ?)\",","          reject: \"fn(reason: ?)\",","          notify: \"fn(value: ?)\",","          promise: \"+Promise\"","        }","      },","      ResourceClass: {","        \"!url\": \"http://docs.angularjs.org/api/ngResource.$resource\",","        prototype: {","          $promise: \"+Promise\",","          $save: \"fn()\"","        }","      },","      Resource: {","        \"!url\": \"http://docs.angularjs.org/api/ngResource.$resource\",","        prototype: {","          get: \"fn(params: ?, callback: fn()) -> +ResourceClass\",","          save: \"fn(params: ?, callback: fn()) -> +ResourceClass\",","          query: \"fn(params: ?, callback: fn()) -> +ResourceClass\",","          remove: \"fn(params: ?, callback: fn()) -> +ResourceClass\",","          \"delete\": \"fn(params: ?, callback: fn()) -> +ResourceClass\"","        }","      },","      service: {","        $anchorScroll: {","          \"!type\": \"fn()\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$anchorScroll\",","          \"!doc\": \"Checks current value of $location.hash() and scroll to related element.\"","        },","        $animate: {","          \"!url\": \"http://docs.angularjs.org/api/ng.$animate\",","          \"!doc\": \"Rudimentary DOM manipulation functions to insert, remove, move elements within the DOM.\",","          addClass: {","            \"!type\": \"fn(element: +Element, className: string, done?: fn()) -> !this\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$animate#addClass\",","            \"!doc\": \"Adds the provided className CSS class value to the provided element.\"","          },","          enter: {","            \"!type\": \"fn(element: +Element, parent: +Element, after: +Element, done?: fn()) -> !this\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$animate#enter\",","            \"!doc\": \"Inserts the element into the DOM either after the after element or within the parent element.\"","          },","          leave: {","            \"!type\": \"fn(element: +Element, done?: fn()) -> !this\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$animate#leave\",","            \"!doc\": \"Removes the element from the DOM.\"","          },","          move: {","            \"!type\": \"fn(element: +Element, parent: +Element, after: +Element, done?: fn()) -> !this\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$animate#move\",","            \"!doc\": \"Moves element to be placed either after the after element or inside of the parent element.\"","          },","          removeClass: {","            \"!type\": \"fn(element: +Element, className: string, done?: fn()) -> !this\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$animate#removeClass\",","            \"!doc\": \"Removes the provided className CSS class value from the provided element.\"","          }","        },","        $cacheFactory: {","          \"!type\": \"fn(cacheId: string, options?: ?) -> cacheObj\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$cacheFactory\",","          \"!doc\": \"Factory that constructs cache objects and gives access to them.\"","        },","        $compile: {","          \"!type\": \"fn(element: +Element, transclude: fn(scope: ?), maxPriority: number)\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$compile\",","          \"!doc\": \"Compiles a piece of HTML string or DOM into a template and produces a template function.\"","        },","        $controller: {","          \"!type\": \"fn(controller: fn(), locals: ?) -> ?\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$controller\",","          \"!doc\": \"Instantiates controllers.\"","        },","        $document: {","          \"!type\": \"jQuery.fn\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$document\",","          \"!doc\": \"A jQuery (lite)-wrapped reference to the browser's window.document element.\"","        },","        $exceptionHandler: {","          \"!type\": \"fn(exception: +Error, cause?: string)\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$exceptionHandler\",","          \"!doc\": \"Any uncaught exception in angular expressions is delegated to this service.\"","        },","        $filter: {","          \"!type\": \"fn(name: string) -> fn(input: string) -> string\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$filter\",","          \"!doc\": \"Retrieve a filter function.\"","        },","        $http: {","          \"!type\": \"fn(config: ?) -> service.$q\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$http\",","          \"!doc\": \"Facilitates communication with remote HTTP servers.\",","          \"delete\": \"fn(url: string, config?: ?) -> +Promise\",","          get: \"fn(url: string, config?: ?) -> +Promise\",","          head: \"fn(url: string, config?: ?) -> +Promise\",","          jsonp: \"fn(url: string, config?: ?) -> +Promise\",","          post: \"fn(url: string, data: ?, config?: ?) -> +Promise\",","          put: \"fn(url: string, data: ?, config?: ?) -> +Promise\"","        },","        $interpolate: {","          \"!type\": \"fn(text: string, mustHaveExpression?: bool, trustedContext?: string) -> fn(context: ?) -> string\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$interpolate\",","          \"!doc\": \"Compiles a string with markup into an interpolation function.\"","        },","        $locale: {","          \"!url\": \"http://docs.angularjs.org/api/ng.$locale\",","          id: \"string\"","        },","        $location: {","          \"!url\": \"http://docs.angularjs.org/api/ng.$location\",","          \"!doc\": \"Parses the URL in the browser address bar.\",","          absUrl: {","            \"!type\": \"fn() -> string\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$location#absUrl\",","            \"!doc\": \"Return full url representation.\"","          },","          hash: {","            \"!type\": \"fn(value?: string) -> string\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$location#hash\",","            \"!doc\": \"Get or set the hash fragment.\"","          },","          host: {","            \"!type\": \"fn() -> string\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$location#host\",","            \"!doc\": \"Return host of current url.\"","          },","          path: {","            \"!type\": \"fn(value?: string) -> string\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$location#path\",","            \"!doc\": \"Get or set the URL path.\"","          },","          port: {","            \"!type\": \"fn() -> number\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$location#port\",","            \"!doc\": \"Returns the port of the current url.\"","          },","          protocol: {","            \"!type\": \"fn() -> string\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$location#protocol\",","            \"!doc\": \"Return protocol of current url.\"","          },","          replace: {","            \"!type\": \"fn()\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$location#replace\",","            \"!doc\": \"Changes to $location during current $digest will be replacing current history record, instead of adding new one.\"","          },","          search: {","            \"!type\": \"fn(search: string, paramValue?: string) -> string\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$location#search\",","            \"!doc\": \"Get or set the URL query.\"","          },","          url: {","            \"!type\": \"fn(url: string, replace?: string) -> string\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$location#url\",","            \"!doc\": \"Get or set the current url.\"","          }","        },","        $log: {","          \"!url\": \"http://docs.angularjs.org/api/ng.$log\",","          \"!doc\": \"Simple service for logging.\",","          debug: {","            \"!type\": \"fn(message: string)\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$log#debug\",","            \"!doc\": \"Write a debug message.\"","          },","          error: {","            \"!type\": \"fn(message: string)\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$log#error\",","            \"!doc\": \"Write an error message.\"","          },","          info: {","            \"!type\": \"fn(message: string)\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$log#info\",","            \"!doc\": \"Write an info message.\"","          },","          log: {","            \"!type\": \"fn(message: string)\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$log#log\",","            \"!doc\": \"Write a log message.\"","          },","          warn: {","            \"!type\": \"fn(message: string)\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$log#warn\",","            \"!doc\": \"Write a warning message.\"","          }","        },","        $parse: {","          \"!type\": \"fn(expression: string) -> fn(context: ?, locals: ?) -> ?\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$parse\",","          \"!doc\": \"Converts Angular expression into a function.\"","        },","        $q: {","          \"!type\": \"fn(executor: fn(resolve: fn(value: ?) -> +Promise, reject: fn(value: ?) -> +Promise)) -> +Promise\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$q\",","          \"!doc\": \"A promise/deferred implementation.\",","          all: {","            \"!type\": \"fn(promises: [+Promise]) -> +Promise\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$q#all\",","            \"!doc\": \"Combines multiple promises into a single promise.\"","          },","          defer: {","            \"!type\": \"fn() -> +Deferred\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$q#defer\",","            \"!doc\": \"Creates a Deferred object which represents a task which will finish in the future.\"","          },","          reject: {","            \"!type\": \"fn(reason: ?) -> +Promise\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$q#reject\",","            \"!doc\": \"Creates a promise that is resolved as rejected with the specified reason.\"","          },","          when: {","            \"!type\": \"fn(value: ?) -> +Promise\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$q#when\",","            \"!doc\": \"Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\"","          }","        },","        $rootElement: {","          \"!type\": \"+Element\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$rootElement\",","          \"!doc\": \"The root element of Angular application.\"","        },","        $rootScope: {","          \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope\",","          $apply: {","            \"!type\": \"fn(expression: string)\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$apply\",","            \"!doc\": \"Execute an expression in angular from outside of the angular framework.\"","          },","          $broadcast: {","            \"!type\": \"fn(name: string, args?: ?) -> eventObj\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$broadcast\",","            \"!doc\": \"Dispatches an event name downwards to all child scopes.\"","          },","          $destroy: {","            \"!type\": \"fn()\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$destroy\",","            \"!doc\": \"Removes the current scope (and all of its children) from the parent scope.\"","          },","          $digest: {","            \"!type\": \"fn()\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$digest\",","            \"!doc\": \"Processes all of the watchers of the current scope and its children.\"","          },","          $emit: {","            \"!type\": \"fn(name: string, args?: ?) -> eventObj\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$emit\",","            \"!doc\": \"Dispatches an event name upwards through the scope hierarchy.\"","          },","          $eval: {","            \"!type\": \"fn(expression: string) -> ?\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$eval\",","            \"!doc\": \"Executes the expression on the current scope and returns the result.\"","          },","          $evalAsync: {","            \"!type\": \"fn(expression: string)\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$evalAsync\",","            \"!doc\": \"Executes the expression on the current scope at a later point in time.\"","          },","          $new: {","            \"!type\": \"fn(isolate: bool) -> service.$rootScope\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$new\",","            \"!doc\": \"Creates a new child scope.\"","          },","          $on: {","            \"!type\": \"fn(name: string, listener: fn(event: ?)) -> fn()\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$on\",","            \"!doc\": \"Listens on events of a given type.\"","          },","          $watch: {","            \"!type\": \"fn(watchExpression: string, listener?: fn(), objectEquality?: bool) -> fn()\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$watch\",","            \"!doc\": \"Registers a listener callback to be executed whenever the watchExpression changes.\"","          },","          $watchCollection: {","            \"!type\": \"fn(obj: string, listener: fn()) -> fn()\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$watchCollection\",","            \"!doc\": \"Shallow watches the properties of an object and fires whenever any of the properties.\"","          },","          $id: {","            \"!type\": \"number\",","            \"!url\": \"http://docs.angularjs.org/api/ng.$rootScope.Scope#$id\",","            \"!doc\": \"Unique scope ID.\"","          }","        },","        $sce: {","          HTML: \"string\",","          CSS: \"string\",","          URL: \"string\",","          RESOURCE_URL: \"string\",","          JS: \"string\",","          getTrusted: \"fn(type: string, maybeTrusted: ?) -> !1\",","          getTrustedCss: \"fn(maybeTrusted: ?) -> !0\",","          getTrustedHtml: \"fn(maybeTrusted: ?) -> !0\",","          getTrustedJs: \"fn(maybeTrusted: ?) -> !0\",","          getTrustedResourceUrl: \"fn(maybeTrusted: ?) -> !0\",","          getTrustedUrl: \"fn(maybeTrusted: ?) -> !0\",","          parse: \"fn(type: string, expression: string) -> fn(context: ?, locals: ?) -> ?\",","          parseAsCss: \"fn(expression: string) -> fn(context: ?, locals: ?) -> ?\",","          parseAsHtml: \"fn(expression: string) -> fn(context: ?, locals: ?) -> ?\",","          parseAsJs: \"fn(expression: string) -> fn(context: ?, locals: ?) -> ?\",","          parseAsResourceUrl: \"fn(expression: string) -> fn(context: ?, locals: ?) -> ?\",","          parseAsUrl: \"fn(expression: string) -> fn(context: ?, locals: ?) -> ?\",","          trustAs: \"fn(type: string, value: ?) -> !1\",","          trustAsHtml: \"fn(value: ?) -> !0\",","          trustAsJs: \"fn(value: ?) -> !0\",","          trustAsResourceUrl: \"fn(value: ?) -> !0\",","          trustAsUrl: \"fn(value: ?) -> !0\",","          isEnabled: \"fn() -> bool\"","        },","        $templateCache: {","          \"!url\": \"http://docs.angularjs.org/api/ng.$templateCache\",","          \"!proto\": \"cacheObj\"","        },","        $timeout: {","          \"!type\": \"fn(fn: fn(), delay?: number, invokeApply?: bool) -> +Promise\",","          \"!url\": \"http://docs.angularjs.org/api/ng.$timeout\",","          \"!doc\": \"Angular's wrapper for window.setTimeout.\",","          cancel: \"fn(promise: +Promise)\"","        },","        $window: \"<top>\",","        $injector: {","          \"!url\": \"http://docs.angularjs.org/api/AUTO.$injector\",","          \"!doc\": \"Retrieve object instances as defined by provider.\",","          annotate: {","            \"!type\": \"fn(f: fn()) -> [string]\",","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$injector#annotate\",","            \"!doc\": \"Returns an array of service names which the function is requesting for injection.\"","          },","          get: {","            \"!type\": \"fn(name: string) -> ?\",","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$injector#get\",","            \"!doc\": \"Return an instance of a service.\"","          },","          has: {","            \"!type\": \"fn(name: string) -> bool\",","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$injector#has\",","            \"!doc\": \"Allows the user to query if the particular service exist.\"","          },","          instantiate: {","            \"!type\": \"fn(type: fn(), locals?: ?) -> +!0\",","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$injector#instantiate\",","            \"!doc\": \"Create a new instance of JS type.\"","          },","          invoke: {","            \"!type\": \"fn(type: fn(), self?: ?, locals?: ?) -> !0.!ret\",","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$injector#invoke\",","            \"!doc\": \"Invoke the method and supply the method arguments from the $injector.\"","          }","        },","        $provide: {","          \"!url\": \"http://docs.angularjs.org/api/AUTO.$provide\",","          \"!doc\": \"Use $provide to register new providers with the $injector.\",","          constant: {","            \"!type\": \"fn(name: string, value: ?) -> !this\",","            \"!effects\": [\"custom angular_regField\"],","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$provide#constant\",","            \"!doc\": \"A constant value.\"","          },","          decorator: {","            \"!type\": \"fn(name: string, decorator: fn())\",","            \"!effects\": [\"custom angular_regFieldCall\"],","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$provide#decorator\",","            \"!doc\": \"Decoration of service, allows the decorator to intercept the service instance creation.\"","          },","          factory: {","            \"!type\": \"fn(name: string, providerFunction: fn()) -> !this\",","            \"!effects\": [\"custom angular_regFieldCall\"],","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$provide#factory\",","            \"!doc\": \"A short hand for configuring services if only $get method is required.\"","          },","          provider: {","            \"!type\": \"fn(name: string, providerType: fn()) -> !this\",","            \"!effects\": [\"custom angular_regFieldCall\"],","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$provide#provider\",","            \"!doc\": \"Register a provider for a service.\"","          },","          service: {","            \"!type\": \"fn(name: string, constructor: fn()) -> !this\",","            \"!effects\": [\"custom angular_regFieldNew\"],","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$provide#provider\",","            \"!doc\": \"Register a provider for a service.\"","          },","          value: {","            \"!type\": \"fn(name: string, object: ?) -> !this\",","            \"!effects\": [\"custom angular_regField\"],","            \"!url\": \"http://docs.angularjs.org/api/AUTO.$providevalue\",","            \"!doc\": \"A short hand for configuring services if the $get method is a constant.\"","          }","        },","        $cookies: {","          \"!url\": \"http://docs.angularjs.org/api/ngCookies.$cookies\",","          \"!doc\": \"Provides read/write access to browser's cookies.\",","          text: \"string\"","        },","        $resource: {","          \"!type\": \"fn(url: string, paramDefaults?: ?, actions?: ?) -> +Resource\",","          \"!url\": \"http://docs.angularjs.org/api/ngResource.$resource\",","          \"!doc\": \"Creates a resource object that lets you interact with RESTful server-side data sources.\"","        },","        $route: {","          \"!url\": \"http://docs.angularjs.org/api/ngRoute.$route\",","          \"!doc\": \"Deep-link URLs to controllers and views.\",","          reload: {","            \"!type\": \"fn()\",","            \"!url\": \"http://docs.angularjs.org/api/ngRoute.$route#reload\",","            \"!doc\": \"Reload the current route even if $location hasn't changed.\"","          },","          current: {","            \"!url\": \"http://docs.angularjs.org/api/ngRoute.$route#current\",","            \"!doc\": \"Reference to the current route definition.\",","            controller: \"?\",","            locals: \"?\"","          },","          routes: \"[?]\"","        },","        $sanitize: {","          \"!type\": \"fn(string) -> string\",","          \"!url\": \"http://docs.angularjs.org/api/ngSanitize.$sanitize\",","          \"!doc\": \"Sanitize HTML input.\"","        },","        $swipe: {","          \"!url\": \"http://docs.angularjs.org/api/ngTouch.$swipe\",","          \"!doc\": \"A service that abstracts the messier details of hold-and-drag swipe behavior.\",","          bind: {","            \"!type\": \"fn(element: +Element, handlers: ?)\",","            \"!url\": \"http://docs.angularjs.org/api/ngTouch.$swipe#bind\",","            \"!doc\": \"Abstracts the messier details of hold-and-drag swipe behavior.\"","          }","        }","      }","    },","    angular: {","      bind: {","        \"!type\": \"fn(self: ?, fn: fn(), args?: ?) -> !custom:angular_bind\",","        \"!url\": \"http://docs.angularjs.org/api/angular.bind\",","        \"!doc\": \"Returns a function which calls function fn bound to self.\"","      },","      bootstrap: {","        \"!type\": \"fn(element: +Element, modules?: [string]) -> service.$injector\",","        \"!url\": \"http://docs.angularjs.org/api/angular.bootstrap\",","        \"!doc\": \"Use this function to manually start up angular application.\"","      },","      copy: {","        \"!type\": \"fn(source: ?, target?: ?) -> !0\",","        \"!url\": \"http://docs.angularjs.org/api/angular.copy\",","        \"!doc\": \"Creates a deep copy of source, which should be an object or an array.\"","      },","      element: {","        \"!type\": \"fn(element: +Element) -> jQuery.fn\",","        \"!url\": \"http://docs.angularjs.org/api/angular.element\",","        \"!doc\": \"Wraps a raw DOM element or HTML string as a jQuery element.\"","      },","      equals: {","        \"!type\": \"fn(o1: ?, o2: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.equals\",","        \"!doc\": \"Determines if two objects or two values are equivalent.\"","      },","      extend: {","        \"!type\": \"fn(dst: ?, src: ?) -> !0\",","        \"!url\": \"http://docs.angularjs.org/api/angular.extend\",","        \"!doc\": \"Extends the destination object dst by copying all of the properties from the src object(s) to dst.\"","      },","      forEach: {","        \"!type\": \"fn(obj: ?, iterator: fn(value: ?, key: ?), context?: ?) -> !0\",","        \"!effects\": [\"call !1 this=!2 !0.<i> number\"],","        \"!url\": \"http://docs.angularjs.org/api/angular.forEach\",","        \"!doc\": \"Invokes the iterator function once for each item in obj collection, which can be either an object or an array.\"","      },","      fromJson: {","        \"!type\": \"fn(json: string) -> ?\",","        \"!url\": \"http://docs.angularjs.org/api/angular.fromJson\",","        \"!doc\": \"Deserializes a JSON string.\"","      },","      identity: {","        \"!type\": \"fn(val: ?) -> !0\",","        \"!url\": \"http://docs.angularjs.org/api/angular.identity\",","        \"!doc\": \"A function that returns its first argument.\"","      },","      injector: {","        \"!type\": \"fn(modules: [string]) -> service.$injector\",","        \"!url\": \"http://docs.angularjs.org/api/angular.injector\",","        \"!doc\": \"Creates an injector function\"","      },","      isArray: {","        \"!type\": \"fn(val: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.isArray\",","        \"!doc\": \"Determines if a reference is an Array.\"","      },","      isDate: {","        \"!type\": \"fn(val: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.isDate\",","        \"!doc\": \"Determines if a reference is a date.\"","      },","      isDefined: {","        \"!type\": \"fn(val: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.isDefined\",","        \"!doc\": \"Determines if a reference is defined.\"","      },","      isElement: {","        \"!type\": \"fn(val: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.isElement\",","        \"!doc\": \"Determines if a reference is a DOM element.\"","      },","      isFunction: {","        \"!type\": \"fn(val: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.isFunction\",","        \"!doc\": \"Determines if a reference is a function.\"","      },","      isNumber: {","        \"!type\": \"fn(val: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.isNumber\",","        \"!doc\": \"Determines if a reference is a number.\"","      },","      isObject: {","        \"!type\": \"fn(val: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.isObject\",","        \"!doc\": \"Determines if a reference is an object.\"","      },","      isString: {","        \"!type\": \"fn(val: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.isString\",","        \"!doc\": \"Determines if a reference is a string.\"","      },","      isUndefined: {","        \"!type\": \"fn(val: ?) -> bool\",","        \"!url\": \"http://docs.angularjs.org/api/angular.isUndefined\",","        \"!doc\": \"Determines if a reference is undefined.\"","      },","      lowercase: {","        \"!type\": \"fn(val: string) -> string\",","        \"!url\": \"http://docs.angularjs.org/api/angular.lowercase\",","        \"!doc\": \"Converts the specified string to lowercase.\"","      },","      module: {","        \"!type\": \"fn(name: string, deps: [string]) -> !custom:angular_module\",","        \"!url\": \"http://docs.angularjs.org/api/angular.module\",","        \"!doc\": \"A global place for creating, registering and retrieving Angular modules.\"","      },","      Module: \"Module\",","      noop: {","        \"!type\": \"fn()\",","        \"!url\": \"http://docs.angularjs.org/api/angular.noop\",","        \"!doc\": \"A function that performs no operations.\"","      },","      toJson: {","        \"!type\": \"fn(val: ?) -> string\",","        \"!url\": \"http://docs.angularjs.org/api/angular.toJson\",","        \"!doc\": \"Serializes input into a JSON-formatted string.\"","      },","      uppercase: {","        \"!type\": \"fn(string) -> string\",","        \"!url\": \"http://docs.angularjs.org/api/angular.uppercase\",","        \"!doc\": \"Converts the specified string to uppercase.\"","      },","      version: {","        \"!url\": \"http://docs.angularjs.org/api/angular.version\",","        full: \"string\",","        major: \"number\",","        minor: \"number\",","        dot: \"number\",","        codename: \"string\"","      }","    }","  };","});",""],"l":{"1":1,"2":1,"3":1,"5":0,"6":0,"7":0,"11":1,"12":0,"14":0,"18":1,"19":0,"20":0,"23":1,"24":0,"25":0,"26":0,"27":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":1,"42":0,"43":0,"44":0,"45":0,"49":1,"50":0,"51":0,"54":1,"55":0,"56":0,"57":0,"58":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"72":0,"74":0,"75":0,"76":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"85":0,"87":0,"90":1,"91":0,"92":0,"93":0,"94":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"116":1,"117":0,"118":0,"119":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"130":0,"133":1,"134":0,"135":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"162":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"174":1,"176":0,"179":0,"180":0,"182":0,"183":0,"184":0,"188":1,"189":0,"190":0,"191":0,"192":0,"195":1,"196":0,"198":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"213":1,"214":0,"215":0,"216":0,"217":0,"218":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"232":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"254":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"271":1,"272":0,"279":1,"280":0,"282":0,"283":0,"284":0,"285":0,"286":0,"288":0,"291":1}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/commonjs.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/commonjs.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":15}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":25}}},"3":{"name":"initScope","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":28}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":36},"end":{"line":25,"column":69}}},"5":{"name":"isStaticRequire","line":36,"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":33}}},"6":{"name":"isModuleName","line":42,"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":30}}},"7":{"name":"(anonymous_7)","line":46,"loc":{"start":{"line":46,"column":42},"end":{"line":46,"column":57}}},"8":{"name":"isImport","line":50,"loc":{"start":{"line":50,"column":2},"end":{"line":50,"column":26}}},"9":{"name":"hasProps","line":61,"loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":25}}},"10":{"name":"(anonymous_10)","line":65,"loc":{"start":{"line":65,"column":34},"end":{"line":65,"column":51}}},"11":{"name":"(anonymous_11)","line":68,"loc":{"start":{"line":68,"column":40},"end":{"line":68,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":153,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":3,"column":85}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":85}},"4":{"start":{"line":4,"column":2},"end":{"line":5,"column":68}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":68}},"6":{"start":{"line":6,"column":2},"end":{"line":6,"column":17}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":28}},"8":{"start":{"line":12,"column":2},"end":{"line":23,"column":3}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":46}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":52}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":74}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":45}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":37}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":49}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":61}},"16":{"start":{"line":20,"column":4},"end":{"line":20,"column":47}},"17":{"start":{"line":21,"column":4},"end":{"line":21,"column":65}},"18":{"start":{"line":22,"column":4},"end":{"line":22,"column":55}},"19":{"start":{"line":25,"column":2},"end":{"line":34,"column":4}},"20":{"start":{"line":26,"column":4},"end":{"line":27,"column":24}},"21":{"start":{"line":27,"column":6},"end":{"line":27,"column":24}},"22":{"start":{"line":28,"column":4},"end":{"line":28,"column":43}},"23":{"start":{"line":29,"column":4},"end":{"line":29,"column":49}},"24":{"start":{"line":31,"column":4},"end":{"line":31,"column":32}},"25":{"start":{"line":32,"column":4},"end":{"line":32,"column":70}},"26":{"start":{"line":33,"column":4},"end":{"line":33,"column":19}},"27":{"start":{"line":36,"column":2},"end":{"line":40,"column":3}},"28":{"start":{"line":37,"column":4},"end":{"line":37,"column":114}},"29":{"start":{"line":37,"column":108},"end":{"line":37,"column":114}},"30":{"start":{"line":38,"column":4},"end":{"line":38,"column":31}},"31":{"start":{"line":39,"column":4},"end":{"line":39,"column":86}},"32":{"start":{"line":39,"column":70},"end":{"line":39,"column":86}},"33":{"start":{"line":42,"column":2},"end":{"line":48,"column":3}},"34":{"start":{"line":43,"column":4},"end":{"line":43,"column":71}},"35":{"start":{"line":43,"column":65},"end":{"line":43,"column":71}},"36":{"start":{"line":45,"column":4},"end":{"line":46,"column":95}},"37":{"start":{"line":46,"column":59},"end":{"line":46,"column":93}},"38":{"start":{"line":47,"column":4},"end":{"line":47,"column":65}},"39":{"start":{"line":47,"column":48},"end":{"line":47,"column":65}},"40":{"start":{"line":50,"column":2},"end":{"line":59,"column":3}},"41":{"start":{"line":51,"column":4},"end":{"line":51,"column":41}},"42":{"start":{"line":51,"column":35},"end":{"line":51,"column":41}},"43":{"start":{"line":52,"column":4},"end":{"line":52,"column":112}},"44":{"start":{"line":53,"column":4},"end":{"line":53,"column":45}},"45":{"start":{"line":53,"column":39},"end":{"line":53,"column":45}},"46":{"start":{"line":54,"column":4},"end":{"line":54,"column":29}},"47":{"start":{"line":55,"column":4},"end":{"line":56,"column":37}},"48":{"start":{"line":56,"column":6},"end":{"line":56,"column":37}},"49":{"start":{"line":57,"column":4},"end":{"line":58,"column":51}},"50":{"start":{"line":58,"column":6},"end":{"line":58,"column":51}},"51":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"52":{"start":{"line":62,"column":4},"end":{"line":62,"column":47}},"53":{"start":{"line":62,"column":13},"end":{"line":62,"column":47}},"54":{"start":{"line":62,"column":36},"end":{"line":62,"column":47}},"55":{"start":{"line":65,"column":2},"end":{"line":80,"column":4}},"56":{"start":{"line":66,"column":4},"end":{"line":66,"column":32}},"57":{"start":{"line":67,"column":4},"end":{"line":67,"column":49}},"58":{"start":{"line":68,"column":4},"end":{"line":72,"column":6}},"59":{"start":{"line":69,"column":6},"end":{"line":69,"column":38}},"60":{"start":{"line":70,"column":6},"end":{"line":71,"column":30}},"61":{"start":{"line":71,"column":8},"end":{"line":71,"column":30}},"62":{"start":{"line":74,"column":4},"end":{"line":74,"column":54}},"63":{"start":{"line":75,"column":4},"end":{"line":75,"column":49}},"64":{"start":{"line":76,"column":4},"end":{"line":76,"column":57}},"65":{"start":{"line":77,"column":4},"end":{"line":77,"column":54}},"66":{"start":{"line":79,"column":4},"end":{"line":79,"column":24}},"67":{"start":{"line":82,"column":2},"end":{"line":152,"column":3}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":61}}]},"3":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":6},"end":{"line":4,"column":33}},{"start":{"line":4,"column":37},"end":{"line":4,"column":47}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"6":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":17}},{"start":{"line":26,"column":21},"end":{"line":26,"column":37}},{"start":{"line":26,"column":41},"end":{"line":26,"column":70}},{"start":{"line":26,"column":74},"end":{"line":26,"column":110}}]},"7":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"8":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":37}},{"start":{"line":37,"column":41},"end":{"line":37,"column":73}},{"start":{"line":37,"column":77},"end":{"line":37,"column":106}}]},"9":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"10":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":11}},{"start":{"line":39,"column":15},"end":{"line":39,"column":36}},{"start":{"line":39,"column":40},"end":{"line":39,"column":68}}]},"11":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"12":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":30}},{"start":{"line":43,"column":34},"end":{"line":43,"column":63}}]},"13":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"14":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":12}},{"start":{"line":47,"column":16},"end":{"line":47,"column":46}}]},"15":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"16":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"17":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":13}},{"start":{"line":53,"column":17},"end":{"line":53,"column":37}}]},"18":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"19":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":12}},{"start":{"line":55,"column":16},"end":{"line":55,"column":54}}]},"20":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"21":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":12}},{"start":{"line":57,"column":16},"end":{"line":57,"column":47}},{"start":{"line":57,"column":51},"end":{"line":57,"column":65}},{"start":{"line":57,"column":69},"end":{"line":57,"column":114}}]},"22":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"23":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"24":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":10},"end":{"line":70,"column":34}},{"start":{"line":70,"column":38},"end":{"line":70,"column":68}}]}},"code":["(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(require(\"../lib/infer\"), require(\"../lib/tern\"), require(\"./modules\"))","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"../lib/infer\", \"../lib/tern\", \"./modules\"], mod)","  mod(tern, tern)","})(function(infer, tern) {","  \"use strict\"","","  var WG_DEFAULT_EXPORT = 95","","  function initScope(scope) {","    var defs = infer.cx().definitions.commonjs","    defs.require.propagate(scope.defProp(\"require\"))","    var module = new infer.Obj(defs.Module.getProp(\"prototype\").getType())","    module.propagate(scope.defProp(\"module\"))","    var exports = new infer.Obj(true)","    module.origin = exports.origin = scope.origin","    module.originNode = exports.originNode = scope.originNode","    exports.propagate(scope.defProp(\"exports\"))","    var moduleExports = scope.exports = module.defProp(\"exports\")","    exports.propagate(moduleExports, WG_DEFAULT_EXPORT)","  }","","  infer.registerFunction(\"require\", function(_self, _args, argNodes) {","    if (!argNodes || !argNodes.length || argNodes[0].type != \"Literal\" || typeof argNodes[0].value != \"string\")","      return infer.ANull","    var cx = infer.cx(), server = cx.parent","    var currentFile = argNodes[0].sourceFile.name","","    var name = argNodes[0].value","    var resolved = server.mod.modules.resolveModule(name, currentFile)","    return resolved","  })","","  function isStaticRequire(node) {","    if (node.type != \"CallExpression\" || node.callee.type != \"Identifier\" || node.callee.name != \"require\") return","    var arg = node.arguments[0]","    if (arg && arg.type == \"Literal\" && typeof arg.value == \"string\") return arg.value","  }","","  function isModuleName(node) {","    if (node.type != \"Literal\" || typeof node.value != \"string\") return","","    var call = infer.findExpressionAround(node.sourceFile.ast, null, node.end, null,","                                          function(_, n) { return isStaticRequire(n) != null })","    if (call && call.node.arguments[0] == node) return node.value","  }","","  function isImport(node) {","    if (node.type != \"Identifier\") return","    var decl = infer.findExpressionAround(node.sourceFile.ast, null, node.end, null, \"VariableDeclarator\"), name","    if (!decl || decl.node.id != node) return","    var init = decl.node.init","    if (init && (name = isStaticRequire(init)) != null)","      return {name: name, prop: null}","    if (init && init.type == \"MemberExpression\" && !init.computed && (name = isStaticRequire(init.object)) != null)","      return {name: name, prop: init.property.name}","  }","","  function hasProps(obj) {","    if (obj) for (var _prop in obj) return true","  }","","  tern.registerPlugin(\"commonjs\", function(server) {","    server.loadPlugin(\"modules\")","    server.mod.modules.on(\"wrapScope\", initScope)","    server.mod.modules.on(\"getExports\", function(file, mod) {","      var exports = file.scope.exports","      if (exports.types.length > 1 || hasProps(exports.getObjType()))","        exports.propagate(mod)","    })","","    server.mod.modules.modNameTests.push(isModuleName)","    server.mod.modules.importTests.push(isImport)","    server.mod.modules.completableTypes.Identifier = true","    server.mod.modules.completableTypes.Literal = true","","    server.addDefs(defs)","  })","","  var defs = {","    \"!name\": \"commonjs\",","    \"!define\": {","      require: {","        \"!type\": \"fn(id: string) -> !custom:require\",","        resolve: {","          \"!type\": \"fn() -> string\",","          \"!url\": \"https://nodejs.org/api/globals.html#globals_require_resolve\",","          \"!doc\": \"Use the internal require() machinery to look up the location of a module, but rather than loading the module, just return the resolved filename.\"","        },","        cache: {","          \"!url\": \"https://nodejs.org/api/globals.html#globals_require_cache\",","          \"!doc\": \"Modules are cached in this object when they are required. By deleting a key value from this object, the next require will reload the module.\"","        },","        extensions: {","          \"!url\": \"https://nodejs.org/api/globals.html#globals_require_extensions\",","          \"!doc\": \"Instruct require on how to handle certain file extensions.\"","        },","        \"!url\": \"https://nodejs.org/api/globals.html#globals_require\",","        \"!doc\": \"To require modules.\"","      },","      Module: {","        \"!type\": \"fn()\",","        \"!url\": \"https://nodejs.org/api/modules.html\",","        \"!doc\": \"Node has a simple module loading system. In Node, files and modules are in one-to-one correspondence.\",","        prototype: {","          exports: {","            \"!type\": \"?\",","            \"!url\": \"https://nodejs.org/api/modules.html#modules_module_exports\",","            \"!doc\": \"The exports object is created by the Module system. Sometimes this is not acceptable, many want their module to be an instance of some class. To do this assign the desired export object to module.exports. For example suppose we were making a module called a.js\"","          },","          require: {","            \"!type\": \"require\",","            \"!url\": \"https://nodejs.org/api/modules.html#modules_module_require_id\",","            \"!doc\": \"The module.require method provides a way to load a module as if require() was called from the original module.\"","          },","          id: {","            \"!type\": \"string\",","            \"!url\": \"https://nodejs.org/api/modules.html#modules_module_id\",","            \"!doc\": \"The identifier for the module. Typically this is the fully resolved filename.\"","          },","          filename: {","            \"!type\": \"string\",","            \"!url\": \"https://nodejs.org/api/modules.html#modules_module_filename\",","            \"!doc\": \"The fully resolved filename to the module.\"","          },","          loaded: {","            \"!type\": \"bool\",","            \"!url\": \"https://nodejs.org/api/modules.html#modules_module_loaded\",","            \"!doc\": \"Whether or not the module is done loading, or is in the process of loading.\"","          },","          parent: {","            \"!type\": \"+Module\",","            \"!url\": \"https://nodejs.org/api/modules.html#modules_module_parent\",","            \"!doc\": \"The module that required this one.\"","          },","          children: {","            \"!type\": \"[+Module]\",","            \"!url\": \"https://nodejs.org/api/modules.html#modules_module_children\",","            \"!doc\": \"The module objects required by this one.\"","          }","        }","      },","      module: {}","    },","    module: {","      \"!type\": \"+Module\",","      \"!url\": \"https://nodejs.org/api/globals.html#globals_module\",","      \"!doc\": \"A reference to the current module. In particular module.exports is the same as the exports object. module isn't actually a global but rather local to each module.\"","    }","  }","})",""],"l":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"10":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"25":1,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"36":1,"37":0,"38":0,"39":0,"42":1,"43":0,"45":0,"46":0,"47":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"61":1,"62":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"74":0,"75":0,"76":0,"77":0,"79":0,"82":1}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/modules.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/modules.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":1,"139":1,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1,"161":0,"162":1,"163":0,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":1,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":1,"272":1,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[1,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0,0],"104":[0,0,0],"105":[0,0],"106":[0,0],"107":[0,0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":15}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":42}}},"3":{"name":"Modules","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":36}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":55}}},"5":{"name":"(anonymous_5)","line":30,"loc":{"start":{"line":30,"column":19},"end":{"line":30,"column":34}}},"6":{"name":"(anonymous_6)","line":44,"loc":{"start":{"line":44,"column":19},"end":{"line":44,"column":46}}},"7":{"name":"(anonymous_7)","line":73,"loc":{"start":{"line":73,"column":12},"end":{"line":73,"column":39}}},"8":{"name":"(anonymous_8)","line":80,"loc":{"start":{"line":80,"column":15},"end":{"line":80,"column":35}}},"9":{"name":"(anonymous_9)","line":81,"loc":{"start":{"line":81,"column":14},"end":{"line":81,"column":34}}},"10":{"name":"(anonymous_10)","line":83,"loc":{"start":{"line":83,"column":9},"end":{"line":83,"column":24}}},"11":{"name":"(anonymous_11)","line":87,"loc":{"start":{"line":87,"column":24},"end":{"line":87,"column":59}}},"12":{"name":"fromObj","line":88,"loc":{"start":{"line":88,"column":6},"end":{"line":88,"column":36}}},"13":{"name":"(anonymous_13)","line":115,"loc":{"start":{"line":115,"column":22},"end":{"line":115,"column":75}}},"14":{"name":"(anonymous_14)","line":126,"loc":{"start":{"line":126,"column":16},"end":{"line":126,"column":31}}},"15":{"name":"resolvePath","line":143,"loc":{"start":{"line":143,"column":2},"end":{"line":143,"column":36}}},"16":{"name":"dirName","line":157,"loc":{"start":{"line":157,"column":2},"end":{"line":157,"column":25}}},"17":{"name":"baseName","line":162,"loc":{"start":{"line":162,"column":2},"end":{"line":162,"column":26}}},"18":{"name":"defaultResolver","line":168,"loc":{"start":{"line":168,"column":2},"end":{"line":168,"column":45}}},"19":{"name":"(anonymous_19)","line":178,"loc":{"start":{"line":178,"column":16},"end":{"line":178,"column":27}}},"20":{"name":"(anonymous_20)","line":181,"loc":{"start":{"line":181,"column":41},"end":{"line":181,"column":93}}},"21":{"name":"(anonymous_21)","line":192,"loc":{"start":{"line":192,"column":34},"end":{"line":192,"column":49}}},"22":{"name":"isRelative","line":205,"loc":{"start":{"line":205,"column":2},"end":{"line":205,"column":28}}},"23":{"name":"filter","line":209,"loc":{"start":{"line":209,"column":2},"end":{"line":209,"column":39}}},"24":{"name":"preCondenseReach","line":214,"loc":{"start":{"line":214,"column":2},"end":{"line":214,"column":35}}},"25":{"name":"postLoadDef","line":226,"loc":{"start":{"line":226,"column":2},"end":{"line":226,"column":29}}},"26":{"name":"findTypeAt","line":240,"loc":{"start":{"line":240,"column":2},"end":{"line":240,"column":47}}},"27":{"name":"findCompletions","line":261,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":40}}},"28":{"name":"(anonymous_28)","line":265,"loc":{"start":{"line":265,"column":42},"end":{"line":265,"column":57}}},"29":{"name":"findImportCompletions","line":276,"loc":{"start":{"line":276,"column":2},"end":{"line":276,"column":70}}},"30":{"name":"(anonymous_30)","line":283,"loc":{"start":{"line":283,"column":38},"end":{"line":283,"column":65}}},"31":{"name":"findModuleCompletions","line":297,"loc":{"start":{"line":297,"column":2},"end":{"line":297,"column":68}}},"32":{"name":"(anonymous_32)","line":316,"loc":{"start":{"line":316,"column":35},"end":{"line":316,"column":49}}},"33":{"name":"(anonymous_33)","line":328,"loc":{"start":{"line":328,"column":33},"end":{"line":328,"column":59}}},"34":{"name":"(anonymous_34)","line":331,"loc":{"start":{"line":331,"column":28},"end":{"line":331,"column":43}}},"35":{"name":"(anonymous_35)","line":335,"loc":{"start":{"line":335,"column":27},"end":{"line":335,"column":42}}},"36":{"name":"(anonymous_36)","line":341,"loc":{"start":{"line":341,"column":23},"end":{"line":341,"column":34}}},"37":{"name":"(anonymous_37)","line":353,"loc":{"start":{"line":353,"column":9},"end":{"line":353,"column":39}}},"38":{"name":"describe","line":354,"loc":{"start":{"line":354,"column":6},"end":{"line":354,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":377,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":3,"column":98}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":98}},"4":{"start":{"line":4,"column":2},"end":{"line":5,"column":72}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":72}},"6":{"start":{"line":6,"column":2},"end":{"line":6,"column":30}},"7":{"start":{"line":10,"column":2},"end":{"line":20,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":24}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":32}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":38}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":42}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":43}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":23}},"14":{"start":{"line":17,"column":4},"end":{"line":17,"column":26}},"15":{"start":{"line":18,"column":4},"end":{"line":18,"column":25}},"16":{"start":{"line":19,"column":4},"end":{"line":19,"column":47}},"17":{"start":{"line":22,"column":2},"end":{"line":141,"column":4}},"18":{"start":{"line":24,"column":6},"end":{"line":24,"column":47}},"19":{"start":{"line":25,"column":6},"end":{"line":25,"column":27}},"20":{"start":{"line":26,"column":6},"end":{"line":26,"column":37}},"21":{"start":{"line":27,"column":6},"end":{"line":27,"column":18}},"22":{"start":{"line":31,"column":6},"end":{"line":32,"column":20}},"23":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"24":{"start":{"line":33,"column":6},"end":{"line":33,"column":55}},"25":{"start":{"line":33,"column":30},"end":{"line":33,"column":55}},"26":{"start":{"line":35,"column":6},"end":{"line":35,"column":47}},"27":{"start":{"line":36,"column":6},"end":{"line":37,"column":53}},"28":{"start":{"line":37,"column":8},"end":{"line":37,"column":53}},"29":{"start":{"line":39,"column":6},"end":{"line":39,"column":68}},"30":{"start":{"line":40,"column":6},"end":{"line":40,"column":37}},"31":{"start":{"line":41,"column":6},"end":{"line":41,"column":47}},"32":{"start":{"line":45,"column":6},"end":{"line":45,"column":41}},"33":{"start":{"line":46,"column":6},"end":{"line":46,"column":27}},"34":{"start":{"line":46,"column":16},"end":{"line":46,"column":27}},"35":{"start":{"line":47,"column":6},"end":{"line":47,"column":41}},"36":{"start":{"line":48,"column":6},"end":{"line":48,"column":29}},"37":{"start":{"line":48,"column":17},"end":{"line":48,"column":29}},"38":{"start":{"line":49,"column":6},"end":{"line":52,"column":26}},"39":{"start":{"line":52,"column":8},"end":{"line":52,"column":26}},"40":{"start":{"line":54,"column":6},"end":{"line":54,"column":47}},"41":{"start":{"line":55,"column":6},"end":{"line":56,"column":54}},"42":{"start":{"line":56,"column":8},"end":{"line":56,"column":54}},"43":{"start":{"line":57,"column":6},"end":{"line":57,"column":65}},"44":{"start":{"line":57,"column":21},"end":{"line":57,"column":65}},"45":{"start":{"line":58,"column":6},"end":{"line":58,"column":39}},"46":{"start":{"line":58,"column":21},"end":{"line":58,"column":39}},"47":{"start":{"line":59,"column":6},"end":{"line":62,"column":7}},"48":{"start":{"line":60,"column":8},"end":{"line":60,"column":52}},"49":{"start":{"line":60,"column":23},"end":{"line":60,"column":52}},"50":{"start":{"line":61,"column":8},"end":{"line":61,"column":23}},"51":{"start":{"line":64,"column":6},"end":{"line":64,"column":40}},"52":{"start":{"line":65,"column":6},"end":{"line":65,"column":29}},"53":{"start":{"line":65,"column":17},"end":{"line":65,"column":29}},"54":{"start":{"line":67,"column":6},"end":{"line":68,"column":55}},"55":{"start":{"line":68,"column":8},"end":{"line":68,"column":55}},"56":{"start":{"line":69,"column":6},"end":{"line":69,"column":54}},"57":{"start":{"line":69,"column":21},"end":{"line":69,"column":54}},"58":{"start":{"line":70,"column":6},"end":{"line":70,"column":52}},"59":{"start":{"line":74,"column":6},"end":{"line":77,"column":7}},"60":{"start":{"line":75,"column":8},"end":{"line":75,"column":38}},"61":{"start":{"line":76,"column":8},"end":{"line":76,"column":37}},"62":{"start":{"line":76,"column":26},"end":{"line":76,"column":37}},"63":{"start":{"line":80,"column":37},"end":{"line":80,"column":86}},"64":{"start":{"line":81,"column":36},"end":{"line":81,"column":84}},"65":{"start":{"line":84,"column":6},"end":{"line":84,"column":72}},"66":{"start":{"line":88,"column":6},"end":{"line":92,"column":7}},"67":{"start":{"line":89,"column":8},"end":{"line":91,"column":77}},"68":{"start":{"line":90,"column":10},"end":{"line":91,"column":77}},"69":{"start":{"line":91,"column":12},"end":{"line":91,"column":77}},"70":{"start":{"line":94,"column":6},"end":{"line":94,"column":38}},"71":{"start":{"line":95,"column":6},"end":{"line":95,"column":68}},"72":{"start":{"line":95,"column":32},"end":{"line":95,"column":68}},"73":{"start":{"line":97,"column":6},"end":{"line":97,"column":41}},"74":{"start":{"line":98,"column":6},"end":{"line":112,"column":7}},"75":{"start":{"line":99,"column":8},"end":{"line":99,"column":40}},"76":{"start":{"line":100,"column":8},"end":{"line":111,"column":9}},"77":{"start":{"line":101,"column":10},"end":{"line":101,"column":85}},"78":{"start":{"line":101,"column":41},"end":{"line":101,"column":85}},"79":{"start":{"line":102,"column":15},"end":{"line":111,"column":9}},"80":{"start":{"line":103,"column":10},"end":{"line":103,"column":52}},"81":{"start":{"line":104,"column":10},"end":{"line":104,"column":45}},"82":{"start":{"line":105,"column":10},"end":{"line":110,"column":11}},"83":{"start":{"line":106,"column":12},"end":{"line":106,"column":80}},"84":{"start":{"line":107,"column":12},"end":{"line":107,"column":42}},"85":{"start":{"line":107,"column":34},"end":{"line":107,"column":42}},"86":{"start":{"line":108,"column":12},"end":{"line":108,"column":33}},"87":{"start":{"line":109,"column":12},"end":{"line":109,"column":70}},"88":{"start":{"line":116,"column":6},"end":{"line":116,"column":85}},"89":{"start":{"line":117,"column":6},"end":{"line":123,"column":7}},"90":{"start":{"line":118,"column":8},"end":{"line":122,"column":9}},"91":{"start":{"line":119,"column":10},"end":{"line":119,"column":71}},"92":{"start":{"line":119,"column":34},"end":{"line":119,"column":71}},"93":{"start":{"line":120,"column":10},"end":{"line":120,"column":45}},"94":{"start":{"line":121,"column":10},"end":{"line":121,"column":82}},"95":{"start":{"line":127,"column":6},"end":{"line":127,"column":51}},"96":{"start":{"line":128,"column":6},"end":{"line":131,"column":7}},"97":{"start":{"line":129,"column":8},"end":{"line":129,"column":26}},"98":{"start":{"line":130,"column":8},"end":{"line":130,"column":23}},"99":{"start":{"line":132,"column":6},"end":{"line":132,"column":33}},"100":{"start":{"line":132,"column":27},"end":{"line":132,"column":33}},"101":{"start":{"line":134,"column":6},"end":{"line":134,"column":66}},"102":{"start":{"line":135,"column":6},"end":{"line":138,"column":7}},"103":{"start":{"line":136,"column":8},"end":{"line":136,"column":35}},"104":{"start":{"line":137,"column":8},"end":{"line":137,"column":61}},"105":{"start":{"line":139,"column":6},"end":{"line":139,"column":17}},"106":{"start":{"line":143,"column":2},"end":{"line":155,"column":3}},"107":{"start":{"line":144,"column":4},"end":{"line":144,"column":44}},"108":{"start":{"line":144,"column":34},"end":{"line":144,"column":44}},"109":{"start":{"line":145,"column":4},"end":{"line":145,"column":60}},"110":{"start":{"line":145,"column":39},"end":{"line":145,"column":60}},"111":{"start":{"line":146,"column":4},"end":{"line":146,"column":9}},"112":{"start":{"line":147,"column":4},"end":{"line":153,"column":5}},"113":{"start":{"line":148,"column":6},"end":{"line":151,"column":7}},"114":{"start":{"line":149,"column":8},"end":{"line":149,"column":66}},"115":{"start":{"line":150,"column":8},"end":{"line":150,"column":70}},"116":{"start":{"line":152,"column":6},"end":{"line":152,"column":34}},"117":{"start":{"line":154,"column":4},"end":{"line":154,"column":23}},"118":{"start":{"line":157,"column":2},"end":{"line":161,"column":3}},"119":{"start":{"line":158,"column":4},"end":{"line":158,"column":41}},"120":{"start":{"line":159,"column":4},"end":{"line":159,"column":34}},"121":{"start":{"line":159,"column":25},"end":{"line":159,"column":34}},"122":{"start":{"line":160,"column":4},"end":{"line":160,"column":39}},"123":{"start":{"line":162,"column":2},"end":{"line":166,"column":3}},"124":{"start":{"line":163,"column":4},"end":{"line":163,"column":41}},"125":{"start":{"line":164,"column":4},"end":{"line":165,"column":41}},"126":{"start":{"line":164,"column":25},"end":{"line":164,"column":36}},"127":{"start":{"line":165,"column":9},"end":{"line":165,"column":41}},"128":{"start":{"line":168,"column":2},"end":{"line":174,"column":3}},"129":{"start":{"line":169,"column":4},"end":{"line":169,"column":38}},"130":{"start":{"line":169,"column":32},"end":{"line":169,"column":38}},"131":{"start":{"line":170,"column":4},"end":{"line":170,"column":53}},"132":{"start":{"line":171,"column":4},"end":{"line":171,"column":34}},"133":{"start":{"line":172,"column":4},"end":{"line":172,"column":42}},"134":{"start":{"line":172,"column":31},"end":{"line":172,"column":42}},"135":{"start":{"line":173,"column":4},"end":{"line":173,"column":58}},"136":{"start":{"line":173,"column":39},"end":{"line":173,"column":58}},"137":{"start":{"line":178,"column":2},"end":{"line":203,"column":6}},"138":{"start":{"line":178,"column":15},"end":{"line":203,"column":6}},"139":{"start":{"line":179,"column":4},"end":{"line":179,"column":50}},"140":{"start":{"line":181,"column":4},"end":{"line":202,"column":5}},"141":{"start":{"line":182,"column":6},"end":{"line":182,"column":39}},"142":{"start":{"line":183,"column":6},"end":{"line":183,"column":37}},"143":{"start":{"line":184,"column":6},"end":{"line":187,"column":7}},"144":{"start":{"line":185,"column":8},"end":{"line":185,"column":67}},"145":{"start":{"line":186,"column":8},"end":{"line":186,"column":46}},"146":{"start":{"line":188,"column":6},"end":{"line":188,"column":59}},"147":{"start":{"line":189,"column":6},"end":{"line":189,"column":56}},"148":{"start":{"line":191,"column":6},"end":{"line":191,"column":19}},"149":{"start":{"line":192,"column":6},"end":{"line":201,"column":8}},"150":{"start":{"line":193,"column":8},"end":{"line":193,"column":36}},"151":{"start":{"line":193,"column":30},"end":{"line":193,"column":36}},"152":{"start":{"line":194,"column":8},"end":{"line":200,"column":9}},"153":{"start":{"line":195,"column":10},"end":{"line":195,"column":101}},"154":{"start":{"line":196,"column":10},"end":{"line":196,"column":47}},"155":{"start":{"line":196,"column":41},"end":{"line":196,"column":47}},"156":{"start":{"line":197,"column":10},"end":{"line":197,"column":45}},"157":{"start":{"line":198,"column":10},"end":{"line":198,"column":71}},"158":{"start":{"line":198,"column":34},"end":{"line":198,"column":71}},"159":{"start":{"line":199,"column":10},"end":{"line":199,"column":68}},"160":{"start":{"line":205,"column":2},"end":{"line":207,"column":3}},"161":{"start":{"line":206,"column":4},"end":{"line":206,"column":32}},"162":{"start":{"line":209,"column":2},"end":{"line":212,"column":3}},"163":{"start":{"line":210,"column":4},"end":{"line":211,"column":80}},"164":{"start":{"line":214,"column":2},"end":{"line":224,"column":3}},"165":{"start":{"line":215,"column":4},"end":{"line":215,"column":52}},"166":{"start":{"line":216,"column":4},"end":{"line":216,"column":60}},"167":{"start":{"line":217,"column":4},"end":{"line":223,"column":5}},"168":{"start":{"line":218,"column":6},"end":{"line":218,"column":26}},"169":{"start":{"line":219,"column":6},"end":{"line":219,"column":33}},"170":{"start":{"line":220,"column":6},"end":{"line":220,"column":53}},"171":{"start":{"line":221,"column":6},"end":{"line":221,"column":30}},"172":{"start":{"line":222,"column":6},"end":{"line":222,"column":25}},"173":{"start":{"line":226,"column":2},"end":{"line":238,"column":3}},"174":{"start":{"line":227,"column":4},"end":{"line":227,"column":51}},"175":{"start":{"line":228,"column":4},"end":{"line":228,"column":56}},"176":{"start":{"line":229,"column":4},"end":{"line":234,"column":5}},"177":{"start":{"line":229,"column":14},"end":{"line":234,"column":5}},"178":{"start":{"line":230,"column":6},"end":{"line":230,"column":42}},"179":{"start":{"line":231,"column":6},"end":{"line":231,"column":30}},"180":{"start":{"line":232,"column":6},"end":{"line":232,"column":25}},"181":{"start":{"line":233,"column":6},"end":{"line":233,"column":37}},"182":{"start":{"line":235,"column":4},"end":{"line":235,"column":63}},"183":{"start":{"line":236,"column":4},"end":{"line":237,"column":66}},"184":{"start":{"line":236,"column":15},"end":{"line":237,"column":66}},"185":{"start":{"line":237,"column":6},"end":{"line":237,"column":66}},"186":{"start":{"line":240,"column":2},"end":{"line":258,"column":3}},"187":{"start":{"line":241,"column":4},"end":{"line":241,"column":26}},"188":{"start":{"line":241,"column":15},"end":{"line":241,"column":26}},"189":{"start":{"line":242,"column":4},"end":{"line":242,"column":42}},"190":{"start":{"line":243,"column":4},"end":{"line":243,"column":42}},"191":{"start":{"line":244,"column":4},"end":{"line":244,"column":29}},"192":{"start":{"line":244,"column":18},"end":{"line":244,"column":29}},"193":{"start":{"line":249,"column":4},"end":{"line":249,"column":44}},"194":{"start":{"line":250,"column":4},"end":{"line":250,"column":30}},"195":{"start":{"line":251,"column":4},"end":{"line":251,"column":48}},"196":{"start":{"line":252,"column":4},"end":{"line":252,"column":60}},"197":{"start":{"line":253,"column":4},"end":{"line":254,"column":44}},"198":{"start":{"line":253,"column":21},"end":{"line":253,"column":43}},"199":{"start":{"line":254,"column":9},"end":{"line":254,"column":44}},"200":{"start":{"line":254,"column":24},"end":{"line":254,"column":44}},"201":{"start":{"line":255,"column":4},"end":{"line":256,"column":44}},"202":{"start":{"line":255,"column":21},"end":{"line":255,"column":43}},"203":{"start":{"line":256,"column":9},"end":{"line":256,"column":44}},"204":{"start":{"line":256,"column":24},"end":{"line":256,"column":44}},"205":{"start":{"line":257,"column":4},"end":{"line":257,"column":15}},"206":{"start":{"line":261,"column":2},"end":{"line":274,"column":3}},"207":{"start":{"line":262,"column":4},"end":{"line":262,"column":42}},"208":{"start":{"line":263,"column":4},"end":{"line":263,"column":79}},"209":{"start":{"line":264,"column":4},"end":{"line":265,"column":82}},"210":{"start":{"line":265,"column":59},"end":{"line":265,"column":80}},"211":{"start":{"line":266,"column":4},"end":{"line":266,"column":26}},"212":{"start":{"line":266,"column":15},"end":{"line":266,"column":26}},"213":{"start":{"line":268,"column":4},"end":{"line":269,"column":71}},"214":{"start":{"line":269,"column":6},"end":{"line":269,"column":71}},"215":{"start":{"line":271,"column":4},"end":{"line":271,"column":45}},"216":{"start":{"line":272,"column":4},"end":{"line":273,"column":76}},"217":{"start":{"line":273,"column":6},"end":{"line":273,"column":76}},"218":{"start":{"line":276,"column":2},"end":{"line":295,"column":3}},"219":{"start":{"line":277,"column":4},"end":{"line":277,"column":24}},"220":{"start":{"line":278,"column":4},"end":{"line":278,"column":72}},"221":{"start":{"line":279,"column":4},"end":{"line":279,"column":56}},"222":{"start":{"line":279,"column":31},"end":{"line":279,"column":56}},"223":{"start":{"line":281,"column":4},"end":{"line":281,"column":76}},"224":{"start":{"line":282,"column":4},"end":{"line":282,"column":29}},"225":{"start":{"line":282,"column":18},"end":{"line":282,"column":29}},"226":{"start":{"line":283,"column":4},"end":{"line":288,"column":6}},"227":{"start":{"line":284,"column":6},"end":{"line":284,"column":49}},"228":{"start":{"line":284,"column":43},"end":{"line":284,"column":49}},"229":{"start":{"line":285,"column":6},"end":{"line":286,"column":89}},"230":{"start":{"line":286,"column":83},"end":{"line":286,"column":89}},"231":{"start":{"line":287,"column":6},"end":{"line":287,"column":81}},"232":{"start":{"line":289,"column":4},"end":{"line":294,"column":5}},"233":{"start":{"line":297,"column":2},"end":{"line":326,"column":3}},"234":{"start":{"line":298,"column":4},"end":{"line":299,"column":64}},"235":{"start":{"line":299,"column":58},"end":{"line":299,"column":64}},"236":{"start":{"line":301,"column":4},"end":{"line":301,"column":91}},"237":{"start":{"line":302,"column":4},"end":{"line":303,"column":43}},"238":{"start":{"line":303,"column":6},"end":{"line":303,"column":43}},"239":{"start":{"line":304,"column":4},"end":{"line":304,"column":56}},"240":{"start":{"line":304,"column":31},"end":{"line":304,"column":56}},"241":{"start":{"line":306,"column":4},"end":{"line":306,"column":24}},"242":{"start":{"line":307,"column":4},"end":{"line":308,"column":56}},"243":{"start":{"line":307,"column":26},"end":{"line":307,"column":82}},"244":{"start":{"line":308,"column":9},"end":{"line":308,"column":56}},"245":{"start":{"line":310,"column":4},"end":{"line":311,"column":15}},"246":{"start":{"line":311,"column":6},"end":{"line":311,"column":15}},"247":{"start":{"line":312,"column":4},"end":{"line":325,"column":5}},"248":{"start":{"line":317,"column":8},"end":{"line":317,"column":58}},"249":{"start":{"line":318,"column":8},"end":{"line":318,"column":41}},"250":{"start":{"line":319,"column":8},"end":{"line":319,"column":105}},"251":{"start":{"line":319,"column":26},"end":{"line":319,"column":105}},"252":{"start":{"line":320,"column":8},"end":{"line":320,"column":49}},"253":{"start":{"line":320,"column":36},"end":{"line":320,"column":49}},"254":{"start":{"line":321,"column":8},"end":{"line":321,"column":30}},"255":{"start":{"line":322,"column":8},"end":{"line":322,"column":25}},"256":{"start":{"line":323,"column":8},"end":{"line":323,"column":18}},"257":{"start":{"line":328,"column":2},"end":{"line":349,"column":4}},"258":{"start":{"line":329,"column":4},"end":{"line":329,"column":53}},"259":{"start":{"line":331,"column":4},"end":{"line":333,"column":6}},"260":{"start":{"line":332,"column":6},"end":{"line":332,"column":87}},"261":{"start":{"line":335,"column":4},"end":{"line":339,"column":6}},"262":{"start":{"line":336,"column":6},"end":{"line":336,"column":47}},"263":{"start":{"line":337,"column":6},"end":{"line":337,"column":28}},"264":{"start":{"line":338,"column":6},"end":{"line":338,"column":54}},"265":{"start":{"line":341,"column":4},"end":{"line":343,"column":6}},"266":{"start":{"line":342,"column":6},"end":{"line":342,"column":52}},"267":{"start":{"line":345,"column":4},"end":{"line":345,"column":51}},"268":{"start":{"line":346,"column":4},"end":{"line":346,"column":41}},"269":{"start":{"line":347,"column":4},"end":{"line":347,"column":35}},"270":{"start":{"line":348,"column":4},"end":{"line":348,"column":44}},"271":{"start":{"line":351,"column":2},"end":{"line":376,"column":4}},"272":{"start":{"line":354,"column":6},"end":{"line":363,"column":7}},"273":{"start":{"line":355,"column":8},"end":{"line":355,"column":51}},"274":{"start":{"line":356,"column":8},"end":{"line":356,"column":45}},"275":{"start":{"line":357,"column":8},"end":{"line":357,"column":86}},"276":{"start":{"line":358,"column":8},"end":{"line":358,"column":33}},"277":{"start":{"line":358,"column":17},"end":{"line":358,"column":33}},"278":{"start":{"line":359,"column":8},"end":{"line":359,"column":33}},"279":{"start":{"line":359,"column":17},"end":{"line":359,"column":33}},"280":{"start":{"line":360,"column":8},"end":{"line":360,"column":69}},"281":{"start":{"line":361,"column":8},"end":{"line":361,"column":61}},"282":{"start":{"line":361,"column":18},"end":{"line":361,"column":61}},"283":{"start":{"line":362,"column":8},"end":{"line":362,"column":21}},"284":{"start":{"line":365,"column":6},"end":{"line":365,"column":73}},"285":{"start":{"line":366,"column":6},"end":{"line":366,"column":27}},"286":{"start":{"line":366,"column":18},"end":{"line":366,"column":27}},"287":{"start":{"line":367,"column":6},"end":{"line":367,"column":33}},"288":{"start":{"line":368,"column":6},"end":{"line":368,"column":37}},"289":{"start":{"line":369,"column":6},"end":{"line":373,"column":7}},"290":{"start":{"line":370,"column":8},"end":{"line":370,"column":35}},"291":{"start":{"line":371,"column":8},"end":{"line":372,"column":50}},"292":{"start":{"line":372,"column":10},"end":{"line":372,"column":50}},"293":{"start":{"line":374,"column":6},"end":{"line":374,"column":17}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":61}}]},"3":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":6},"end":{"line":4,"column":33}},{"start":{"line":4,"column":37},"end":{"line":4,"column":47}}]},"5":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":19},"end":{"line":12,"column":26}},{"start":{"line":12,"column":30},"end":{"line":12,"column":32}}]},"6":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"7":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":10},"end":{"line":31,"column":31}},{"start":{"line":31,"column":35},"end":{"line":31,"column":77}}]},"8":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]},"9":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"10":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":10},"end":{"line":36,"column":38}},{"start":{"line":36,"column":42},"end":{"line":36,"column":67}}]},"11":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"12":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"13":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"14":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":10},"end":{"line":49,"column":39}},{"start":{"line":50,"column":10},"end":{"line":50,"column":31}},{"start":{"line":50,"column":35},"end":{"line":50,"column":79}},{"start":{"line":51,"column":10},"end":{"line":51,"column":27}},{"start":{"line":51,"column":31},"end":{"line":51,"column":72}}]},"15":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":22},"end":{"line":55,"column":31}},{"start":{"line":55,"column":35},"end":{"line":55,"column":60}}]},"16":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"17":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"18":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"19":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"20":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"21":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]},"22":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"23":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"24":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":13},"end":{"line":84,"column":31}},{"start":{"line":84,"column":36},"end":{"line":84,"column":71}}]},"25":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":10},"end":{"line":90,"column":10}},{"start":{"line":90,"column":10},"end":{"line":90,"column":10}}]},"26":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":57},"end":{"line":91,"column":63}},{"start":{"line":91,"column":67},"end":{"line":91,"column":76}}]},"27":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":6},"end":{"line":95,"column":6}},{"start":{"line":95,"column":6},"end":{"line":95,"column":6}}]},"28":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":8}},{"start":{"line":100,"column":8},"end":{"line":100,"column":8}}]},"29":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":23}},{"start":{"line":100,"column":27},"end":{"line":100,"column":50}}]},"30":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":10},"end":{"line":101,"column":10}},{"start":{"line":101,"column":10},"end":{"line":101,"column":10}}]},"31":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":15},"end":{"line":102,"column":15}},{"start":{"line":102,"column":15},"end":{"line":102,"column":15}}]},"32":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":19},"end":{"line":102,"column":42}},{"start":{"line":102,"column":46},"end":{"line":102,"column":68}}]},"33":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":10},"end":{"line":105,"column":10}},{"start":{"line":105,"column":10},"end":{"line":105,"column":10}}]},"34":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":45},"end":{"line":106,"column":73}},{"start":{"line":106,"column":77},"end":{"line":106,"column":79}}]},"35":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"36":{"line":116,"type":"cond-expr","locations":[{"start":{"line":116,"column":30},"end":{"line":116,"column":68}},{"start":{"line":116,"column":71},"end":{"line":116,"column":85}}]},"37":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":8}},{"start":{"line":118,"column":8},"end":{"line":118,"column":8}}]},"38":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":12},"end":{"line":118,"column":30}},{"start":{"line":118,"column":34},"end":{"line":118,"column":59}}]},"39":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":10},"end":{"line":119,"column":10}},{"start":{"line":119,"column":10},"end":{"line":119,"column":10}}]},"40":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":6},"end":{"line":128,"column":6}},{"start":{"line":128,"column":6},"end":{"line":128,"column":6}}]},"41":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":10},"end":{"line":128,"column":25}},{"start":{"line":128,"column":30},"end":{"line":128,"column":55}}]},"42":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":6},"end":{"line":132,"column":6}},{"start":{"line":132,"column":6},"end":{"line":132,"column":6}}]},"43":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"44":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":15},"end":{"line":137,"column":18}},{"start":{"line":137,"column":22},"end":{"line":137,"column":39}},{"start":{"line":137,"column":43},"end":{"line":137,"column":61}}]},"45":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"46":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"47":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":14}},{"start":{"line":145,"column":18},"end":{"line":145,"column":37}}]},"48":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":6},"end":{"line":148,"column":6}},{"start":{"line":148,"column":6},"end":{"line":148,"column":6}}]},"49":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":10},"end":{"line":148,"column":14}},{"start":{"line":148,"column":18},"end":{"line":148,"column":35}}]},"50":{"line":150,"type":"cond-expr","locations":[{"start":{"line":150,"column":35},"end":{"line":150,"column":37}},{"start":{"line":150,"column":40},"end":{"line":150,"column":70}}]},"51":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"52":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"53":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"54":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"55":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"56":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"57":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"58":{"line":186,"type":"cond-expr","locations":[{"start":{"line":186,"column":25},"end":{"line":186,"column":27}},{"start":{"line":186,"column":30},"end":{"line":186,"column":46}}]},"59":{"line":188,"type":"cond-expr","locations":[{"start":{"line":188,"column":28},"end":{"line":188,"column":32}},{"start":{"line":188,"column":35},"end":{"line":188,"column":59}}]},"60":{"line":189,"type":"cond-expr","locations":[{"start":{"line":189,"column":32},"end":{"line":189,"column":34}},{"start":{"line":189,"column":37},"end":{"line":189,"column":56}}]},"61":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":8}},{"start":{"line":193,"column":8},"end":{"line":193,"column":8}}]},"62":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":194,"column":8}},{"start":{"line":194,"column":8},"end":{"line":194,"column":8}}]},"63":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":10},"end":{"line":196,"column":10}},{"start":{"line":196,"column":10},"end":{"line":196,"column":10}}]},"64":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":10},"end":{"line":198,"column":10}},{"start":{"line":198,"column":10},"end":{"line":198,"column":10}}]},"65":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":11},"end":{"line":210,"column":33}},{"start":{"line":210,"column":37},"end":{"line":210,"column":42}},{"start":{"line":211,"column":6},"end":{"line":211,"column":80}}]},"66":{"line":211,"type":"cond-expr","locations":[{"start":{"line":211,"column":31},"end":{"line":211,"column":51}},{"start":{"line":211,"column":54},"end":{"line":211,"column":60}}]},"67":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":15},"end":{"line":219,"column":25}},{"start":{"line":219,"column":29},"end":{"line":219,"column":33}}]},"68":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":229,"column":4}},{"start":{"line":229,"column":4},"end":{"line":229,"column":4}}]},"69":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"70":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"71":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":244,"column":4}},{"start":{"line":244,"column":4},"end":{"line":244,"column":4}}]},"72":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":16},"end":{"line":249,"column":38}},{"start":{"line":249,"column":42},"end":{"line":249,"column":44}}]},"73":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":18},"end":{"line":251,"column":32}},{"start":{"line":251,"column":36},"end":{"line":251,"column":48}}]},"74":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":22},"end":{"line":252,"column":40}},{"start":{"line":252,"column":44},"end":{"line":252,"column":60}}]},"75":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":253,"column":4}},{"start":{"line":253,"column":4},"end":{"line":253,"column":4}}]},"76":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":9},"end":{"line":254,"column":9}},{"start":{"line":254,"column":9},"end":{"line":254,"column":9}}]},"77":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":4},"end":{"line":255,"column":4}},{"start":{"line":255,"column":4},"end":{"line":255,"column":4}}]},"78":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":9},"end":{"line":256,"column":9}},{"start":{"line":256,"column":9},"end":{"line":256,"column":9}}]},"79":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"80":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":4},"end":{"line":268,"column":4}},{"start":{"line":268,"column":4},"end":{"line":268,"column":4}}]},"81":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":4},"end":{"line":272,"column":4}},{"start":{"line":272,"column":4},"end":{"line":272,"column":4}}]},"82":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":11}},{"start":{"line":272,"column":15},"end":{"line":272,"column":23}},{"start":{"line":272,"column":27},"end":{"line":272,"column":43}}]},"83":{"line":278,"type":"cond-expr","locations":[{"start":{"line":278,"column":27},"end":{"line":278,"column":67}},{"start":{"line":278,"column":70},"end":{"line":278,"column":72}}]},"84":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":279,"column":4}},{"start":{"line":279,"column":4},"end":{"line":279,"column":4}}]},"85":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":4},"end":{"line":282,"column":4}},{"start":{"line":282,"column":4},"end":{"line":282,"column":4}}]},"86":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":6},"end":{"line":284,"column":6}},{"start":{"line":284,"column":6},"end":{"line":284,"column":6}}]},"87":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":6},"end":{"line":285,"column":6}},{"start":{"line":285,"column":6},"end":{"line":285,"column":6}}]},"88":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":10},"end":{"line":285,"column":32}},{"start":{"line":285,"column":36},"end":{"line":285,"column":40}},{"start":{"line":286,"column":10},"end":{"line":286,"column":81}}]},"89":{"line":286,"type":"cond-expr","locations":[{"start":{"line":286,"column":35},"end":{"line":286,"column":53}},{"start":{"line":286,"column":56},"end":{"line":286,"column":60}}]},"90":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":51},"end":{"line":287,"column":54}},{"start":{"line":287,"column":58},"end":{"line":287,"column":73}}]},"91":{"line":290,"type":"cond-expr","locations":[{"start":{"line":290,"column":53},"end":{"line":290,"column":63}},{"start":{"line":290,"column":66},"end":{"line":290,"column":73}}]},"92":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":4},"end":{"line":298,"column":4}},{"start":{"line":298,"column":4},"end":{"line":298,"column":4}}]},"93":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":8},"end":{"line":298,"column":33}},{"start":{"line":298,"column":37},"end":{"line":298,"column":69}},{"start":{"line":299,"column":8},"end":{"line":299,"column":31}},{"start":{"line":299,"column":35},"end":{"line":299,"column":56}}]},"94":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":302,"column":4}},{"start":{"line":302,"column":4},"end":{"line":302,"column":4}}]},"95":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":8},"end":{"line":302,"column":12}},{"start":{"line":302,"column":16},"end":{"line":302,"column":53}}]},"96":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":304,"column":4}},{"start":{"line":304,"column":4},"end":{"line":304,"column":4}}]},"97":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"98":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":310,"column":4}},{"start":{"line":310,"column":4},"end":{"line":310,"column":4}}]},"99":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":34}},{"start":{"line":310,"column":38},"end":{"line":310,"column":72}}]},"100":{"line":317,"type":"cond-expr","locations":[{"start":{"line":317,"column":44},"end":{"line":317,"column":47}},{"start":{"line":317,"column":50},"end":{"line":317,"column":58}}]},"101":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":8},"end":{"line":319,"column":8}},{"start":{"line":319,"column":8},"end":{"line":319,"column":8}}]},"102":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":8},"end":{"line":320,"column":8}},{"start":{"line":320,"column":8},"end":{"line":320,"column":8}}]},"103":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":18},"end":{"line":357,"column":26}},{"start":{"line":357,"column":31},"end":{"line":357,"column":35}},{"start":{"line":357,"column":39},"end":{"line":357,"column":47}}]},"104":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":56},"end":{"line":357,"column":64}},{"start":{"line":357,"column":69},"end":{"line":357,"column":73}},{"start":{"line":357,"column":77},"end":{"line":357,"column":85}}]},"105":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":8},"end":{"line":358,"column":8}},{"start":{"line":358,"column":8},"end":{"line":358,"column":8}}]},"106":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":8},"end":{"line":359,"column":8}},{"start":{"line":359,"column":8},"end":{"line":359,"column":8}}]},"107":{"line":360,"type":"binary-expr","locations":[{"start":{"line":360,"column":19},"end":{"line":360,"column":37}},{"start":{"line":360,"column":42},"end":{"line":360,"column":46}},{"start":{"line":360,"column":50},"end":{"line":360,"column":68}}]},"108":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":8},"end":{"line":361,"column":8}},{"start":{"line":361,"column":8},"end":{"line":361,"column":8}}]},"109":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":44},"end":{"line":365,"column":47}},{"start":{"line":365,"column":51},"end":{"line":365,"column":73}}]},"110":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":6},"end":{"line":366,"column":6}},{"start":{"line":366,"column":6},"end":{"line":366,"column":6}}]},"111":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":6},"end":{"line":369,"column":6}},{"start":{"line":369,"column":6},"end":{"line":369,"column":6}}]}},"code":["(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(require(\"../lib/infer\"), require(\"../lib/tern\"), require(\"../lib/signal\"), require)","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"../lib/infer\", \"../lib/tern\", \"../lib/signal\"], mod)","  mod(tern, tern, tern.signal)","})(function(infer, tern, signal, require) {","  \"use strict\"","","  function Modules(server, options) {","    this.server = server","    this.options = options || {}","    this.modules = Object.create(null)","    this.nonRelative = Object.create(null)","    this.knownModules = Object.create(null)","    this.resolvers = []","    this.modNameTests = []","    this.importTests = []","    this.completableTypes = Object.create(null)","  }","","  Modules.prototype = signal.mixin({","    buildWrappingScope: function(parent, origin, node) {","      var scope = new infer.Scope(parent, node)","      scope.origin = origin","      this.signal(\"wrapScope\", scope)","      return scope","    },","","    maybeOverride: function(name) {","      if (!this.options.modules || !this.options.modules.hasOwnProperty(name))","        return false","      if (this.modules[name]) return this.modules[name]","","      var override = this.options.modules[name]","      if (typeof(override) == \"string\" && override.charAt(0) == \"=\")","        return infer.def.parsePath(override.slice(1))","","      var scope = this.buildWrappingScope(infer.cx().topScope, name)","      infer.def.load(override, scope)","      return this.modules[name] = scope.exports","    },","","    resolveModule: function(name, parentFile) {","      var over = this.maybeOverride(name)","      if (over) return over","      var known = this.knownModules[name]","      if (known) return known","      if (this.options.dontLoad == true ||","          this.options.dontLoad && new RegExp(this.options.dontLoad).test(name) ||","          this.options.load && !new RegExp(this.options.load).test(name))","        return infer.ANull","","      var resolved, relative = isRelative(name)","      for (var i = 0; !resolved && i < this.resolvers.length; i++)","        resolved = this.resolvers[i](name, parentFile)","      if (!resolved) resolved = defaultResolver(name, parentFile)","      if (!resolved) return infer.ANull","      if (typeof resolved != \"string\") {","        if (!relative) this.nonRelative[name] = true","        return resolved","      }","","      var known = this.modules[resolved]","      if (known) return known","","      if (/\\.js$|(?:^\\/)[^\\.]+$/.test(resolved))","        this.server.addFile(resolved, null, parentFile)","      if (!relative) this.nonRelative[name] = resolved","      return this.modules[resolved] = new infer.AVal","    },","","    findIn: function(array, node, pos) {","      for (var i = 0; i < array.length; i++) {","        var name = array[i](node, pos)","        if (name != null) return name","      }","    },","","    isModName: function(node, pos) { return this.findIn(this.modNameTests, node, pos) },","    isImport: function(node, pos) { return this.findIn(this.importTests, node, pos) },","","    get: function(name) {","      return this.modules[name] || (this.modules[name] = new infer.AVal)","    },","","    completeModuleName: function(completions, query, word) {","      function fromObj(obj, useVal) {","        for (var name in obj)","          if (filter(word, name, query))","            tern.addCompletion(query, completions, name, useVal && obj[name])","      }","","      fromObj(this.knownModules, true)","      if (this.options.modules) fromObj(this.options.modules, false)","","      var pathsSeen = Object.create(null)","      for (var prop in this.nonRelative) {","        var val = this.nonRelative[prop]","        if (val == true || prop.indexOf(\"/\") == -1) {","          if (filter(word, prop, query)) tern.addCompletion(query, completions, prop)","        } else if (prop.indexOf(word) == 0 && word.indexOf(\"/\") > -1) {","          var afterSlash = /.*?\\/(.*)/.exec(prop)[1]","          var found = val.indexOf(afterSlash)","          if (found > -1) {","            var dir = val.slice(0, found) + (/.*?\\/(.*\\/)?/.exec(word)[1] || \"\")","            if (dir in pathsSeen) continue","            pathsSeen[dir] = true","            this.completeFileName(completions, query, null, word, dir)","          }","        }","      }","    },","","    completeFileName: function(completions, query, parentFile, word, _dir) {","      var path = parentFile ? resolvePath(dirName(parentFile), word) : baseName(word)","      for (var prop in this.modules) {","        if (prop != parentFile && filter(path, prop, query)) {","          if (/\\.js$/.test(prop)) prop = prop.slice(0, prop.length - 3)","          var added = prop.slice(path.length)","          tern.addCompletion(query, completions, word + added, this.modules[prop])","        }","      }","    },","","    getModType: function(node) {","      var modName = this.isModName(node), imp, prop","      if (modName == null && (imp = this.isImport(node))) {","        modName = imp.name","        prop = imp.prop","      }","      if (modName == null) return","","      var type = this.resolveModule(modName, node.sourceFile.name)","      if (prop) {","        var obj = type.getObjType()","        type = obj && obj.hasProp(prop) || type.getProp(prop)","      }","      return type","    }","  })","","  function resolvePath(parent, sub) {","    if (/^https?:|^\\//.test(sub)) return sub","    if (parent && !/\\/$/.test(parent)) parent = parent + \"/\"","    var m","    while (m = /^\\.(\\.)?\\//.exec(sub)) {","      if (m[1] && parent.length > 1) {","        var lastSlash = parent.lastIndexOf(\"/\", parent.length - 2)","        parent = lastSlash == -1 ? \"\" : parent.slice(0, lastSlash + 1)","      }","      sub = sub.slice(m[0].length)","    }","    return parent + sub","  }","","  function dirName(path) {","    var lastSlash = path.lastIndexOf(\"/\")","    if (lastSlash == -1) return \"\"","    return path.slice(0, lastSlash + 1)","  }","  function baseName(path) {","    var lastSlash = path.lastIndexOf(\"/\")","    if (lastSlash == -1) return path","    else return path.slice(lastSlash + 1)","  }","","  function defaultResolver(name, parentFile) {","    if (!/^\\.\\.?\\//.test(name)) return","    var path = resolvePath(dirName(parentFile), name)","    var server = infer.cx().parent","    if (server.findFile(path)) return path","    if (server.findFile(path + \".js\")) return path + \".js\"","  }","","  // Under node, replace completeFileName with a version that actually","  // queries the file system","  if (require) (function() {","    var fs = require(\"fs\"), path = require(\"path\")","","    Modules.prototype.completeFileName = function(completions, query, parentFile, word, dir) {","      var pDir = this.server.projectDir","      var endSlash = /\\/$/.test(word)","      if (parentFile) {","        var pt = path.resolve(pDir, path.dirname(parentFile), word)","        dir = endSlash ? pt : path.dirname(pt)","      }","      var base = endSlash ? word : path.dirname(word) + \"/\"","      var filePart = endSlash ? \"\" : path.basename(word)","","      var me = this","      fs.readdirSync(dir).forEach(function(file) {","        if (/^\\./.test(file)) return","        if (filter(filePart, file, query)) {","          var projectPath = me.server.normalizeFilename(path.relative(pDir, path.resolve(dir, file)))","          if (projectPath == parentFile) return","          var value = me.modules[projectPath]","          if (/\\.js$/.test(file)) file = file.slice(0, file.length - 3)","          tern.addCompletion(query, completions, base + file, value)","        }","      })","    }","  }())","","  function isRelative(path) {","    return /^\\.\\.?\\//.test(path)","  }","","  function filter(word, string, query) {","    return query.filter === false || !word ||","      (query.caseInsensitive ? string.toLowerCase() : string).indexOf(word) == 0","  }","","  function preCondenseReach(state) {","    var mods = infer.cx().parent.mod.modules.modules","    var node = state.roots[\"!modules\"] = new infer.Obj(null)","    for (var name in mods) {","      var mod = mods[name]","      var id = mod.origin || name","      var prop = node.defProp(id.replace(/\\./g, \"`\"))","      prop.origin = mod.origin","      mod.propagate(prop)","    }","  }","","  function postLoadDef(data) {","    var cx = infer.cx(), me = cx.parent.mod.modules","    var mods = cx.definitions[data[\"!name\"]][\"!modules\"]","    if (mods) for (var name in mods.props) {","      var origin = name.replace(/`/g, \".\")","      var mod = me.get(origin)","      mod.origin = origin","      mods.props[name].propagate(mod)","    }","    var known = cx.definitions[data[\"!name\"]][\"!known_modules\"]","    if (known) for (var name in known.props)","      me.knownModules[name.replace(/`/g, \".\")] = known.props[name]","  }","","  function findTypeAt(_file, _pos, expr, type) {","    if (!expr) return type","    var me = infer.cx().parent.mod.modules","    var modType = me.getModType(expr.node)","    if (!modType) return type","","    // The `type` is a value shared for all string literals.","    // We must create a copy before modifying `origin` and `originNode`.","    // Otherwise all string literals would point to the last jump location","    var inner = modType.getType(false) || {}","    type = Object.create(type)","    type.origin = modType.origin || inner.origin","    type.originNode = modType.originNode || inner.originNode","    if (modType.doc) type.doc = modType.doc","    else if (inner.doc) type.doc = inner.doc","    if (modType.url) type.url = modType.url","    else if (inner.url) type.url = inner.url","    return type","  }","","  // Complete previously seen module names when completing in strings passed to require","  function findCompletions(file, query) {","    var me = infer.cx().parent.mod.modules","    var wordEnd = tern.resolvePos(file, query.end), types = me.completableTypes","    var expr = infer.findExpressionAround(file.ast, null, wordEnd, file.scope,","                                          function(type) { return type in types })","    if (!expr) return null","","    if (me.isModName(expr.node, wordEnd) != null)","      return findModuleCompletions(me, file, query, expr.node, wordEnd)","","    var imp = me.isImport(expr.node, wordEnd)","    if (imp && imp.name && imp.prop != null)","      return findImportCompletions(me, file, query, expr.node, imp, wordEnd)","  }","","  function findImportCompletions(me, file, query, node, imp, wordEnd) {","    var completions = []","    var word = node.name ? node.name.slice(0, wordEnd - node.start) : \"\"","    if (query.caseInsensitive) word = word.toLowerCase()","","    var modType = me.resolveModule(imp.name, node.sourceFile.name).getType()","    if (!modType) return null","    infer.forAllPropertiesOf(modType, function(prop, obj, depth) {","      if (obj == infer.cx().protos.Object) return","      if (query.filter !== false && word &&","          (query.caseInsensitive ? prop.toLowerCase() : prop).indexOf(word) !== 0) return","      tern.addCompletion(query, completions, prop, obj && obj.props[prop], depth)","    })","    return {","      start: tern.outputPos(query, file, node.name ? node.start : wordEnd),","      end: tern.outputPos(query, file, wordEnd),","      completions: completions,","      isSpecifier: true","    }","  }","","  function findModuleCompletions(me, file, query, argNode, wordEnd) {","    if (argNode.type != \"Literal\" || typeof argNode.value != \"string\" ||","        argNode.start > wordEnd || argNode.end < wordEnd) return","","    var word = argNode.raw.slice(1, wordEnd - argNode.start), quote = argNode.raw.charAt(0)","    if (word && word.charAt(word.length - 1) == quote)","      word = word.slice(0, word.length - 1)","    if (query.caseInsensitive) word = word.toLowerCase()","","    var completions = []","    if (isRelative(word)) me.completeFileName(completions, query, file.name, word)","    else me.completeModuleName(completions, query, word)","","    if (argNode.end == wordEnd + 1 && file.text.charAt(wordEnd) == quote)","      ++wordEnd","    return {","      start: tern.outputPos(query, file, argNode.start),","      end: tern.outputPos(query, file, wordEnd),","      isProperty: false,","      completions: completions.map(function(rec) {","        var name = typeof rec == \"string\" ? rec : rec.name","        var string = JSON.stringify(name)","        if (quote == \"'\") string = quote + string.slice(1, string.length -1).replace(/'/g, \"\\\\'\") + quote","        if (typeof rec == \"string\") return string","        rec.displayName = name","        rec.name = string","        return rec","      })","    }","  }","","  tern.registerPlugin(\"modules\", function(server, options) {","    server.mod.modules = new Modules(server, options)","","    server.on(\"beforeLoad\", function(file) {","      file.scope = this.mod.modules.buildWrappingScope(file.scope, file.name, file.ast)","    })","","    server.on(\"afterLoad\", function(file) {","      var mod = this.mod.modules.get(file.name)","      mod.origin = file.name","      this.mod.modules.signal(\"getExports\", file, mod)","    })","","    server.on(\"reset\", function() {","      this.mod.modules.modules = Object.create(null)","    })","","    server.on(\"preCondenseReach\", preCondenseReach)","    server.on(\"postLoadDef\", postLoadDef)","    server.on(\"typeAt\", findTypeAt)","    server.on(\"completion\", findCompletions)","  })","","  tern.defineQueryType(\"exports\", {","    takesFile: true,","    run: function(server, query, file) {","      function describe(aval) {","        var target = {}, type = aval.getType(false)","        target.type = infer.toString(type, 3)","        var doc = aval.doc || (type && type.doc), url = aval.url || (type && type.url)","        if (doc) target.doc = doc","        if (url) target.url = url","        var span = tern.getSpan(aval) || (type && tern.getSpan(type))","        if (span) tern.storeSpan(server, query, span, target)","        return target","      }","","      var mod = server.mod.modules, known = mod && mod.modules[file.name]","      if (!known) return {}","      var resp = describe(known);","      var type = known.getType(false)","      if (type instanceof infer.Obj) {","        var props = resp.props = {}","        for (var prop in type.props)","          props[prop] = describe(type.props[prop])","      }","      return resp","    }","  })","})",""],"l":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"22":1,"24":0,"25":0,"26":0,"27":0,"31":0,"32":0,"33":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"64":0,"65":0,"67":0,"68":0,"69":0,"70":0,"74":0,"75":0,"76":0,"80":0,"81":0,"84":0,"88":1,"89":0,"90":0,"91":0,"94":0,"95":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"127":0,"128":0,"129":0,"130":0,"132":0,"134":0,"135":0,"136":0,"137":0,"139":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"152":0,"154":0,"157":1,"158":0,"159":0,"160":0,"162":1,"163":0,"164":0,"165":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"178":1,"179":1,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"188":0,"189":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"205":1,"206":0,"209":1,"210":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"235":0,"236":0,"237":0,"240":1,"241":0,"242":0,"243":0,"244":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"261":1,"262":0,"263":0,"264":0,"265":0,"266":0,"268":0,"269":0,"271":0,"272":0,"273":0,"276":1,"277":0,"278":0,"279":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"289":0,"297":1,"298":0,"299":0,"301":0,"302":0,"303":0,"304":0,"306":0,"307":0,"308":0,"310":0,"311":0,"312":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"328":1,"329":0,"331":0,"332":0,"335":0,"336":0,"337":0,"338":0,"341":0,"342":0,"345":0,"346":0,"347":0,"348":0,"351":1,"354":1,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"374":0}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/complete_strings.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/complete_strings.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":1},"end":{"line":7,"column":15}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":3},"end":{"line":13,"column":31}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":42},"end":{"line":16,"column":68}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":23},"end":{"line":19,"column":34}}},"5":{"name":"postParse","line":26,"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":26}}},"6":{"name":"(anonymous_6)","line":29,"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":30}}},"7":{"name":"complete","line":36,"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":33}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":59,"column":3}},"2":{"start":{"line":8,"column":2},"end":{"line":9,"column":92}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":92}},"4":{"start":{"line":10,"column":2},"end":{"line":11,"column":75}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":75}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":30}},"7":{"start":{"line":16,"column":2},"end":{"line":24,"column":5}},"8":{"start":{"line":17,"column":4},"end":{"line":18,"column":60}},"9":{"start":{"line":19,"column":4},"end":{"line":21,"column":7}},"10":{"start":{"line":20,"column":6},"end":{"line":20,"column":60}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":37}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":37}},"13":{"start":{"line":26,"column":2},"end":{"line":34,"column":3}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":53}},"15":{"start":{"line":28,"column":4},"end":{"line":33,"column":7}},"16":{"start":{"line":30,"column":8},"end":{"line":31,"column":54}},"17":{"start":{"line":31,"column":10},"end":{"line":31,"column":54}},"18":{"start":{"line":36,"column":2},"end":{"line":58,"column":3}},"19":{"start":{"line":37,"column":4},"end":{"line":37,"column":47}},"20":{"start":{"line":38,"column":4},"end":{"line":38,"column":85}},"21":{"start":{"line":39,"column":4},"end":{"line":39,"column":58}},"22":{"start":{"line":39,"column":51},"end":{"line":39,"column":58}},"23":{"start":{"line":40,"column":4},"end":{"line":40,"column":67}},"24":{"start":{"line":41,"column":4},"end":{"line":41,"column":72}},"25":{"start":{"line":42,"column":4},"end":{"line":51,"column":5}},"26":{"start":{"line":42,"column":26},"end":{"line":51,"column":5}},"27":{"start":{"line":43,"column":6},"end":{"line":50,"column":7}},"28":{"start":{"line":44,"column":8},"end":{"line":44,"column":64}},"29":{"start":{"line":45,"column":8},"end":{"line":45,"column":26}},"30":{"start":{"line":46,"column":8},"end":{"line":46,"column":45}},"31":{"start":{"line":46,"column":25},"end":{"line":46,"column":45}},"32":{"start":{"line":47,"column":8},"end":{"line":47,"column":50}},"33":{"start":{"line":47,"column":27},"end":{"line":47,"column":50}},"34":{"start":{"line":49,"column":8},"end":{"line":49,"column":42}},"35":{"start":{"line":52,"column":4},"end":{"line":57,"column":6}},"36":{"start":{"line":52,"column":24},"end":{"line":57,"column":6}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":32}},{"start":{"line":8,"column":36},"end":{"line":8,"column":61}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"4":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":6},"end":{"line":10,"column":33}},{"start":{"line":10,"column":37},"end":{"line":10,"column":47}}]},"5":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":43},"end":{"line":17,"column":50}},{"start":{"line":17,"column":54},"end":{"line":17,"column":71}},{"start":{"line":17,"column":75},"end":{"line":17,"column":77}}]},"6":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":8}},{"start":{"line":30,"column":8},"end":{"line":30,"column":8}}]},"7":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":41}},{"start":{"line":30,"column":45},"end":{"line":30,"column":55}},{"start":{"line":30,"column":59},"end":{"line":30,"column":90}}]},"8":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"9":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":12}},{"start":{"line":39,"column":16},"end":{"line":39,"column":49}}]},"10":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":26},"end":{"line":42,"column":26}},{"start":{"line":42,"column":26},"end":{"line":42,"column":26}}]},"11":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":30},"end":{"line":42,"column":56}},{"start":{"line":42,"column":60},"end":{"line":42,"column":84}}]},"12":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":6}},{"start":{"line":43,"column":6},"end":{"line":43,"column":6}}]},"13":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":10},"end":{"line":43,"column":21}},{"start":{"line":43,"column":25},"end":{"line":43,"column":35}},{"start":{"line":43,"column":39},"end":{"line":43,"column":49}},{"start":{"line":43,"column":53},"end":{"line":43,"column":66}}]},"14":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"15":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"16":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"17":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":106},"end":{"line":54,"column":107}},{"start":{"line":54,"column":110},"end":{"line":54,"column":111}}]}},"code":["// When enabled, this plugin will gather (short) strings in your code,","// and completing when inside a string will try to complete to","// previously seen strings. Takes a single option, maxLength, which","// controls the maximum length of string values to gather, and","// defaults to 15.","","(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(require(\"../lib/infer\"), require(\"../lib/tern\"), require(\"acorn/dist/walk\"));","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"../lib/infer\", \"../lib/tern\", \"acorn/dist/walk\"], mod);","  mod(tern, tern, acorn.walk);","})(function(infer, tern, walk) {","  \"use strict\";","","  tern.registerPlugin(\"complete_strings\", function(server, options) {","    server.mod.completeStrings = { maxLen: options && options.maxLength || 15,","                                seen: Object.create(null) };","    server.on(\"reset\", function() {","      server.mod.completeStrings.seen = Object.create(null);","    });","    server.on(\"postParse\", postParse)","    server.on(\"completion\", complete)","  });","","  function postParse(ast) {","    var data = infer.cx().parent.mod.completeStrings;","    walk.simple(ast, {","      Literal: function(node) {","        if (typeof node.value == \"string\" && node.value && node.value.length < data.maxLen)","          data.seen[node.value] = ast.sourceFile.name;","      }","    });","  }","","  function complete(file, query) {","    var pos = tern.resolvePos(file, query.end);","    var lit = infer.findExpressionAround(file.ast, null, pos, file.scope, \"Literal\");","    if (!lit || typeof lit.node.value != \"string\") return;","    var before = lit.node.value.slice(0, pos - lit.node.start - 1);","    var matches = [], seen = infer.cx().parent.mod.completeStrings.seen;","    for (var str in seen) if (str.length > before.length && str.indexOf(before) == 0) {","      if (query.types || query.docs || query.urls || query.origins) {","        var rec = {name: JSON.stringify(str), displayName: str};","        matches.push(rec);","        if (query.types) rec.type = \"string\";","        if (query.origins) rec.origin = seen[str];","      } else {","        matches.push(JSON.stringify(str));","      }","    }","    if (matches.length) return {","      start: tern.outputPos(query, file, lit.node.start),","      end: tern.outputPos(query, file, pos + (file.text.charAt(pos) == file.text.charAt(lit.node.start) ? 1 : 0)),","      isProperty: false,","      completions: matches","    };","  }","});",""],"l":{"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"16":1,"17":0,"19":0,"20":0,"22":0,"23":0,"26":1,"27":0,"28":0,"30":0,"31":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/es_modules.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/es_modules.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":15}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":31}}},"3":{"name":"connectModule","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":36}}},"4":{"name":"exp","line":15,"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":41}}},"5":{"name":"(anonymous_5)","line":28,"loc":{"start":{"line":28,"column":25},"end":{"line":28,"column":40}}},"6":{"name":"(anonymous_6)","line":43,"loc":{"start":{"line":43,"column":28},"end":{"line":43,"column":43}}},"7":{"name":"(anonymous_7)","line":45,"loc":{"start":{"line":45,"column":26},"end":{"line":45,"column":53}}},"8":{"name":"(anonymous_8)","line":49,"loc":{"start":{"line":49,"column":32},"end":{"line":49,"column":47}}},"9":{"name":"(anonymous_9)","line":53,"loc":{"start":{"line":53,"column":30},"end":{"line":53,"column":45}}},"10":{"name":"isModuleName","line":77,"loc":{"start":{"line":77,"column":2},"end":{"line":77,"column":30}}},"11":{"name":"(anonymous_11)","line":80,"loc":{"start":{"line":80,"column":85},"end":{"line":80,"column":103}}},"12":{"name":"isImport","line":87,"loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":31}}},"13":{"name":"(anonymous_13)","line":106,"loc":{"start":{"line":106,"column":36},"end":{"line":106,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":115,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":3,"column":113}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":113}},"4":{"start":{"line":4,"column":2},"end":{"line":5,"column":87}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":87}},"6":{"start":{"line":6,"column":2},"end":{"line":6,"column":29}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":37}},"8":{"start":{"line":12,"column":2},"end":{"line":75,"column":3}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":47}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":21}},"11":{"start":{"line":15,"column":4},"end":{"line":25,"column":5}},"12":{"start":{"line":16,"column":6},"end":{"line":21,"column":7}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":36}},"14":{"start":{"line":18,"column":8},"end":{"line":18,"column":33}},"15":{"start":{"line":19,"column":8},"end":{"line":19,"column":36}},"16":{"start":{"line":20,"column":8},"end":{"line":20,"column":27}},"17":{"start":{"line":22,"column":6},"end":{"line":22,"column":49}},"18":{"start":{"line":23,"column":6},"end":{"line":23,"column":29}},"19":{"start":{"line":24,"column":6},"end":{"line":24,"column":26}},"20":{"start":{"line":27,"column":4},"end":{"line":74,"column":6}},"21":{"start":{"line":29,"column":8},"end":{"line":29,"column":71}},"22":{"start":{"line":30,"column":8},"end":{"line":41,"column":9}},"23":{"start":{"line":31,"column":10},"end":{"line":31,"column":39}},"24":{"start":{"line":32,"column":10},"end":{"line":32,"column":56}},"25":{"start":{"line":33,"column":10},"end":{"line":40,"column":11}},"26":{"start":{"line":34,"column":12},"end":{"line":34,"column":33}},"27":{"start":{"line":35,"column":17},"end":{"line":40,"column":11}},"28":{"start":{"line":36,"column":12},"end":{"line":36,"column":52}},"29":{"start":{"line":37,"column":12},"end":{"line":37,"column":61}},"30":{"start":{"line":39,"column":12},"end":{"line":39,"column":61}},"31":{"start":{"line":44,"column":8},"end":{"line":44,"column":71}},"32":{"start":{"line":45,"column":8},"end":{"line":47,"column":10}},"33":{"start":{"line":46,"column":10},"end":{"line":46,"column":51}},"34":{"start":{"line":46,"column":21},"end":{"line":46,"column":51}},"35":{"start":{"line":50,"column":8},"end":{"line":50,"column":58}},"36":{"start":{"line":51,"column":8},"end":{"line":51,"column":83}},"37":{"start":{"line":54,"column":8},"end":{"line":54,"column":35}},"38":{"start":{"line":55,"column":8},"end":{"line":65,"column":9}},"39":{"start":{"line":56,"column":10},"end":{"line":64,"column":11}},"40":{"start":{"line":57,"column":12},"end":{"line":61,"column":13}},"41":{"start":{"line":58,"column":14},"end":{"line":58,"column":44}},"42":{"start":{"line":59,"column":14},"end":{"line":60,"column":73}},"43":{"start":{"line":60,"column":16},"end":{"line":60,"column":73}},"44":{"start":{"line":63,"column":12},"end":{"line":63,"column":72}},"45":{"start":{"line":66,"column":8},"end":{"line":72,"column":9}},"46":{"start":{"line":67,"column":10},"end":{"line":67,"column":98}},"47":{"start":{"line":68,"column":10},"end":{"line":71,"column":11}},"48":{"start":{"line":69,"column":12},"end":{"line":69,"column":41}},"49":{"start":{"line":70,"column":12},"end":{"line":70,"column":77}},"50":{"start":{"line":77,"column":2},"end":{"line":85,"column":3}},"51":{"start":{"line":78,"column":4},"end":{"line":78,"column":71}},"52":{"start":{"line":78,"column":65},"end":{"line":78,"column":71}},"53":{"start":{"line":80,"column":4},"end":{"line":82,"column":6}},"54":{"start":{"line":81,"column":6},"end":{"line":81,"column":95}},"55":{"start":{"line":83,"column":4},"end":{"line":83,"column":49}},"56":{"start":{"line":83,"column":43},"end":{"line":83,"column":49}},"57":{"start":{"line":84,"column":4},"end":{"line":84,"column":21}},"58":{"start":{"line":87,"column":2},"end":{"line":104,"column":3}},"59":{"start":{"line":88,"column":4},"end":{"line":103,"column":5}},"60":{"start":{"line":89,"column":6},"end":{"line":89,"column":106}},"61":{"start":{"line":90,"column":6},"end":{"line":90,"column":22}},"62":{"start":{"line":90,"column":16},"end":{"line":90,"column":22}},"63":{"start":{"line":91,"column":6},"end":{"line":91,"column":37}},"64":{"start":{"line":92,"column":6},"end":{"line":99,"column":7}},"65":{"start":{"line":93,"column":8},"end":{"line":93,"column":27}},"66":{"start":{"line":94,"column":8},"end":{"line":94,"column":40}},"67":{"start":{"line":94,"column":32},"end":{"line":94,"column":40}},"68":{"start":{"line":95,"column":8},"end":{"line":95,"column":62}},"69":{"start":{"line":96,"column":8},"end":{"line":97,"column":81}},"70":{"start":{"line":96,"column":51},"end":{"line":96,"column":74}},"71":{"start":{"line":97,"column":13},"end":{"line":97,"column":81}},"72":{"start":{"line":97,"column":49},"end":{"line":97,"column":81}},"73":{"start":{"line":98,"column":8},"end":{"line":98,"column":21}},"74":{"start":{"line":100,"column":11},"end":{"line":103,"column":5}},"75":{"start":{"line":102,"column":6},"end":{"line":102,"column":48}},"76":{"start":{"line":106,"column":2},"end":{"line":114,"column":4}},"77":{"start":{"line":107,"column":4},"end":{"line":107,"column":32}},"78":{"start":{"line":108,"column":4},"end":{"line":108,"column":54}},"79":{"start":{"line":109,"column":4},"end":{"line":109,"column":54}},"80":{"start":{"line":110,"column":4},"end":{"line":110,"column":49}},"81":{"start":{"line":111,"column":4},"end":{"line":111,"column":57}},"82":{"start":{"line":112,"column":4},"end":{"line":112,"column":54}},"83":{"start":{"line":113,"column":4},"end":{"line":113,"column":64}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":61}}]},"3":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":6},"end":{"line":4,"column":33}},{"start":{"line":4,"column":37},"end":{"line":4,"column":47}}]},"5":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":6}},{"start":{"line":16,"column":6},"end":{"line":16,"column":6}}]},"6":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":10},"end":{"line":33,"column":10}},{"start":{"line":33,"column":10},"end":{"line":33,"column":10}}]},"7":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":17},"end":{"line":35,"column":17}},{"start":{"line":35,"column":17},"end":{"line":35,"column":17}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":10}},{"start":{"line":46,"column":10},"end":{"line":46,"column":10}}]},"9":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":19},"end":{"line":50,"column":38}},{"start":{"line":50,"column":42},"end":{"line":50,"column":58}}]},"10":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"11":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":10},"end":{"line":56,"column":10}},{"start":{"line":56,"column":10},"end":{"line":56,"column":10}}]},"12":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":14},"end":{"line":59,"column":14}},{"start":{"line":59,"column":14},"end":{"line":59,"column":14}}]},"13":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]},"14":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":34},"end":{"line":67,"column":85}},{"start":{"line":67,"column":88},"end":{"line":67,"column":98}}]},"15":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"16":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":30}},{"start":{"line":78,"column":34},"end":{"line":78,"column":63}}]},"17":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":13},"end":{"line":81,"column":45}},{"start":{"line":81,"column":49},"end":{"line":81,"column":95}}]},"18":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"19":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":13}},{"start":{"line":83,"column":17},"end":{"line":83,"column":41}}]},"20":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"21":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"22":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":8}},{"start":{"line":94,"column":8},"end":{"line":94,"column":8}}]},"23":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"24":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":13},"end":{"line":97,"column":13}},{"start":{"line":97,"column":13},"end":{"line":97,"column":13}}]},"25":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":11},"end":{"line":100,"column":11}},{"start":{"line":100,"column":11},"end":{"line":100,"column":11}}]},"26":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":15},"end":{"line":100,"column":47}},{"start":{"line":101,"column":15},"end":{"line":101,"column":99}}]}},"code":["(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(require(\"../lib/infer\"), require(\"../lib/tern\"), require(\"acorn/dist/walk\"), require(\"./modules\"))","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"../lib/infer\", \"../lib/tern\", \"acorn/dist/walk\", \"./modules\"], mod)","  mod(tern, tern, acorn.walk)","})(function(infer, tern, walk) {","  \"use strict\"","","  var WG_IMPORT_DEFAULT_FALLBACK = 80","","  function connectModule(file, out) {","    var modules = infer.cx().parent.mod.modules","    var outObj = null","    function exp(prop, type, originNode) {","      if (!outObj) {","        outObj = new infer.Obj(true)","        outObj.origin = file.name","        outObj.originNode = file.ast","        out.addType(outObj)","      }","      var prop = outObj.defProp(prop, originNode)","      prop.origin = file.name","      type.propagate(prop)","    }","","    walk.simple(file.ast, {","      ImportDeclaration: function(node) {","        var input = modules.resolveModule(node.source.value, file.name)","        for (var i = 0; i < node.specifiers.length; i++) {","          var spec = node.specifiers[i]","          var aval = file.scope.getProp(spec.local.name)","          if (spec.type == \"ImportNamespaceSpecifier\") {","            input.propagate(aval)","          } else if (spec.type == \"ImportDefaultSpecifier\") {","            input.getProp(\"default\").propagate(aval)","            input.propagate(aval, WG_IMPORT_DEFAULT_FALLBACK)","          } else {","            input.getProp(spec.imported.name).propagate(aval)","          }","        }","      },","      ExportAllDeclaration: function(node) {","        var input = modules.resolveModule(node.source.value, file.name)","        input.forAllProps(function(prop, val, local) {","          if (local) exp(prop, val, val.originNode)","        })","      },","      ExportDefaultDeclaration: function(node) {","        var decl = node.declaration.id || node.declaration","        exp(\"default\", infer.expressionType({node: decl, state: file.scope}), decl)","      },","      ExportNamedDeclaration: function(node) {","        var decl = node.declaration","        if (decl) {","          if (decl.type == \"VariableDeclaration\") {","            for (var i = 0; i < decl.declarations.length; ++i) {","              var cur = decl.declarations[i]","              if (cur.id.type == \"Identifier\")","                exp(cur.id.name, file.scope.getProp(cur.id.name), cur.id)","            }","          } else {","            exp(decl.id.name, file.scope.getProp(decl.id.name), decl.id)","          }","        }","        if (node.specifiers.length) {","          var src = node.source ? modules.resolveModule(node.source.value, file.name) : file.scope","          for (var i = 0; i < node.specifiers.length; i++) {","            var spec = node.specifiers[i]","            exp(spec.exported.name, src.getProp(spec.local.name), spec.local)","          }","        }","      }","    })","  }","","  function isModuleName(node) {","    if (node.type != \"Literal\" || typeof node.value != \"string\") return","","    var decl = infer.findExpressionAround(node.sourceFile.ast, null, node.end, null, function(_, node) {","      return node.type == \"ImportDeclaration\" || /Export(All|Named)Declaration/.test(node.type)","    })","    if (!decl || decl.node.source != node) return","    return node.value","  }","","  function isImport(node, pos) {","    if (node.type == \"Identifier\") {","      var imp = infer.findExpressionAround(node.sourceFile.ast, null, node.end, null, \"ImportDeclaration\")","      if (!imp) return","      var specs = imp.node.specifiers","      for (var i = 0; i < specs.length; i++) {","        var spec = specs[i]","        if (spec.local != node) continue","        var result = {name: imp.node.source.value, prop: null}","        if (spec.type == \"ImportDefaultSpecifier\") result.prop = \"default\"","        else if (spec.type == \"ImportSpecifier\") result.prop = spec.imported.name","        return result","      }","    } else if (node.type == \"ImportDeclaration\" &&","               /^import\\s+\\{\\s*([\\w$]+\\s*,\\s*)*$/.test(node.sourceFile.text.slice(node.start, pos))) {","      return {name: node.source.value, prop: \"\"}","    }","  }","","  tern.registerPlugin(\"es_modules\", function(server) {","    server.loadPlugin(\"modules\")","    server.mod.modules.on(\"getExports\", connectModule)","    server.mod.modules.modNameTests.push(isModuleName)","    server.mod.modules.importTests.push(isImport)","    server.mod.modules.completableTypes.Identifier = true","    server.mod.modules.completableTypes.Literal = true","    server.mod.modules.completableTypes.ImportDeclaration = true","  })","})",""],"l":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"10":1,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"44":0,"45":0,"46":0,"50":0,"51":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"63":0,"66":0,"67":0,"68":0,"69":0,"70":0,"77":1,"78":0,"80":0,"81":0,"83":0,"84":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"100":0,"102":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/node.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/node.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":15}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":18}}},"3":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":30},"end":{"line":10,"column":47}}},"4":{"name":"(anonymous_4)","line":12,"loc":{"start":{"line":12,"column":27},"end":{"line":12,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3173,"column":3}},"2":{"start":{"line":2,"column":2},"end":{"line":3,"column":66}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":66}},"4":{"start":{"line":4,"column":2},"end":{"line":5,"column":58}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":58}},"6":{"start":{"line":6,"column":2},"end":{"line":6,"column":18}},"7":{"start":{"line":10,"column":2},"end":{"line":18,"column":4}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":37}},"9":{"start":{"line":12,"column":4},"end":{"line":16,"column":6}},"10":{"start":{"line":13,"column":6},"end":{"line":13,"column":72}},"11":{"start":{"line":14,"column":6},"end":{"line":15,"column":46}},"12":{"start":{"line":14,"column":31},"end":{"line":15,"column":46}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":46}},"14":{"start":{"line":17,"column":4},"end":{"line":17,"column":24}},"15":{"start":{"line":20,"column":2},"end":{"line":3172,"column":4}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":61}}]},"3":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":6},"end":{"line":4,"column":33}},{"start":{"line":4,"column":37},"end":{"line":4,"column":47}}]},"5":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":31},"end":{"line":14,"column":31}},{"start":{"line":14,"column":31},"end":{"line":14,"column":31}}]}},"code":["(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(require(\"../lib/tern\"), require(\"./node_resolve\"));","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"../lib/tern\", \"./node_resolve\"], mod);","  mod(tern, tern);","})(function(tern) {","  \"use strict\"","","  tern.registerPlugin(\"node\", function(server) {","    server.loadPlugin(\"node_resolve\")","    server.on(\"postReset\", function() {","      var mods = server.mod.modules, locals = server.cx.definitions.node","      for (var name in locals) if (/^[a-z_]*$/.test(name))","        mods.knownModules[name] = locals[name]","    })","    server.addDefs(defs)","  })","","  var defs = {","    \"!name\": \"node\",","    \"!define\": {","      events: {","        \"!url\": \"https://nodejs.org/api/events.html\",","        \"!doc\": \"Many objects in Node emit events: a net.Server emits an event each time a peer connects to it, a fs.readStream emits an event when the file is opened. All objects which emit events are instances of events.EventEmitter.\",","        EventEmitter: {","          prototype: {","            addListener: {","              \"!type\": \"fn(event: string, listener: fn())\",","              \"!url\": \"https://nodejs.org/api/events.html#events_emitter_addlistener_eventname_listener\",","              \"!doc\": \"Adds a listener to the end of the listeners array for the specified event.\"","            },","            on: {","              \"!type\": \"fn(event: string, listener: fn())\",","              \"!url\": \"https://nodejs.org/api/events.html#events_emitter_on_eventname_listener\",","              \"!doc\": \"Adds a listener to the end of the listeners array for the specified event.\"","            },","            once: {","              \"!type\": \"fn(event: string, listener: fn())\",","              \"!url\": \"https://nodejs.org/api/events.html#events_emitter_once_eventname_listener\",","              \"!doc\": \"Adds a one time listener for the event. This listener is invoked only the next time the event is fired, after which it is removed.\"","            },","            removeListener: {","              \"!type\": \"fn(event: string, listener: fn())\",","              \"!url\": \"https://nodejs.org/api/events.html#events_emitter_removelistener_eventname_listener\",","              \"!doc\": \"Remove a listener from the listener array for the specified event. Caution: changes array indices in the listener array behind the listener.\"","            },","            removeAllListeners: {","              \"!type\": \"fn(event: string)\",","              \"!url\": \"https://nodejs.org/api/events.html#events_emitter_removealllisteners_eventname\",","              \"!doc\": \"Removes all listeners, or those of the specified event.\"","            },","            setMaxListeners: {","              \"!type\": \"fn(n: number)\",","              \"!url\": \"https://nodejs.org/api/events.html#events_emitter_setmaxlisteners_n\",","              \"!doc\": \"By default EventEmitters will print a warning if more than 10 listeners are added for a particular event. This is a useful default which helps finding memory leaks. Obviously not all Emitters should be limited to 10. This function allows that to be increased. Set to zero for unlimited.\"","            },","            listeners: {","              \"!type\": \"fn(event: string) -> [fn()]\",","              \"!url\": \"https://nodejs.org/api/events.html#events_emitter_listeners_eventname\",","              \"!doc\": \"Returns an array of listeners for the specified event.\"","            },","            emit: {","              \"!type\": \"fn(event: string)\",","              \"!url\": \"https://nodejs.org/api/events.html#events_emitter_emit_eventname_arg1_arg2\",","              \"!doc\": \"Execute each of the listeners in order with the supplied arguments.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/events.html#events_class_eventemitter\",","          \"!doc\": \"To access the EventEmitter class, require('events').EventEmitter.\"","        }","      },","      stream: {","        \"!type\": \"fn()\",","        prototype: {","          \"!proto\": \"events.EventEmitter.prototype\",","          pipe: {","            \"!type\": \"fn(destination: +stream.Writable, options?: ?)\",","            \"!url\": \"https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\",","            \"!doc\": \"Connects this readable stream to destination WriteStream. Incoming data on this stream gets written to destination. Properly manages back-pressure so that a slow destination will not be overwhelmed by a fast readable stream.\"","          }","        },","        Writable: {","          \"!type\": \"fn(options?: ?)\",","          prototype: {","            \"!proto\": \"stream.prototype\",","            write: {","              \"!type\": \"fn(chunk: string|+Buffer, encoding?: string, callback?: fn()) -> bool\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback_1\",","              \"!doc\": \"Writes chunk to the stream. Returns true if the data has been flushed to the underlying resource. Returns false to indicate that the buffer is full, and the data will be sent out in the future. The 'drain' event will indicate when the buffer is empty again.\"","            },","            cork: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_writable_cork\",","              \"!doc\": \"Forces buffering of all writes. Buffered data will be flushed either at .uncork() or at .end() call.\"","            },","            uncork: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_writable_uncork\",","              \"!doc\": \"Flush all data, buffered since .cork() call.\"","            },","            setDefaultEncoding: {","              \"!type\": \"fn(encoding: string) -> bool\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_writable_setdefaultencoding_encoding\",","              \"!doc\": \"Sets the default encoding for a writable stream. Returns true if the encoding is valid and is set. Otherwise returns false.\"","            },","            end: {","              \"!type\": \"fn(chunk?: string|+Buffer, encoding?: string, callback?: fn()) -> bool\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_writable_end_chunk_encoding_callback\",","              \"!doc\": \"Call this method to signal the end of the data being written to the stream.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/stream.html#stream_class_stream_writable\",","          \"!doc\": \"A Writable Stream has the following methods, members, and events.\"","        },","        Readable: {","          \"!type\": \"fn(options?: ?)\",","          prototype: {","            \"!proto\": \"stream.prototype\",","            setEncoding: {","              \"!type\": \"fn(encoding: string)\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_readable_setencoding_encoding\",","              \"!doc\": \"Makes the 'data' event emit a string instead of a Buffer. encoding can be 'utf8', 'utf16le' ('ucs2'), 'ascii', or 'hex'.\"","            },","            pause: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_readable_pause\",","              \"!doc\": \"Switches the readable stream into \\\"old mode\\\", where data is emitted using a 'data' event rather than being buffered for consumption via the read() method.\"","            },","            resume: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_readable_resume\",","              \"!doc\": \"Switches the readable stream into \\\"old mode\\\", where data is emitted using a 'data' event rather than being buffered for consumption via the read() method.\"","            },","            destroy: \"fn()\",","            unpipe: {","              \"!type\": \"fn(dest?: +stream.Writable)\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_readable_unpipe_destination\",","              \"!doc\": \"Undo a previously established pipe(). If no destination is provided, then all previously established pipes are removed.\"","            },","            push: {","              \"!type\": \"fn(chunk: +Buffer) -> bool\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_readable_push_chunk\",","              \"!doc\": \"Explicitly insert some data into the read queue. If called with null, will signal the end of the data.\"","            },","            unshift: {","              \"!type\": \"fn(chunk: +Buffer) -> bool\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_readable_unshift_chunk\",","              \"!doc\": \"This is the corollary of readable.push(chunk). Rather than putting the data at the end of the read queue, it puts it at the front of the read queue.\"","            },","            wrap: {","              \"!type\": \"fn(stream: ?) -> +stream.Readable\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_readable_wrap_stream\",","              \"!doc\": \"If you are using an older Node library that emits 'data' events and has a pause() method that is advisory only, then you can use the wrap() method to create a Readable stream that uses the old stream as its data source.\"","            },","            read: {","              \"!type\": \"fn(size?: number) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/stream.html#stream_readable_read_size_1\",","              \"!doc\": \"Call this method to consume data once the 'readable' event is emitted.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/stream.html#stream_class_stream_readable\",","          \"!doc\": \"A Readable Stream has the following methods, members, and events.\"","        },","        Duplex: {","          \"!type\": \"fn(options?: ?)\",","          prototype: {","            \"!proto\": \"stream.Readable.prototype\",","            write: \"fn(chunk: +Buffer, encoding?: string, callback?: fn()) -> bool\",","            end: \"fn(chunk: +Buffer, encoding?: string, callback?: fn()) -> bool\"","          },","          \"!url\": \"https://nodejs.org/api/stream.html#stream_class_stream_duplex\",","          \"!doc\": \"A \\\"duplex\\\" stream is one that is both Readable and Writable, such as a TCP socket connection.\"","        },","        Transform: {","          \"!type\": \"fn(options?: ?)\",","          prototype: {","            \"!proto\": \"stream.Duplex.prototype\"","          },","          \"!url\": \"https://nodejs.org/api/stream.html#stream_class_stream_transform\",","          \"!doc\": \"A \\\"transform\\\" stream is a duplex stream where the output is causally connected in some way to the input, such as a zlib stream or a crypto stream.\"","        },","        PassThrough: \"stream.Transform\",","        \"!url\": \"https://nodejs.org/api/stream.html#stream_stream\",","        \"!doc\": \"A stream is an abstract interface implemented by various objects in Node. For example a request to an HTTP server is a stream, as is stdout. Streams are readable, writable, or both. All streams are instances of EventEmitter\"","      },","      querystring: {","        \"!url\": \"https://nodejs.org/api/querystring.html\",","        \"!doc\": \"This module provides utilities for dealing with query strings.\",","        stringify: {","          \"!type\": \"fn(obj: ?, sep?: string, eq?: string) -> string\",","          \"!url\": \"https://nodejs.org/api/querystring.html#querystring_querystring_stringify_obj_sep_eq\",","          \"!doc\": \"Serialize an object to a query string. Optionally override the default separator ('&') and assignment ('=') characters.\"","        },","        parse: {","          \"!type\": \"fn(str: string, sep?: string, eq?: string, options?: ?) -> ?\",","          \"!url\": \"https://nodejs.org/api/querystring.html#querystring_querystring_parse_str_sep_eq_options\",","          \"!doc\": \"Deserialize a query string to an object. Optionally override the default separator ('&') and assignment ('=') characters.\"","        },","        escape: {","          \"!type\": \"fn(string) -> string\",","          \"!url\": \"https://nodejs.org/api/querystring.html#querystring_querystring_escape\",","          \"!doc\": \"The escape function used by querystring.stringify, provided so that it could be overridden if necessary.\"","        },","        unescape: {","          \"!type\": \"fn(string) -> string\",","          \"!url\": \"https://nodejs.org/api/querystring.html#querystring_querystring_unescape\",","          \"!doc\": \"The unescape function used by querystring.parse, provided so that it could be overridden if necessary.\"","        }","      },","      http: {","        \"!url\": \"https://nodejs.org/api/http.html\",","        \"!doc\": \"The HTTP interfaces in Node are designed to support many features of the protocol which have been traditionally difficult to use. In particular, large, possibly chunk-encoded, messages. The interface is careful to never buffer entire requests or responses--the user is able to stream data.\",","        STATUS_CODES: {},","        createServer: {","          \"!type\": \"fn(listener?: fn(request: +http.IncomingMessage, response: +http.ServerResponse)) -> +http.Server\",","          \"!url\": \"https://nodejs.org/api/http.html#http_http_createserver_requestlistener\",","          \"!doc\": \"Returns a new web server object.\"","        },","        Server: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"events.EventEmitter.prototype\",","            listen: {","              \"!type\": \"fn(port: number, hostname?: string, backlog?: number, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/http.html#http_server_listen_port_hostname_backlog_callback\",","              \"!doc\": \"Begin accepting connections on the specified port and hostname. If the hostname is omitted, the server will accept connections directed to any IPv4 address (INADDR_ANY).\"","            },","            close: {","              \"!type\": \"fn(callback?: ?)\",","              \"!url\": \"https://nodejs.org/api/http.html#http_server_close_callback\",","              \"!doc\": \"Stops the server from accepting new connections.\"","            },","            maxHeadersCount: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/http.html#http_server_maxheaderscount\",","              \"!doc\": \"Limits maximum incoming headers count, equal to 1000 by default. If set to 0 - no limit will be applied.\"","            },","            setTimeout: {","              \"!type\": \"fn(timeout: number, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/http.html#http_server_settimeout_msecs_callback\",","              \"!doc\": \"Sets the timeout value for sockets, and emits a 'timeout' event on the Server object, passing the socket as an argument, if a timeout occurs.\"","            },","            timeout: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/http.html#http_server_timeout\",","              \"!doc\": \"The number of milliseconds of inactivity before a socket is presumed to have timed out.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/http.html#http_class_http_server\",","          \"!doc\": \"Class for HTTP server objects.\"","        },","        ServerResponse: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Writable.prototype\",","            writeContinue: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_writecontinue\",","              \"!doc\": \"Sends a HTTP/1.1 100 Continue message to the client, indicating that the request body should be sent.\"","            },","            writeHead: {","              \"!type\": \"fn(statusCode: number, headers?: ?)\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_writehead_statuscode_reasonphrase_headers\",","              \"!doc\": \"Sends a response header to the request. The status code is a 3-digit HTTP status code, like 404. The last argument, headers, are the response headers. Optionally one can give a human-readable reasonPhrase as the second argument.\"","            },","            setTimeout: {","              \"!type\": \"fn(timeout: number, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_settimeout_msecs_callback\",","              \"!doc\": \"Sets the Socket's timeout value to msecs. If a callback is provided, then it is added as a listener on the 'timeout' event on the response object.\"","            },","            statusCode: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_statuscode\",","              \"!doc\": \"When using implicit headers (not calling response.writeHead() explicitly), this property controls the status code that will be sent to the client when the headers get flushed.\"","            },","            setHeader: {","              \"!type\": \"fn(name: string, value: string)\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_setheader_name_value\",","              \"!doc\": \"Sets a single header value for implicit headers. If this header already exists in the to-be-sent headers, its value will be replaced. Use an array of strings here if you need to send multiple headers with the same name.\"","            },","            headersSent: {","              \"!type\": \"bool\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_headerssent\",","              \"!doc\": \"Boolean (read-only). True if headers were sent, false otherwise.\"","            },","            sendDate: {","              \"!type\": \"bool\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_senddate\",","              \"!doc\": \"When true, the Date header will be automatically generated and sent in the response if it is not already present in the headers. Defaults to true.\"","            },","            getHeader: {","              \"!type\": \"fn(name: string) -> string\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_getheader_name\",","              \"!doc\": \"Reads out a header that's already been queued but not sent to the client. Note that the name is case insensitive. This can only be called before headers get implicitly flushed.\"","            },","            removeHeader: {","              \"!type\": \"fn(name: string)\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_removeheader_name\",","              \"!doc\": \"Removes a header that's queued for implicit sending.\"","            },","            addTrailers: {","              \"!type\": \"fn(headers: ?)\",","              \"!url\": \"https://nodejs.org/api/http.html#http_response_addtrailers_headers\",","              \"!doc\": \"This method adds HTTP trailing headers (a header but at the end of the message) to the response.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/http.html#http_class_http_serverresponse\",","          \"!doc\": \"This object is created internally by a HTTP server--not by the user. It is passed as the second parameter to the 'request' event.\"","        },","        request: {","          \"!type\": \"fn(options: ?, callback?: fn(res: +http.IncomingMessage)) -> +http.ClientRequest\",","          \"!url\": \"https://nodejs.org/api/http.html#http_http_request_options_callback\",","          \"!doc\": \"Node maintains several connections per server to make HTTP requests. This function allows one to transparently issue requests.\"","        },","        get: {","          \"!type\": \"fn(options: ?, callback?: fn(res: +http.IncomingMessage)) -> +http.ClientRequest\",","          \"!url\": \"https://nodejs.org/api/http.html#http_http_get_options_callback\",","          \"!doc\": \"Since most requests are GET requests without bodies, Node provides this convenience method. The only difference between this method and http.request() is that it sets the method to GET and calls req.end() automatically.\"","        },","        globalAgent: {","          \"!type\": \"+http.Agent\",","          \"!url\": \"https://nodejs.org/api/http.html#http_http_globalagent\",","          \"!doc\": \"Global instance of Agent which is used as the default for all http client requests.\"","        },","        Agent: {","          \"!type\": \"fn()\",","          prototype: {","            maxSockets: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/http.html#http_agent_maxsockets\",","              \"!doc\": \"By default set to 5. Determines how many concurrent sockets the agent can have open per host.\"","            },","            sockets: {","              \"!type\": \"[+net.Socket]\",","              \"!url\": \"https://nodejs.org/api/http.html#http_agent_sockets\",","              \"!doc\": \"An object which contains arrays of sockets currently in use by the Agent. Do not modify.\"","            },","            requests: {","              \"!type\": \"[+http.ClientRequest]\",","              \"!url\": \"https://nodejs.org/api/http.html#http_agent_requests\",","              \"!doc\": \"An object which contains queues of requests that have not yet been assigned to sockets. Do not modify.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/http.html#http_class_http_agent\",","          \"!doc\": \"In node 0.5.3+ there is a new implementation of the HTTP Agent which is used for pooling sockets used in HTTP client requests.\"","        },","        ClientRequest: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Writable.prototype\",","            abort: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/http.html#http_request_abort\",","              \"!doc\": \"Aborts a request. (New since v0.3.8.)\"","            },","            setTimeout: {","              \"!type\": \"fn(timeout: number, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/http.html#http_request_settimeout_timeout_callback\",","              \"!doc\": \"Once a socket is assigned to this request and is connected socket.setTimeout() will be called.\"","            },","            setNoDelay: {","              \"!type\": \"fn(noDelay?: fn())\",","              \"!url\": \"https://nodejs.org/api/http.html#http_request_setnodelay_nodelay\",","              \"!doc\": \"Once a socket is assigned to this request and is connected socket.setNoDelay() will be called.\"","            },","            setSocketKeepAlive: {","              \"!type\": \"fn(enable?: bool, initialDelay?: number)\",","              \"!url\": \"https://nodejs.org/api/http.html#http_request_setsocketkeepalive_enable_initialdelay\",","              \"!doc\": \"Once a socket is assigned to this request and is connected socket.setKeepAlive() will be called.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/http.html#http_class_http_clientrequest\",","          \"!doc\": \"This object is created internally and returned from http.request(). It represents an in-progress request whose header has already been queued. The header is still mutable using the setHeader(name, value), getHeader(name), removeHeader(name) API. The actual header will be sent along with the first data chunk or when closing the connection.\"","        },","        IncomingMessage: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Readable.prototype\",","            httpVersion: {","              \"!type\": \"string\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_httpversion\",","              \"!doc\": \"In case of server request, the HTTP version sent by the client. In the case of client response, the HTTP version of the connected-to server. Probably either '1.1' or '1.0'.\"","            },","            headers: {","              \"!type\": \"?\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_headers\",","              \"!doc\": \"The request/response headers object.\"","            },","            trailers: {","              \"!type\": \"?\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_trailers\",","              \"!doc\": \"The request/response trailers object. Only populated after the 'end' event.\"","            },","            setTimeout: {","              \"!type\": \"fn(timeout: number, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_settimeout_msecs_callback\",","              \"!doc\": \"Calls message.connection.setTimeout(msecs, callback).\"","            },","            setEncoding: {","              \"!type\": \"fn(encoding?: string)\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_setencoding_encoding\",","              \"!doc\": \"Set the encoding for data emitted by the 'data' event.\"","            },","            pause: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_pause\",","              \"!doc\": \"Pauses request/response from emitting events. Useful to throttle back a download.\"","            },","            resume: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_resume\",","              \"!doc\": \"Resumes a paused request/response.\"","            },","            method: {","              \"!type\": \"string\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_method\",","              \"!doc\": \"Only valid for request obtained from http.Server.\"","            },","            url: {","              \"!type\": \"string\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_url\",","              \"!doc\": \"Only valid for request obtained from http.Server.\"","            },","            statusCode: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_statuscode\",","              \"!doc\": \"Only valid for response obtained from http.ClientRequest.\"","            },","            socket: {","              \"!type\": \"+net.Socket\",","              \"!url\": \"https://nodejs.org/api/http.html#http_message_socket\",","              \"!doc\": \"The net.Socket object associated with the connection.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/http.html#http_http_incomingmessage\",","          \"!doc\": \"An IncomingMessage object is created by http.Server or http.ClientRequest and passed as the first argument to the 'request' and 'response' event respectively. It may be used to access response status, headers and data.\"","        }","      },","      https: {","        \"!url\": \"https://nodejs.org/api/http.html\",","        \"!doc\": \"HTTPS is the HTTP protocol over TLS/SSL. In Node this is implemented as a separate module.\",","        Server: \"http.Server\",","        createServer: {","          \"!type\": \"fn(listener?: fn(request: +http.IncomingMessage, response: +http.ServerResponse)) -> +https.Server\",","          \"!url\": \"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener\",","          \"!doc\": \"Returns a new HTTPS web server object. The options is similar to tls.createServer(). The requestListener is a function which is automatically added to the 'request' event.\"","        },","        request: {","          \"!type\": \"fn(options: ?, callback?: fn(res: +http.IncomingMessage)) -> +http.ClientRequest\",","          \"!url\": \"https://nodejs.org/api/https.html#https_https_request_options_callback\",","          \"!doc\": \"Makes a request to a secure web server.\"","        },","        get: {","          \"!type\": \"fn(options: ?, callback?: fn(res: +http.IncomingMessage)) -> +http.ClientRequest\",","          \"!url\": \"https://nodejs.org/api/https.html#https_https_get_options_callback\",","          \"!doc\": \"Like http.get() but for HTTPS.\"","        },","        Agent: \"http.Agent\",","        globalAgent: \"http.globalAgent\"","      },","      cluster: {","        \"!proto\": \"events.EventEmitter.prototype\",","        settings: {","          exec: \"string\",","          args: \"[string]\",","          silent: \"bool\",","          \"!url\": \"https://nodejs.org/api/cluster.html#cluster_cluster_settings\",","          \"!doc\": \"All settings set by the .setupMaster is stored in this settings object. This object is not supposed to be changed or set manually, by you.\"","        },","        Worker: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"events.EventEmitter.prototype\",","            id: {","              \"!type\": \"string\",","              \"!url\": \"https://nodejs.org/api/cluster.html#cluster_worker_id\",","              \"!doc\": \"Each new worker is given its own unique id, this id is stored in the id.\"","            },","            process: {","              \"!type\": \"+child_process.ChildProcess\",","              \"!url\": \"https://nodejs.org/api/cluster.html#cluster_worker_process\",","              \"!doc\": \"All workers are created using child_process.fork(), the returned object from this function is stored in process.\"","            },","            suicide: {","              \"!type\": \"bool\",","              \"!url\": \"https://nodejs.org/api/cluster.html#cluster_worker_suicide\",","              \"!doc\": \"This property is a boolean. It is set when a worker dies after calling .kill() or immediately after calling the .disconnect() method. Until then it is undefined.\"","            },","            send: {","              \"!type\": \"fn(message: ?, sendHandle?: ?)\",","              \"!url\": \"https://nodejs.org/api/cluster.html#cluster_worker_send_message_sendhandle\",","              \"!doc\": \"This function is equal to the send methods provided by child_process.fork(). In the master you should use this function to send a message to a specific worker. However in a worker you can also use process.send(message), since this is the same function.\"","            },","            destroy: \"fn()\",","            disconnect: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/cluster.html#cluster_worker_disconnect\",","              \"!doc\": \"When calling this function the worker will no longer accept new connections, but they will be handled by any other listening worker. Existing connection will be allowed to exit as usual. When no more connections exist, the IPC channel to the worker will close allowing it to die graceful. When the IPC channel is closed the disconnect event will emit, this is then followed by the exit event, there is emitted when the worker finally die.\"","            },","            kill: {","              \"!type\": \"fn(signal?: string)\",","              \"!url\": \"https://nodejs.org/api/cluster.html#cluster_worker_kill_signal_sigterm\",","              \"!doc\": \"This function will kill the worker, and inform the master to not spawn a new worker. The boolean suicide lets you distinguish between voluntary and accidental exit.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/cluster.html#cluster_class_worker\",","          \"!doc\": \"A Worker object contains all public information and method about a worker. In the master it can be obtained using cluster.workers. In a worker it can be obtained using cluster.worker.\"","        },","        isMaster: {","          \"!type\": \"bool\",","          \"!url\": \"https://nodejs.org/api/cluster.html#cluster_cluster_ismaster\",","          \"!doc\": \"True if the process is a master. This is determined by the process.env.NODE_UNIQUE_ID. If process.env.NODE_UNIQUE_ID is undefined, then isMaster is true.\"","        },","        isWorker: {","          \"!type\": \"bool\",","          \"!url\": \"https://nodejs.org/api/cluster.html#cluster_cluster_isworker\",","          \"!doc\": \"This boolean flag is true if the process is a worker forked from a master. If the process.env.NODE_UNIQUE_ID is set to a value, then isWorker is true.\"","        },","        setupMaster: {","          \"!type\": \"fn(settings?: cluster.settings)\",","          \"!url\": \"https://nodejs.org/api/cluster.html#cluster_cluster_setupmaster_settings\",","          \"!doc\": \"setupMaster is used to change the default 'fork' behavior. The new settings are effective immediately and permanently, they cannot be changed later on.\"","        },","        fork: {","          \"!type\": \"fn(env?: ?) -> +cluster.Worker\",","          \"!url\": \"https://nodejs.org/api/cluster.html#cluster_cluster_fork_env\",","          \"!doc\": \"Spawn a new worker process. This can only be called from the master process.\"","        },","        disconnect: {","          \"!type\": \"fn(callback?: fn())\",","          \"!url\": \"https://nodejs.org/api/cluster.html#cluster_cluster_disconnect_callback\",","          \"!doc\": \"When calling this method, all workers will commit a graceful suicide. When they are disconnected all internal handlers will be closed, allowing the master process to die graceful if no other event is waiting.\"","        },","        worker: {","          \"!type\": \"+cluster.Worker\",","          \"!url\": \"https://nodejs.org/api/cluster.html#cluster_cluster_worker\",","          \"!doc\": \"A reference to the current worker object. Not available in the master process.\"","        },","        workers: {","          \"!type\": \"[+cluster.Worker]\",","          \"!url\": \"https://nodejs.org/api/cluster.html#cluster_cluster_workers\",","          \"!doc\": \"A hash that stores the active worker objects, keyed by id field. Makes it easy to loop through all the workers. It is only available in the master process.\"","        },","        \"!url\": \"https://nodejs.org/api/cluster.html#cluster_cluster\",","        \"!doc\": \"A single instance of Node runs in a single thread. To take advantage of multi-core systems the user will sometimes want to launch a cluster of Node processes to handle the load.\"","      },","      zlib: {","        \"!url\": \"https://nodejs.org/api/zlib.html\",","        \"!doc\": \"This provides bindings to Gzip/Gunzip, Deflate/Inflate, and DeflateRaw/InflateRaw classes. Each class takes the same options, and is a readable/writable Stream.\",","        Zlib: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Duplex.prototype\",","            flush: {","              \"!type\": \"fn(callback: fn())\",","              \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_flush_callback\",","              \"!doc\": \"Flush pending data. Don't call this frivolously, premature flushes negatively impact the effectiveness of the compression algorithm.\"","            },","            reset: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_reset\",","              \"!doc\": \"Reset the compressor/decompressor to factory defaults. Only applicable to the inflate and deflate algorithms.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_class_zlib_zlib\",","          \"!doc\": \"Not exported by the zlib module. It is documented here because it is the base class of the compressor/decompressor classes.\"","        },","        deflate: {","          \"!type\": \"fn(buf: +Buffer, callback: fn())\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_deflate_buf_callback\",","          \"!doc\": \"Compress a string with Deflate.\"","        },","        deflateRaw: {","          \"!type\": \"fn(buf: +Buffer, callback: fn())\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_deflateraw_buf_callback\",","          \"!doc\": \"Compress a string with DeflateRaw.\"","        },","        gzip: {","          \"!type\": \"fn(buf: +Buffer, callback: fn())\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_gzip_buf_callback\",","          \"!doc\": \"Compress a string with Gzip.\"","        },","        gunzip: {","          \"!type\": \"fn(buf: +Buffer, callback: fn())\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_gunzip_buf_callback\",","          \"!doc\": \"Decompress a raw Buffer with Gunzip.\"","        },","        inflate: {","          \"!type\": \"fn(buf: +Buffer, callback: fn())\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_inflate_buf_callback\",","          \"!doc\": \"Decompress a raw Buffer with Inflate.\"","        },","        inflateRaw: {","          \"!type\": \"fn(buf: +Buffer, callback: fn())\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_inflateraw_buf_callback\",","          \"!doc\": \"Decompress a raw Buffer with InflateRaw.\"","        },","        unzip: {","          \"!type\": \"fn(buf: +Buffer, callback: fn())\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_unzip_buf_callback\",","          \"!doc\": \"Decompress a raw Buffer with Unzip.\"","        },","        Gzip: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_class_zlib_gzip\",","          \"!doc\": \"Compress data using gzip.\",","          prototype: {\"!proto:\": \"zlib.Zlib.prototype\"}","        },","        createGzip: {","          \"!type\": \"fn(options: ?) -> +zlib.Zlib\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_creategzip_options\",","          \"!doc\": \"Returns a new Gzip object with an options.\"","        },","        Gunzip: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_class_zlib_gunzip\",","          \"!doc\": \"Decompress a gzip stream.\",","          prototype: {\"!proto:\": \"zlib.Zlib.prototype\"}","        },","        createGunzip: {","          \"!type\": \"fn(options: ?) -> +zlib.Gunzip\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_creategunzip_options\",","          \"!doc\": \"Returns a new Gunzip object with an options.\"","        },","        Deflate: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_class_zlib_deflate\",","          \"!doc\": \"Compress data using deflate.\",","          prototype: {\"!proto:\": \"zlib.Zlib.prototype\"}","        },","        createDeflate: {","          \"!type\": \"fn(options: ?) -> +zlib.Deflate\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_createdeflate_options\",","          \"!doc\": \"Returns a new Deflate object with an options.\"","        },","        Inflate: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_class_zlib_inflate\",","          \"!doc\": \"Decompress a deflate stream.\",","          prototype: {\"!proto:\": \"zlib.Zlib.prototype\"}","        },","        createInflate: {","          \"!type\": \"fn(options: ?) -> +zlib.Inflate\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_createinflate_options\",","          \"!doc\": \"Returns a new Inflate object with an options.\"","        },","        InflateRaw: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_class_zlib_inflateraw\",","          \"!doc\": \"Decompress a raw deflate stream.\",","          prototype: {\"!proto:\": \"zlib.Zlib.prototype\"}","        },","        createInflateRaw: {","          \"!type\": \"fn(options: ?) -> +zlib.InflateRaw\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_createinflateraw_options\",","          \"!doc\": \"Returns a new InflateRaw object with an options.\"","        },","        DeflateRaw: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_class_zlib_deflateraw\",","          \"!doc\": \"Compress data using deflate, and do not append a zlib header.\",","          prototype: {\"!proto:\": \"zlib.Zlib.prototype\"}","        },","        createDeflateRaw: {","          \"!type\": \"fn(options: ?) -> +zlib.DeflateRaw\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_createdeflateraw_options\",","          \"!doc\": \"Returns a new DeflateRaw object with an options.\"","        },","        Unzip: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_class_zlib_unzip\",","          \"!doc\": \"Decompress either a Gzip- or Deflate-compressed stream by auto-detecting the header.\",","          prototype: {\"!proto:\": \"zlib.Zlib.prototype\"}","        },","        createUnzip: {","          \"!type\": \"fn(options: ?) -> +zlib.Unzip\",","          \"!url\": \"https://nodejs.org/api/zlib.html#zlib_zlib_createunzip_options\",","          \"!doc\": \"Returns a new Unzip object with an options.\"","        },","        Z_NO_FLUSH: \"number\",","        Z_PARTIAL_FLUSH: \"number\",","        Z_SYNC_FLUSH: \"number\",","        Z_FULL_FLUSH: \"number\",","        Z_FINISH: \"number\",","        Z_BLOCK: \"number\",","        Z_TREES: \"number\",","        Z_OK: \"number\",","        Z_STREAM_END: \"number\",","        Z_NEED_DICT: \"number\",","        Z_ERRNO: \"number\",","        Z_STREAM_ERROR: \"number\",","        Z_DATA_ERROR: \"number\",","        Z_MEM_ERROR: \"number\",","        Z_BUF_ERROR: \"number\",","        Z_VERSION_ERROR: \"number\",","        Z_NO_COMPRESSION: \"number\",","        Z_BEST_SPEED: \"number\",","        Z_BEST_COMPRESSION: \"number\",","        Z_DEFAULT_COMPRESSION: \"number\",","        Z_FILTERED: \"number\",","        Z_HUFFMAN_ONLY: \"number\",","        Z_RLE: \"number\",","        Z_FIXED: \"number\",","        Z_DEFAULT_STRATEGY: \"number\",","        Z_BINARY: \"number\",","        Z_TEXT: \"number\",","        Z_ASCII: \"number\",","        Z_UNKNOWN: \"number\",","        Z_DEFLATED: \"number\",","        Z_NULL: \"number\"","      },","      os: {","        \"!url\": \"https://nodejs.org/api/os.html\",","        \"!doc\": \"Provides a few basic operating-system related utility functions.\",","        tmpdir: {","          \"!type\": \"fn() -> string\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_tmpdir\",","          \"!doc\": \"Returns the operating system's default directory for temp files.\"","        },","        endianness: {","          \"!type\": \"fn() -> string\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_endianness\",","          \"!doc\": \"Returns the endianness of the CPU. Possible values are \\\"BE\\\" or \\\"LE\\\".\"","        },","        hostname: {","          \"!type\": \"fn() -> string\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_hostname\",","          \"!doc\": \"Returns the hostname of the operating system.\"","        },","        type: {","          \"!type\": \"fn() -> string\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_type\",","          \"!doc\": \"Returns the operating system name.\"","        },","        platform: {","          \"!type\": \"fn() -> string\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_platform\",","          \"!doc\": \"Returns the operating system platform.\"","        },","        arch: {","          \"!type\": \"fn() -> string\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_arch\",","          \"!doc\": \"Returns the operating system CPU architecture.\"","        },","        release: {","          \"!type\": \"fn() -> string\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_release\",","          \"!doc\": \"Returns the operating system release.\"","        },","        uptime: {","          \"!type\": \"fn() -> number\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_uptime\",","          \"!doc\": \"Returns the system uptime in seconds.\"","        },","        loadavg: {","          \"!type\": \"fn() -> [number]\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_loadavg\",","          \"!doc\": \"Returns an array containing the 1, 5, and 15 minute load averages.\"","        },","        totalmem: {","          \"!type\": \"fn() -> number\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_totalmem\",","          \"!doc\": \"Returns the total amount of system memory in bytes.\"","        },","        freemem: {","          \"!type\": \"fn() -> number\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_freemem\",","          \"!doc\": \"Returns the amount of free system memory in bytes.\"","        },","        cpus: {","          \"!type\": \"fn() -> [os.cpuSpec]\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_cpus\",","          \"!doc\": \"Returns an array of objects containing information about each CPU/core installed: model, speed (in MHz), and times (an object containing the number of milliseconds the CPU/core spent in: user, nice, sys, idle, and irq).\"","        },","        networkInterfaces: {","          \"!type\": \"fn() -> ?\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_networkinterfaces\",","          \"!doc\": \"Get a list of network interfaces.\"","        },","        EOL: {","          \"!type\": \"string\",","          \"!url\": \"https://nodejs.org/api/os.html#os_os_eol\",","          \"!doc\": \"A constant defining the appropriate End-of-line marker for the operating system.\"","        }","      },","      punycode: {","        \"!url\": \"https://nodejs.org/api/punycode.html\",","        \"!doc\": \"Punycode.js is bundled with Node.js v0.6.2+. Use require('punycode') to access it. (To use it with other Node.js versions, use npm to install the punycode module first.)\",","        decode: {","          \"!type\": \"fn(string: string) -> string\",","          \"!url\": \"https://nodejs.org/api/punycode.html#punycode_punycode_decode_string\",","          \"!doc\": \"Converts a Punycode string of ASCII code points to a string of Unicode code points.\"","        },","        encode: {","          \"!type\": \"fn(string: string) -> string\",","          \"!url\": \"https://nodejs.org/api/punycode.html#punycode_punycode_encode_string\",","          \"!doc\": \"Converts a string of Unicode code points to a Punycode string of ASCII code points.\"","        },","        toUnicode: {","          \"!type\": \"fn(domain: string) -> string\",","          \"!url\": \"https://nodejs.org/api/punycode.html#punycode_punycode_tounicode_domain\",","          \"!doc\": \"Converts a Punycode string representing a domain name to Unicode. Only the Punycoded parts of the domain name will be converted, i.e. it doesn't matter if you call it on a string that has already been converted to Unicode.\"","        },","        toASCII: {","          \"!type\": \"fn(domain: string) -> string\",","          \"!url\": \"https://nodejs.org/api/punycode.html#punycode_punycode_toascii_domain\",","          \"!doc\": \"Converts a Unicode string representing a domain name to Punycode. Only the non-ASCII parts of the domain name will be converted, i.e. it doesn't matter if you call it with a domain that's already in ASCII.\"","        },","        ucs2: {","          decode: {","            \"!type\": \"fn(string: string) -> string\",","            \"!url\": \"https://nodejs.org/api/punycode.html#punycode_punycode_ucs2_decode_string\",","            \"!doc\": \"Creates an array containing the decimal code points of each Unicode character in the string. While JavaScript uses UCS-2 internally, this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16.\"","          },","          encode: {","            \"!type\": \"fn(codePoints: [number]) -> string\",","            \"!url\": \"https://nodejs.org/api/punycode.html#punycode_punycode_ucs2_encode_codepoints\",","            \"!doc\": \"Creates a string based on an array of decimal code points.\"","          }","        },","        version: {","          \"!type\": \"?\",","          \"!url\": \"https://nodejs.org/api/punycode.html#punycode_punycode_version\",","          \"!doc\": \"A string representing the current Punycode.js version number.\"","        }","      },","      repl: {","        \"!url\": \"https://nodejs.org/api/repl.html\",","        \"!doc\": \"A Read-Eval-Print-Loop (REPL) is available both as a standalone program and easily includable in other programs. The REPL provides a way to interactively run JavaScript and see the results. It can be used for debugging, testing, or just trying things out.\",","        start: {","          \"!type\": \"fn(options: ?) -> +events.EventEmitter\",","          \"!url\": \"https://nodejs.org/api/repl.html#repl_repl_start_options\",","          \"!doc\": \"Returns and starts a REPLServer instance.\"","        }","      },","      readline: {","        \"!url\": \"https://nodejs.org/api/readline.html\",","        \"!doc\": \"Readline allows reading of a stream (such as process.stdin) on a line-by-line basis.\",","        createInterface: {","          \"!type\": \"fn(options: ?) -> +readline.Interface\",","          \"!url\": \"https://nodejs.org/api/readline.html#readline_readline_createinterface_options\",","          \"!doc\": \"Creates a readline Interface instance.\"","        },","        Interface: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"events.EventEmitter.prototype\",","            setPrompt: {","              \"!type\": \"fn(prompt: string, length: number)\",","              \"!url\": \"https://nodejs.org/api/readline.html#readline_rl_setprompt_prompt_length\",","              \"!doc\": \"Sets the prompt, for example when you run node on the command line, you see > , which is node's prompt.\"","            },","            prompt: {","              \"!type\": \"fn(preserveCursor?: bool)\",","              \"!url\": \"https://nodejs.org/api/readline.html#readline_rl_prompt_preservecursor\",","              \"!doc\": \"Readies readline for input from the user, putting the current setPrompt options on a new line, giving the user a new spot to write. Set preserveCursor to true to prevent the cursor placement being reset to 0.\"","            },","            question: {","              \"!type\": \"fn(query: string, callback: fn())\",","              \"!url\": \"https://nodejs.org/api/readline.html#readline_rl_question_query_callback\",","              \"!doc\": \"Prepends the prompt with query and invokes callback with the user's response. Displays the query to the user, and then invokes callback with the user's response after it has been typed.\"","            },","            pause: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/readline.html#readline_rl_pause\",","              \"!doc\": \"Pauses the readline input stream, allowing it to be resumed later if needed.\"","            },","            resume: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/readline.html#readline_rl_resume\",","              \"!doc\": \"Resumes the readline input stream.\"","            },","            close: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/readline.html#readline_rl_close\",","              \"!doc\": \"Closes the Interface instance, relinquishing control on the input and output streams. The \\\"close\\\" event will also be emitted.\"","            },","            write: {","              \"!type\": \"fn(data: ?, key?: ?)\",","              \"!url\": \"https://nodejs.org/api/readline.html#readline_rl_write_data_key\",","              \"!doc\": \"Writes data to output stream. key is an object literal to represent a key sequence; available if the terminal is a TTY.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/readline.html#readline_class_interface\",","          \"!doc\": \"The class that represents a readline interface with an input and output stream.\"","        }","      },","      vm: {","        \"!url\": \"https://nodejs.org/api/vm.html\",","        \"!doc\": \"JavaScript code can be compiled and run immediately or compiled, saved, and run later.\",","        createContext: {","          \"!type\": \"fn(initSandbox?: ?) -> ?\",","          \"!url\": \"https://nodejs.org/api/vm.html#vm_vm_createcontext_initsandbox\",","          \"!doc\": \"vm.createContext creates a new context which is suitable for use as the 2nd argument of a subsequent call to vm.runInContext. A (V8) context comprises a global object together with a set of build-in objects and functions. The optional argument initSandbox will be shallow-copied to seed the initial contents of the global object used by the context.\"","        },","        Script: {","          \"!type\": \"fn()\",","          prototype: {","            runInThisContext: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/vm.html#vm_script_runinthiscontext\",","              \"!doc\": \"Similar to vm.runInThisContext but a method of a precompiled Script object. script.runInThisContext runs the code of script and returns the result. Running code does not have access to local scope, but does have access to the global object (v8: in actual context).\"","            },","            runInNewContext: {","              \"!type\": \"fn(sandbox?: ?)\",","              \"!url\": \"https://nodejs.org/api/vm.html#vm_script_runinnewcontext_sandbox\",","              \"!doc\": \"Similar to vm.runInNewContext a method of a precompiled Script object. script.runInNewContext runs the code of script with sandbox as the global object and returns the result. Running code does not have access to local scope. sandbox is optional.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/vm.html#vm_class_script\",","          \"!doc\": \"A class for running scripts. Returned by vm.createScript.\"","        },","        runInThisContext: {","          \"!type\": \"fn(code: string, filename?: string)\",","          \"!url\": \"https://nodejs.org/api/vm.html#vm_vm_runinthiscontext_code_filename\",","          \"!doc\": \"vm.runInThisContext() compiles code, runs it and returns the result. Running code does not have access to local scope. filename is optional, it's used only in stack traces.\"","        },","        runInNewContext: {","          \"!type\": \"fn(code: string, sandbox?: ?, filename?: string)\",","          \"!url\": \"https://nodejs.org/api/vm.html#vm_vm_runinnewcontext_code_sandbox_filename\",","          \"!doc\": \"vm.runInNewContext compiles code, then runs it in sandbox and returns the result. Running code does not have access to local scope. The object sandbox will be used as the global object for code. sandbox and filename are optional, filename is only used in stack traces.\"","        },","        runInContext: {","          \"!type\": \"fn(code: string, context: ?, filename?: string)\",","          \"!url\": \"https://nodejs.org/api/vm.html#vm_vm_runincontext_code_context_filename\",","          \"!doc\": \"vm.runInContext compiles code, then runs it in context and returns the result. A (V8) context comprises a global object, together with a set of built-in objects and functions. Running code does not have access to local scope and the global object held within context will be used as the global object for code. filename is optional, it's used only in stack traces.\"","        },","        createScript: {","          \"!type\": \"fn(code: string, filename?: string) -> +vm.Script\",","          \"!url\": \"https://nodejs.org/api/vm.html#vm_vm_createscript_code_filename\",","          \"!doc\": \"createScript compiles code but does not run it. Instead, it returns a vm.Script object representing this compiled code. This script can be run later many times using methods below. The returned script is not bound to any global object. It is bound before each run, just for that run. filename is optional, it's only used in stack traces.\"","        }","      },","      child_process: {","        \"!url\": \"https://nodejs.org/api/child_process.html\",","        \"!doc\": \"Node provides a tri-directional popen(3) facility through the child_process module.\",","        ChildProcess: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"events.EventEmitter.prototype\",","            stdin: {","              \"!type\": \"+stream.Writable\",","              \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_stdin\",","              \"!doc\": \"A Writable Stream that represents the child process's stdin. Closing this stream via end() often causes the child process to terminate.\"","            },","            stdout: {","              \"!type\": \"+stream.Readable\",","              \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_stdout\",","              \"!doc\": \"A Readable Stream that represents the child process's stdout.\"","            },","            stderr: {","              \"!type\": \"+stream.Readable\",","              \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_stderr\",","              \"!doc\": \"A Readable Stream that represents the child process's stderr.\"","            },","            pid: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_pid\",","              \"!doc\": \"The PID of the child process.\"","            },","            kill: {","              \"!type\": \"fn(signal?: string)\",","              \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_kill_signal\",","              \"!doc\": \"Send a signal to the child process. If no argument is given, the process will be sent 'SIGTERM'.\"","            },","            send: {","              \"!type\": \"fn(message: ?, sendHandle?: ?)\",","              \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_send_message_sendhandle\",","              \"!doc\": \"When using child_process.fork() you can write to the child using child.send(message, [sendHandle]) and messages are received by a 'message' event on the child.\"","            },","            disconnect: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_disconnect\",","              \"!doc\": \"To close the IPC connection between parent and child use the child.disconnect() method. This allows the child to exit gracefully since there is no IPC channel keeping it alive. When calling this method the disconnect event will be emitted in both parent and child, and the connected flag will be set to false. Please note that you can also call process.disconnect() in the child process.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/child_process.html#child_process_class_childprocess\",","          \"!doc\": \"ChildProcess is an EventEmitter.\"","        },","        spawn: {","          \"!type\": \"fn(command: string, args?: [string], options?: ?) -> +child_process.ChildProcess\",","          \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options\",","          \"!doc\": \"Launches a new process with the given command, with command line arguments in args. If omitted, args defaults to an empty Array.\"","        },","        exec: {","          \"!type\": \"fn(command: string, callback: fn(error: ?, stdout: +Buffer, stderr: +Buffer)) -> +child_process.ChildProcess\",","          \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\",","          \"!doc\": \"Runs a command in a shell and buffers the output.\"","        },","        execFile: {","          \"!type\": \"fn(file: string, args: [string], options: ?, callback: fn(error: ?, stdout: +Buffer, stderr: +Buffer)) -> +child_process.ChildProcess\",","          \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_process_execfile_file_args_options_callback\",","          \"!doc\": \"This is similar to child_process.exec() except it does not execute a subshell but rather the specified file directly. This makes it slightly leaner than child_process.exec. It has the same options.\"","        },","        fork: {","          \"!type\": \"fn(modulePath: string, args?: [string], options?: ?) -> +child_process.ChildProcess\",","          \"!url\": \"https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options\",","          \"!doc\": \"This is a special case of the spawn() functionality for spawning Node processes. In addition to having all the methods in a normal ChildProcess instance, the returned object has a communication channel built-in.\"","        }","      },","      url: {","        \"!url\": \"https://nodejs.org/api/url.html\",","        \"!doc\": \"This module has utilities for URL resolution and parsing. \",","        parse: {","          \"!type\": \"fn(urlStr: string, parseQueryString?: bool, slashesDenoteHost?: bool) -> url.type\",","          \"!url\": \"https://nodejs.org/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost\",","          \"!doc\": \"Take a URL string, and return an object.\"","        },","        format: {","          \"!type\": \"fn(url: url.type) -> string\",","          \"!url\": \"https://nodejs.org/api/url.html#url_url_format_urlobj\",","          \"!doc\": \"Take a parsed URL object, and return a formatted URL string.\"","        },","        resolve: {","          \"!type\": \"fn(from: string, to: string) -> string\",","          \"!url\": \"https://nodejs.org/api/url.html#url_url_resolve_from_to\",","          \"!doc\": \"Take a base URL, and a href URL, and resolve them as a browser would for an anchor tag.\"","        }","      },","      dns: {","        \"!url\": \"https://nodejs.org/api/dns.html\",","        \"!doc\": \"This module contains functions that belong to two different categories:\\n1) Functions that use the underlying operating system facilities to perform name resolution, and that do not necessarily do any network communication.\\n2) Functions that connect to an actual DNS server to perform name resolution, and that always use the network to perform DNS queries.\",","        lookup: {","          \"!type\": \"fn(domain: string, callback: fn(err: +Error, address: string, family: number)) -> string\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_lookup_domain_family_callback\",","          \"!doc\": \"Resolves a domain (e.g. 'google.com') into the first found A (IPv4) or AAAA (IPv6) record. The family can be the integer 4 or 6. Defaults to null that indicates both Ip v4 and v6 address family.\"","        },","        resolve: {","          \"!type\": \"fn(domain: string, callback: fn(err: +Error, addresses: [string])) -> [string]\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_resolve_domain_rrtype_callback\",","          \"!doc\": \"Resolves a domain (e.g. 'google.com') into an array of the record types specified by rrtype. Valid rrtypes are 'A' (IPV4 addresses, default), 'AAAA' (IPV6 addresses), 'MX' (mail exchange records), 'TXT' (text records), 'SRV' (SRV records), 'PTR' (used for reverse IP lookups), 'NS' (name server records) and 'CNAME' (canonical name records).\"","        },","        resolve4: {","          \"!type\": \"fn(domain: string, callback: fn(err: +Error, addresses: [string])) -> [string]\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_resolve4_domain_callback\",","          \"!doc\": \"The same as dns.resolve(), but only for IPv4 queries (A records). addresses is an array of IPv4 addresses (e.g. ['74.125.79.104', '74.125.79.105', '74.125.79.106']).\"","        },","        resolve6: {","          \"!type\": \"fn(domain: string, callback: fn(err: +Error, addresses: [string])) -> [string]\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_resolve6_domain_callback\",","          \"!doc\": \"The same as dns.resolve4() except for IPv6 queries (an AAAA query).\"","        },","        resolveMx: {","          \"!type\": \"fn(domain: string, callback: fn(err: +Error, addresses: [string])) -> [string]\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_resolvemx_domain_callback\",","          \"!doc\": \"The same as dns.resolve(), but only for mail exchange queries (MX records).\"","        },","        resolveTxt: {","          \"!type\": \"fn(domain: string, callback: fn(err: +Error, addresses: [string])) -> [string]\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_resolvetxt_domain_callback\",","          \"!doc\": \"The same as dns.resolve(), but only for text queries (TXT records). addresses is an array of the text records available for domain (e.g., ['v=spf1 ip4:0.0.0.0 ~all']).\"","        },","        resolveSrv: {","          \"!type\": \"fn(domain: string, callback: fn(err: +Error, addresses: [string])) -> [string]\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_resolvesrv_domain_callback\",","          \"!doc\": \"The same as dns.resolve(), but only for service records (SRV records). addresses is an array of the SRV records available for domain. Properties of SRV records are priority, weight, port, and name (e.g., [{'priority': 10, {'weight': 5, 'port': 21223, 'name': 'service.example.com'}, ...]).\"","        },","        resolveNs: {","          \"!type\": \"fn(domain: string, callback: fn(err: +Error, addresses: [string])) -> [string]\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_resolvens_domain_callback\",","          \"!doc\": \"The same as dns.resolve(), but only for name server records (NS records). addresses is an array of the name server records available for domain (e.g., ['ns1.example.com', 'ns2.example.com']).\"","        },","        resolveCname: {","          \"!type\": \"fn(domain: string, callback: fn(err: +Error, addresses: [string])) -> [string]\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_resolvecname_domain_callback\",","          \"!doc\": \"The same as dns.resolve(), but only for canonical name records (CNAME records). addresses is an array of the canonical name records available for domain (e.g., ['bar.example.com']).\"","        },","        reverse: {","          \"!type\": \"fn(ip: string, callback: fn(err: +Error, domains: [string])) -> [string]\",","          \"!url\": \"https://nodejs.org/api/dns.html#dns_dns_reverse_ip_callback\",","          \"!doc\": \"Reverse resolves an ip address to an array of domain names.\"","        }","      },","      net: {","        \"!url\": \"https://nodejs.org/api/net.html\",","        \"!doc\": \"The net module provides you with an asynchronous network wrapper. It contains methods for creating both servers and clients (called streams).\",","        createServer: {","          \"!type\": \"fn(options?: ?, connectionListener?: fn(socket: +net.Socket)) -> +net.Server\",","          \"!url\": \"https://nodejs.org/api/net.html#net_net_createserver_options_connectionlistener\",","          \"!doc\": \"Creates a new TCP server. The connectionListener argument is automatically set as a listener for the 'connection' event.\"","        },","        Server: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"net.Socket.prototype\",","            listen: {","              \"!type\": \"fn(port: number, hostname?: string, backlog?: number, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/net.html#net_server_listen_port_host_backlog_callback\",","              \"!doc\": \"Begin accepting connections on the specified port and host. If the host is omitted, the server will accept connections directed to any IPv4 address (INADDR_ANY). A port value of zero will assign a random port.\"","            },","            close: {","              \"!type\": \"fn(callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/net.html#net_server_close_callback\",","              \"!doc\": \"Stops the server from accepting new connections and keeps existing connections. This function is asynchronous, the server is finally closed when all connections are ended and the server emits a 'close' event. Optionally, you can pass a callback to listen for the 'close' event.\"","            },","            maxConnections: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/net.html#net_server_maxconnections\",","              \"!doc\": \"Set this property to reject connections when the server's connection count gets high.\"","            },","            getConnections: {","              \"!type\": \"fn(callback: fn(err: +Error, count: number))\",","              \"!url\": \"https://nodejs.org/api/net.html#net_server_getconnections_callback\",","              \"!doc\": \"Asynchronously get the number of concurrent connections on the server. Works when sockets were sent to forks.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/net.html#net_class_net_server\",","          \"!doc\": \"This class is used to create a TCP or UNIX server. A server is a net.Socket that can listen for new incoming connections.\"","        },","        Socket: {","          \"!type\": \"fn(options: ?)\",","          prototype: {","            \"!proto\": \"events.EventEmitter.prototype\",","            connect: {","              \"!type\": \"fn(port: number, host?: string, connectionListener?: fn())\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_connect_port_host_connectlistener\",","              \"!doc\": \"Opens the connection for a given socket. If port and host are given, then the socket will be opened as a TCP socket, if host is omitted, localhost will be assumed. If a path is given, the socket will be opened as a unix socket to that path.\"","            },","            bufferSize: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_buffersize\",","              \"!doc\": \"net.Socket has the property that socket.write() always works. This is to help users get up and running quickly. The computer cannot always keep up with the amount of data that is written to a socket - the network connection simply might be too slow. Node will internally queue up the data written to a socket and send it out over the wire when it is possible. (Internally it is polling on the socket's file descriptor for being writable).\"","            },","            setEncoding: {","              \"!type\": \"fn(encoding?: string)\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_setencoding_encoding\",","              \"!doc\": \"Set the encoding for the socket as a Readable Stream.\"","            },","            write: {","              \"!type\": \"fn(data: +Buffer, encoding?: string, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_write_data_encoding_callback\",","              \"!doc\": \"Sends data on the socket. The second parameter specifies the encoding in the case of a string--it defaults to UTF8 encoding.\"","            },","            end: {","              \"!type\": \"fn(data?: +Buffer, encoding?: string)\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_end_data_encoding\",","              \"!doc\": \"Half-closes the socket. i.e., it sends a FIN packet. It is possible the server will still send some data.\"","            },","            destroy: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_destroy\",","              \"!doc\": \"Ensures that no more I/O activity happens on this socket. Only necessary in case of errors (parse error or so).\"","            },","            pause: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_pause\",","              \"!doc\": \"Pauses the reading of data. That is, 'data' events will not be emitted. Useful to throttle back an upload.\"","            },","            resume: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_resume\",","              \"!doc\": \"Resumes reading after a call to pause().\"","            },","            setTimeout: {","              \"!type\": \"fn(timeout: number, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback\",","              \"!doc\": \"Sets the socket to timeout after timeout milliseconds of inactivity on the socket. By default net.Socket do not have a timeout.\"","            },","            setKeepAlive: {","              \"!type\": \"fn(enable?: bool, initialDelay?: number)\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_setkeepalive_enable_initialdelay\",","              \"!doc\": \"Enable/disable keep-alive functionality, and optionally set the initial delay before the first keepalive probe is sent on an idle socket. enable defaults to false.\"","            },","            address: {","              \"!type\": \"fn() -> net.address\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_address\",","              \"!doc\": \"Returns the bound address, the address family name and port of the socket as reported by the operating system. Returns an object with three properties, e.g. { port: 12346, family: 'IPv4', address: '127.0.0.1' }\"","            },","            unref: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_unref\",","              \"!doc\": \"Calling unref on a socket will allow the program to exit if this is the only active socket in the event system. If the socket is already unrefd calling unref again will have no effect.\"","            },","            ref: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_ref\",","              \"!doc\": \"Opposite of unref, calling ref on a previously unrefd socket will not let the program exit if it's the only socket left (the default behavior). If the socket is refd calling ref again will have no effect.\"","            },","            remoteAddress: {","              \"!type\": \"string\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_remoteaddress\",","              \"!doc\": \"The string representation of the remote IP address. For example, '74.125.127.100' or '2001:4860:a005::68'.\"","            },","            remotePort: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_remoteport\",","              \"!doc\": \"The numeric representation of the remote port. For example, 80 or 21.\"","            },","            localPort: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_localport\",","              \"!doc\": \"The numeric representation of the local port. For example, 80 or 21.\"","            },","            bytesRead: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_bytesread\",","              \"!doc\": \"The amount of received bytes.\"","            },","            bytesWritten: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_byteswritten\",","              \"!doc\": \"The amount of bytes sent.\"","            },","            setNoDelay: {","              \"!type\": \"fn(noDelay?: fn())\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_setnodelay_nodelay\",","              \"!doc\": \"Disables the Nagle algorithm. By default TCP connections use the Nagle algorithm, they buffer data before sending it off. Setting true for noDelay will immediately fire off data each time socket.write() is called. noDelay defaults to true.\"","            },","            localAddress: {","              \"!type\": \"string\",","              \"!url\": \"https://nodejs.org/api/net.html#net_socket_localaddress\",","              \"!doc\": \"The string representation of the local IP address the remote client is connecting on. For example, if you are listening on '0.0.0.0' and the client connects on '192.168.1.1', the value would be '192.168.1.1'.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/net.html#net_class_net_socket\",","          \"!doc\": \"This object is an abstraction of a TCP or UNIX socket. net.Socket instances implement a duplex Stream interface. They can be created by the user and used as a client (with connect()) or they can be created by Node and passed to the user through the 'connection' event of a server.\"","        },","        connect: {","          \"!type\": \"fn(options: ?, connectionListener?: fn()) -> +net.Socket\",","          \"!url\": \"https://nodejs.org/api/net.html#net_net_connect_options_connectionlistener\",","          \"!doc\": \"Constructs a new socket object and opens the socket to the given location. When the socket is established, the 'connect' event will be emitted.\"","        },","        createConnection: {","          \"!type\": \"fn(options: ?, connectionListener?: fn()) -> +net.Socket\",","          \"!url\": \"https://nodejs.org/api/net.html#net_net_createconnection_options_connectionlistener\",","          \"!doc\": \"Constructs a new socket object and opens the socket to the given location. When the socket is established, the 'connect' event will be emitted.\"","        },","        isIP: {","          \"!type\": \"fn(input: string) -> number\",","          \"!url\": \"https://nodejs.org/api/net.html#net_net_isip_input\",","          \"!doc\": \"Tests if input is an IP address. Returns 0 for invalid strings, returns 4 for IP version 4 addresses, and returns 6 for IP version 6 addresses.\"","        },","        isIPv4: {","          \"!type\": \"fn(input: string) -> bool\",","          \"!url\": \"https://nodejs.org/api/net.html#net_net_isipv4_input\",","          \"!doc\": \"Returns true if input is a version 4 IP address, otherwise returns false.\"","        },","        isIPv6: {","          \"!type\": \"fn(input: string) -> bool\",","          \"!url\": \"https://nodejs.org/api/net.html#net_net_isipv6_input\",","          \"!doc\": \"Returns true if input is a version 6 IP address, otherwise returns false.\"","        }","      },","      dgram: {","        \"!url\": \"https://nodejs.org/api/dgram.html\",","        \"!doc\": \"UDP / Datagram Sockets\",","        createSocket: {","          \"!type\": \"fn(type: string, callback?: fn()) -> +dgram.Socket\",","          \"!url\": \"https://nodejs.org/api/dgram.html#dgram_dgram_createsocket_type_callback\",","          \"!doc\": \"Creates a datagram Socket of the specified types. Valid types are udp4 and udp6.\"","        },","        Socket: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"events.EventEmitter.prototype\",","            send: {","              \"!type\": \"fn(buf: +Buffer, offset: number, length: number, port: number, address: string, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_send_buf_offset_length_port_address_callback\",","              \"!doc\": \"For UDP sockets, the destination port and IP address must be specified. A string may be supplied for the address parameter, and it will be resolved with DNS. An optional callback may be specified to detect any DNS errors and when buf may be re-used. Note that DNS lookups will delay the time that a send takes place, at least until the next tick. The only way to know for sure that a send has taken place is to use the callback.\"","            },","            bind: {","              \"!type\": \"fn(port: number, address?: string)\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_bind_port_address_callback\",","              \"!doc\": \"For UDP sockets, listen for datagrams on a named port and optional address. If address is not specified, the OS will try to listen on all addresses.\"","            },","            close: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_close\",","              \"!doc\": \"Close the underlying socket and stop listening for data on it.\"","            },","            address: {","              address: \"string\",","              family: \"string\",","              port: \"number\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_address\",","              \"!doc\": \"Returns an object containing the address information for a socket. For UDP sockets, this object will contain address , family and port.\"","            },","            setBroadcast: {","              \"!type\": \"fn(flag: bool)\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_setbroadcast_flag\",","              \"!doc\": \"Sets or clears the SO_BROADCAST socket option. When this option is set, UDP packets may be sent to a local interface's broadcast address.\"","            },","            setTTL: {","              \"!type\": \"fn(ttl: number)\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_setttl_ttl\",","              \"!doc\": \"Sets the IP_TTL socket option. TTL stands for \\\"Time to Live,\\\" but in this context it specifies the number of IP hops that a packet is allowed to go through. Each router or gateway that forwards a packet decrements the TTL. If the TTL is decremented to 0 by a router, it will not be forwarded. Changing TTL values is typically done for network probes or when multicasting.\"","            },","            setMulticastTTL: {","              \"!type\": \"fn(ttl: number)\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_setmulticastttl_ttl\",","              \"!doc\": \"Sets the IP_MULTICAST_TTL socket option. TTL stands for \\\"Time to Live,\\\" but in this context it specifies the number of IP hops that a packet is allowed to go through, specifically for multicast traffic. Each router or gateway that forwards a packet decrements the TTL. If the TTL is decremented to 0 by a router, it will not be forwarded.\"","            },","            setMulticastLoopback: {","              \"!type\": \"fn(flag: bool)\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_setmulticastloopback_flag\",","              \"!doc\": \"Sets or clears the IP_MULTICAST_LOOP socket option. When this option is set, multicast packets will also be received on the local interface.\"","            },","            addMembership: {","              \"!type\": \"fn(multicastAddress: string, multicastInterface?: string)\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_addmembership_multicastaddress_multicastinterface\",","              \"!doc\": \"Tells the kernel to join a multicast group with IP_ADD_MEMBERSHIP socket option.\"","            },","            dropMembership: {","              \"!type\": \"fn(multicastAddress: string, multicastInterface?: string)\",","              \"!url\": \"https://nodejs.org/api/dgram.html#dgram_socket_dropmembership_multicastaddress_multicastinterface\",","              \"!doc\": \"Opposite of addMembership - tells the kernel to leave a multicast group with IP_DROP_MEMBERSHIP socket option. This is automatically called by the kernel when the socket is closed or process terminates, so most apps will never need to call this.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/dgram.html#dgram_class_dgram_socket\",","          \"!doc\": \"The dgram Socket class encapsulates the datagram functionality. It should be created via dgram.createSocket(type, [callback]).\"","        }","      },","      fs: {","        \"!url\": \"https://nodejs.org/api/fs.html\",","        \"!doc\": \"File I/O is provided by simple wrappers around standard POSIX functions. To use this module do require('fs'). All the methods have asynchronous and synchronous forms.\",","        access: {","          \"!type\": \"fn(path: string|+Buffer, mode?: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_access_path_mode_callback\",","          \"!doc\": \"Tests a user's permissions for the file or directory specified by path. The mode argument is an optional integer that specifies the accessibility checks to be performed. The following constants define the possible values of mode. It is possible to create a mask consisting of the bitwise OR of two or more values.\"","        },","        accessSync: {","          \"!type\": \"fn(path: string|+Buffer, mode?: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_accesssync_path_mode\",","          \"!doc\": \"Synchronous version of fs.access(). This throws if any accessibility checks fail, and does nothing otherwise.\"","        },","        appendFile: {","          \"!type\": \"fn(file: string|+Buffer|number, data: string|+Buffer, options?: ?, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_appendfile_file_data_options_callback\",","          \"!doc\": \"Asynchronously append data to a file, creating the file if it does not yet exist. data can be a string or a buffer.\"","        },","        appendFileSync: {","          \"!type\": \"fn(file: string|+Buffer|number, data: string|+Buffer, options?: ?)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_appendfilesync_file_data_options\",","          \"!doc\": \"The synchronous version of fs.appendFile(). Returns undefined.\"","        },","        chmod: {","          \"!type\": \"fn(path: string|+Buffer, mode: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_chmod_path_mode_callback\",","          \"!doc\": \"Asynchronous chmod(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        chmodSync: {","          \"!type\": \"fn(path: string|+Buffer, mode: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_chmodsync_path_mode\",","          \"!doc\": \"Synchronous chmod(2). Returns undefined.\"","        },","        chown: {","          \"!type\": \"fn(path: string|+Buffer, uid: number, gid: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_chown_path_uid_gid_callback\",","          \"!doc\": \"Asynchronous chown(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        chownSync: {","          \"!type\": \"fn(path: string|+Buffer, uid: number, gid: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_chownsync_path_uid_gid\",","          \"!doc\": \"Synchronous chown(2). Returns undefined.\"","        },","        close: {","          \"!type\": \"fn(fd: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_close_fd_callback\",","          \"!doc\": \"Asynchronous close(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        closeSync: {","          \"!type\": \"fn(fd: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_closesync_fd\",","          \"!doc\": \"Synchronous close(2). Returns undefined.\"","        },","        createReadStream: {","          \"!type\": \"fn(path: string|+Buffer, options?: ?) -> +fs.ReadStream\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_createreadstream_path_options\",","          \"!doc\": \"Returns a new ReadStream object. (See Readable Stream).\"","        },","        createWriteStream: {","          \"!type\": \"fn(path: string|+Buffer, options?: ?) -> +fs.WriteStream\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_createwritestream_path_options\",","          \"!doc\": \"Returns a new WriteStream object. (See Writable Stream).\"","        },","        exists: {","          \"!type\": \"fn(path: string|+Buffer, callback: fn(exists: bool))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_exists_path_callback\",","          \"!doc\": \"Test whether or not the given path exists by checking with the file system. Then call the callback argument with either true or false. Example:\"","        },","        existsSync: {","          \"!type\": \"fn(path: string|+Buffer) -> bool\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_existssync_path\",","          \"!doc\": \"Stability: 0 - Deprecated: Use fs.statSync() or fs.accessSync() instead.\"","        },","        fchmod: {","          \"!type\": \"fn(fd: number, mode: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fchmod_fd_mode_callback\",","          \"!doc\": \"Asynchronous fchmod(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        fchmodSync: {","          \"!type\": \"fn(fd: number, mode: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fchmodsync_fd_mode\",","          \"!doc\": \"Synchronous fchmod(2). Returns undefined.\"","        },","        fchown: {","          \"!type\": \"fn(fd: number, uid: number, gid: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fchown_fd_uid_gid_callback\",","          \"!doc\": \"Asynchronous fchown(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        fchownSync: {","          \"!type\": \"fn(fd: number, uid: number, gid: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fchownsync_fd_uid_gid\",","          \"!doc\": \"Synchronous fchown(2). Returns undefined.\"","        },","        fdatasync: {","          \"!type\": \"fn(fd: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fdatasync_fd_callback\",","          \"!doc\": \"Asynchronous fdatasync(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        fdatasyncSync: {","          \"!type\": \"fn(fd: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fdatasyncsync_fd\",","          \"!doc\": \"Synchronous fdatasync(2). Returns undefined.\"","        },","        fstat: {","          \"!type\": \"fn(fd: number, callback: fn(err: +Error, stats: +fs.Stats))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fstat_fd_callback\",","          \"!doc\": \"Asynchronous fstat(2). The callback gets two arguments (err, stats) where stats is a fs.Stats object. fstat() is identical to stat(), except that the file to be stat-ed is specified by the file descriptor fd.\"","        },","        fstatSync: {","          \"!type\": \"fn(fd: number) -> +fs.Stats\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fstatsync_fd\",","          \"!doc\": \"Synchronous fstat(2). Returns an instance of fs.Stats.\"","        },","        fsync: {","          \"!type\": \"fn(fd: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fsync_fd_callback\",","          \"!doc\": \"Asynchronous fsync(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        fsyncSync: {","          \"!type\": \"fn(fd: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_fsyncsync_fd\",","          \"!doc\": \"Synchronous fsync(2). Returns undefined.\"","        },","        ftruncate: {","          \"!type\": \"fn(fd: number, len: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_ftruncate_fd_len_callback\",","          \"!doc\": \"Asynchronous ftruncate(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        ftruncateSync: {","          \"!type\": \"fn(fd: number, len: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_ftruncatesync_fd_len\",","          \"!doc\": \"Synchronous ftruncate(2). Returns undefined.\"","        },","        futimes: {","          \"!type\": \"fn(fd: number, atime: number, mtime: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_futimes_fd_atime_mtime_callback\",","          \"!doc\": \"Change the file timestamps of a file referenced by the supplied file descriptor.\"","        },","        futimesSync: {","          \"!type\": \"fn(fd: number, atime: number, mtime: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_futimessync_fd_atime_mtime\",","          \"!doc\": \"Synchronous version of fs.futimes(). Returns undefined.\"","        },","        lchmod: {","          \"!type\": \"fn(path: string|+Buffer, mode: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_lchmod_path_mode_callback\",","          \"!doc\": \"Asynchronous lchmod(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        lchmodSync: {","          \"!type\": \"fn(path: string|+Buffer, mode: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_lchmodsync_path_mode\",","          \"!doc\": \"Synchronous lchmod(2). Returns undefined.\"","        },","        lchown: {","          \"!type\": \"fn(path: string|+Buffer, uid: number, gid: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_lchown_path_uid_gid_callback\",","          \"!doc\": \"Asynchronous lchown(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        lchownSync: {","          \"!type\": \"fn(path: string|+Buffer, uid: number, gid: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_lchownsync_path_uid_gid\",","          \"!doc\": \"Synchronous lchown(2). Returns undefined.\"","        },","        link: {","          \"!type\": \"fn(srcpath: string|+Buffer, dstpath: string|+Buffer, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_link_srcpath_dstpath_callback\",","          \"!doc\": \"Asynchronous link(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        linkSync: {","          \"!type\": \"fn(srcpath: string|+Buffer, dstpath: string|+Buffer)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_linksync_srcpath_dstpath\",","          \"!doc\": \"Synchronous link(2). Returns undefined.\"","        },","        lstat: {","          \"!type\": \"fn(path: string|+Buffer, callback: fn(err: +Error, stats: +fs.Stats))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_lstat_path_callback\",","          \"!doc\": \"Asynchronous lstat(2). The callback gets two arguments (err, stats) where stats is a fs.Stats object. lstat() is identical to stat(), except that if path is a symbolic link, then the link itself is stat-ed, not the file that it refers to.\"","        },","        lstatSync: {","          \"!type\": \"fn(path: string|+Buffer) -> +fs.Stats\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_lstatsync_path\",","          \"!doc\": \"Synchronous lstat(2). Returns an instance of fs.Stats.\"","        },","        mkdir: {","          \"!type\": \"fn(path: string|+Buffer, mode?: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_mkdir_path_mode_callback\",","          \"!doc\": \"Asynchronous mkdir(2). No arguments other than a possible exception are given to the completion callback. mode defaults to 0o777.\"","        },","        mkdirSync: {","          \"!type\": \"fn(path: string|+Buffer, mode?: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_mkdirsync_path_mode\",","          \"!doc\": \"Synchronous mkdir(2). Returns undefined.\"","        },","        mkdtemp: {","          \"!type\": \"fn(prefix: string, options?: ?, callback: fn(err: +Error, folder: string))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_mkdtemp_prefix_options_callback\",","          \"!doc\": \"Creates a unique temporary directory.\"","        },","        mkdtempSync: {","          \"!type\": \"fn(prefix: string, options?: ?) -> string\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_mkdtempsync_prefix_options\",","          \"!doc\": \"The synchronous version of fs.mkdtemp(). Returns the created folder path.\"","        },","        open: {","          \"!type\": \"fn(path: string|+Buffer, flags: string|number, mode?: number, callback: fn(err: +Error, fd: number))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_open_path_flags_mode_callback\",","          \"!doc\": \"Asynchronous file open. See open(2). flags can be:\"","        },","        openSync: {","          \"!type\": \"fn(path: string|+Buffer, flags: string|number, mode?: number) -> number\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_opensync_path_flags_mode\",","          \"!doc\": \"Synchronous version of fs.open(). Returns an integer representing the file descriptor.\"","        },","        read: {","          \"!type\": \"fn(fd: number, buffer: string|+Buffer, offset: number, length: number, position: number, callback: fn(err: +Error, bytesRead: number, buffer: +Buffer))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_read_fd_buffer_offset_length_position_callback\",","          \"!doc\": \"Read data from the file specified by fd.\"","        },","        readdir: {","          \"!type\": \"fn(path: string|+Buffer, options?: ?, callback: fn(err: +Error, files: [string|+Buffer]))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_readdir_path_options_callback\",","          \"!doc\": \"Asynchronous readdir(3). Reads the contents of a directory. The callback gets two arguments (err, files) where files is an array of the names of the files in the directory excluding '.' and '..'.\"","        },","        readdirSync: {","          \"!type\": \"fn(path: string|+Buffer, options?: ?) -> [string|+Buffer]\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_readdirsync_path_options\",","          \"!doc\": \"Synchronous readdir(3). Returns an array of filenames excluding '.' and '..'.\"","        },","        readFile: {","          \"!type\": \"fn(file: string|+Buffer|number, options?: ?, callback: fn(err: +Error, data: string|+Buffer))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_readfile_file_options_callback\",","          \"!doc\": \"Asynchronously reads the entire contents of a file. Example:\"","        },","        readFileSync: {","          \"!type\": \"fn(file: string|+Buffer|number, options?: ?) -> string|+Buffer\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_readfilesync_file_options\",","          \"!doc\": \"Synchronous version of fs.readFile. Returns the contents of the file.\"","        },","        readlink: {","          \"!type\": \"fn(path: string|+Buffer, options?: ?, callback: fn(err: +Error, linkString: string|+Buffer))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_readlink_path_options_callback\",","          \"!doc\": \"Asynchronous readlink(2). The callback gets two arguments (err, linkString).\"","        },","        readlinkSync: {","          \"!type\": \"fn(path: string|+Buffer, options?: ?) -> string|+Buffer\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_readlinksync_path_options\",","          \"!doc\": \"Synchronous readlink(2). Returns the symbolic link's string value.\"","        },","        readSync: {","          \"!type\": \"fn(fd: number, buffer: string|+Buffer, offset: number, length: number, position: number) -> number\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_readsync_fd_buffer_offset_length_position\",","          \"!doc\": \"Synchronous version of fs.read(). Returns the number of bytesRead.\"","        },","        realpath: {","          \"!type\": \"fn(path: string|+Buffer, options?: ?, callback: fn(err: +Error, resolvedPath: string|+Buffer))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_realpath_path_options_callback\",","          \"!doc\": \"Asynchronous realpath(3). The callback gets two arguments (err, resolvedPath). May use process.cwd to resolve relative paths.\"","        },","        realpathSync: {","          \"!type\": \"fn(path: string|+Buffer, options?: ?) -> string|+Buffer\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_realpathsync_path_options\",","          \"!doc\": \"Synchronous realpath(3). Returns the resolved path.\"","        },","        rename: {","          \"!type\": \"fn(oldPath: string|+Buffer, newPath: string|+Buffer, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_rename_oldpath_newpath_callback\",","          \"!doc\": \"Asynchronous rename(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        renameSync: {","          \"!type\": \"fn(oldPath: string|+Buffer, newPath: string|+Buffer)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_renamesync_oldpath_newpath\",","          \"!doc\": \"Synchronous rename(2). Returns undefined.\"","        },","        rmdir: {","          \"!type\": \"fn(path: string|+Buffer, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_rmdir_path_callback\",","          \"!doc\": \"Asynchronous rmdir(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        rmdirSync: {","          \"!type\": \"fn(path: string|+Buffer)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_rmdirsync_path\",","          \"!doc\": \"Synchronous rmdir(2). Returns undefined.\"","        },","        stat: {","          \"!type\": \"fn(path: string|+Buffer, callback: fn(err: +Error, stats: +fs.Stats))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_stat_path_callback\",","          \"!doc\": \"Asynchronous stat(2). The callback gets two arguments (err, stats) where stats is a fs.Stats object. See the fs.Stats section for more information.\"","        },","        statSync: {","          \"!type\": \"fn(path: string|+Buffer) -> +fs.Stats\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_statsync_path\",","          \"!doc\": \"Synchronous stat(2). Returns an instance of fs.Stats.\"","        },","        symlink: {","          \"!type\": \"fn(target: string|+Buffer, path: string|+Buffer, type?: string, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_symlink_target_path_type_callback\",","          \"!doc\": \"Asynchronous symlink(2). No arguments other than a possible exception are given to the completion callback. The type argument can be set to 'dir', 'file', or 'junction' (default is 'file') and is only available on Windows (ignored on other platforms). Note that Windows junction points require the destination path to be absolute. When using 'junction', the target argument will automatically be normalized to absolute path.\"","        },","        symlinkSync: {","          \"!type\": \"fn(target: string|+Buffer, path: string|+Buffer, type?: string)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_symlinksync_target_path_type\",","          \"!doc\": \"Synchronous symlink(2). Returns undefined.\"","        },","        truncate: {","          \"!type\": \"fn(path: string|+Buffer, len: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_truncate_path_len_callback\",","          \"!doc\": \"Asynchronous truncate(2). No arguments other than a possible exception are given to the completion callback. A file descriptor can also be passed as the first argument. In this case, fs.ftruncate() is called.\"","        },","        truncateSync: {","          \"!type\": \"fn(path: string|+Buffer, len: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_truncatesync_path_len\",","          \"!doc\": \"Synchronous truncate(2). Returns undefined. A file descriptor can also be passed as the first argument. In this case, fs.ftruncateSync() is called.\"","        },","        unlink: {","          \"!type\": \"fn(path: string|+Buffer, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_unlink_path_callback\",","          \"!doc\": \"Asynchronous unlink(2). No arguments other than a possible exception are given to the completion callback.\"","        },","        unlinkSync: {","          \"!type\": \"fn(path: string|+Buffer)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_unlinksync_path\",","          \"!doc\": \"Synchronous unlink(2). Returns undefined.\"","        },","        unwatchFile: {","          \"!type\": \"fn(filename: string|+Buffer, listener?: fn(curr: +fs.Stats, prev: +fs.Stats))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_unwatchfile_filename_listener\",","          \"!doc\": \"Stop watching for changes on filename. If listener is specified, only that particular listener is removed. Otherwise, all listeners are removed and you have effectively stopped watching filename.\"","        },","        utimes: {","          \"!type\": \"fn(path: string|+Buffer, atime: number, mtime: number, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_utimes_path_atime_mtime_callback\",","          \"!doc\": \"Change file timestamps of the file referenced by the supplied path.\"","        },","        utimesSync: {","          \"!type\": \"fn(path: string|+Buffer, atime: number, mtime: number)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_utimessync_path_atime_mtime\",","          \"!doc\": \"Synchronous version of fs.utimes(). Returns undefined.\"","        },","        watch: {","          \"!type\": \"fn(filename: string|+Buffer, options?: ?, listener?: fn(eventType: string, filename?: string)) -> +fs.FSWatcher\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_watch_filename_options_listener\",","          \"!doc\": \"Watch for changes on filename, where filename is either a file or a directory. The returned object is a fs.FSWatcher.\"","        },","        watchFile: {","          \"!type\": \"fn(filename: string|+Buffer, options?: ?, listener: fn(curr: +fs.Stats, prev: +fs.Stats))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_watchfile_filename_options_listener\",","          \"!doc\": \"Watch for changes on filename. The callback listener will be called each time the file is accessed.\"","        },","        write: {","          \"!type\": \"fn(fd: number, data: string|+Buffer, position?: number, encoding?: string, callback: fn(err: +Error, bytesRead: number, buffer: +Buffer))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_write_fd_data_position_encoding_callback\",","          \"!doc\": \"Write data to the file specified by fd. If data is not a Buffer instance then the value will be coerced to a string.\"","        },","        writeFile: {","          \"!type\": \"fn(file: string|+Buffer|number, data: string|+Buffer, options?: ?, callback: fn(err: +Error))\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback\",","          \"!doc\": \"Asynchronously writes data to a file, replacing the file if it already exists. data can be a string or a buffer.\"","        },","        writeFileSync: {","          \"!type\": \"fn(file: string|+Buffer|number, data: string|+Buffer, options?: ?)\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_writefilesync_file_data_options\",","          \"!doc\": \"The synchronous version of fs.writeFile(). Returns undefined.\"","        },","        writeSync: {","          \"!type\": \"fn(fd: number, data: string|+Buffer, position?: number, encoding?: string) -> number\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_writesync_fd_data_position_encoding\",","          \"!doc\": \"Synchronous versions of fs.write(). Returns the number of bytes written.\"","        },","        FSWatcher: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_class_fs_fswatcher\",","          \"!doc\": \"Objects returned from fs.watch() are of this type.\",","          prototype: {","            close: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/fs.html#fs_watcher_close\",","              \"!doc\": \"Stop watching for changes on the given fs.FSWatcher.\"","            }","          }","        },","        ReadStream: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_class_fs_readstream\",","          \"!doc\": \"ReadStream is a Readable Stream.\",","          prototype: {","            bytesRead: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/fs.html#fs_readstream_bytesread\",","              \"!doc\": \"The number of bytes read so far.\"","            },","            path: {","              \"!type\": \"string\",","              \"!url\": \"https://nodejs.org/api/fs.html#fs_readstream_path\",","              \"!doc\": \"The path to the file the stream is reading from as specified in the first argument to fs.createReadStream(). If path is passed as a string, then readStream.path will be a string. If path is passed as a Buffer, then readStream.path will be a Buffer.\"","            },","            \"!proto\": \"stream.Readable\"","          }","        },","        Stats: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_class_fs_stats\",","          \"!doc\": \"Objects returned from fs.stat(), fs.lstat() and fs.fstat() and their synchronous counterparts are of this type.\",","          prototype: {","            isFile: \"fn() -> bool\",","            isDirectory: \"fn() -> bool\",","            isBlockDevice: \"fn() -> bool\",","            isCharacterDevice: \"fn() -> bool\",","            isSymbolicLink: \"fn() -> bool\",","            isFIFO: \"fn() -> bool\",","            isSocket: \"fn() -> bool\",","            dev: \"number\",","            ino: \"number\",","            mode: \"number\",","            nlink: \"number\",","            uid: \"number\",","            gid: \"number\",","            rdev: \"number\",","            size: \"number\",","            blksize: \"number\",","            blocks: \"number\",","            atime: \"+Date\",","            mtime: \"+Date\",","            ctime: \"+Date\",","            birthtime: \"+Date\"","          }","        },","        WriteStream: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/fs.html#fs_class_fs_writestream\",","          \"!doc\": \"WriteStream is a Writable Stream.\",","          prototype: {","            bytesWritten: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/fs.html#fs_writestream_byteswritten\",","              \"!doc\": \"The number of bytes written so far. Does not include data that is still queued for writing.\"","            },","            path: {","              \"!type\": \"string\",","              \"!url\": \"https://nodejs.org/api/fs.html#fs_writestream_path\",","              \"!doc\": \"The path to the file the stream is writing to as specified in the first argument to fs.createWriteStream(). If path is passed as a string, then writeStream.path will be a string. If path is passed as a Buffer, then writeStream.path will be a Buffer.\"","            },","            \"!proto\": \"stream.Writable\"","          }","        },","        constants: {","          \"!url\": \"https://nodejs.org/api/fs.html#fs_fs_constants\",","          \"!doc\": \"Returns an object containing commonly used constants for file system operations. The specific constants currently defined are described in FS Constants.\",","          F_OK: \"number\",","          R_OK: \"number\",","          W_OK: \"number\",","          X_OK: \"number\",","          O_RDONLY: \"number\",","          O_WRONLY: \"number\",","          O_RDWR: \"number\",","          O_CREAT: \"number\",","          O_EXCL: \"number\",","          O_NOCTTY: \"number\",","          O_TRUNC: \"number\",","          O_APPEND: \"number\",","          O_DIRECTORY: \"number\",","          O_NOATIME: \"number\",","          O_NOFOLLOW: \"number\",","          O_SYNC: \"number\",","          O_SYMLINK: \"number\",","          O_DIRECT: \"number\",","          O_NONBLOCK: \"number\",","          S_IFMT: \"number\",","          S_IFREG: \"number\",","          S_IFDIR: \"number\",","          S_IFCHR: \"number\",","          S_IFBLK: \"number\",","          S_IFIFO: \"number\",","          S_IFLNK: \"number\",","          S_IFSOCK: \"number\",","          S_IRWXU: \"number\",","          S_IRUSR: \"number\",","          S_IWUSR: \"number\",","          S_IXUSR: \"number\",","          S_IRWXG: \"number\",","          S_IRGRP: \"number\",","          S_IWGRP: \"number\",","          S_IXGRP: \"number\",","          S_IRWXO: \"number\",","          S_IROTH: \"number\",","          S_IWOTH: \"number\",","          S_IXOTH: \"number\"","        }","      },","      path: {","        \"!url\": \"https://nodejs.org/api/path.html\",","        \"!doc\": \"This module contains utilities for handling and transforming file paths. Almost all these methods perform only string transformations. The file system is not consulted to check whether paths are valid.\",","        normalize: {","          \"!type\": \"fn(p: string) -> string\",","          \"!url\": \"https://nodejs.org/api/path.html#path_path_normalize_p\",","          \"!doc\": \"Normalize a string path, taking care of '..' and '.' parts.\"","        },","        join: {","          \"!type\": \"fn() -> string\",","          \"!url\": \"https://nodejs.org/api/path.html#path_path_join_path\",","          \"!doc\": \"Join all arguments together and normalize the resulting path.\"","        },","        resolve: {","          \"!type\": \"fn(from: string, from2: string, from3: string, from4: string, from5: string, to: string) -> string\",","          \"!url\": \"https://nodejs.org/api/path.html#path_path_resolve_from_to\",","          \"!doc\": \"Resolves to to an absolute path.\"","        },","        relative: {","          \"!type\": \"fn(from: string, to: string) -> string\",","          \"!url\": \"https://nodejs.org/api/path.html#path_path_relative_from_to\",","          \"!doc\": \"Solve the relative path from from to to.\"","        },","        dirname: {","          \"!type\": \"fn(p: string) -> string\",","          \"!url\": \"https://nodejs.org/api/path.html#path_path_dirname_p\",","          \"!doc\": \"Return the directory name of a path. Similar to the Unix dirname command.\"","        },","        basename: {","          \"!type\": \"fn(p: string, ext?: string) -> string\",","          \"!url\": \"https://nodejs.org/api/path.html#path_path_basename_p_ext\",","          \"!doc\": \"Return the last portion of a path. Similar to the Unix basename command.\"","        },","        extname: {","          \"!type\": \"fn(p: string) -> string\",","          \"!url\": \"https://nodejs.org/api/path.html#path_path_extname_p\",","          \"!doc\": \"Return the extension of the path, from the last '.' to end of string in the last portion of the path. If there is no '.' in the last portion of the path or the first character of it is '.', then it returns an empty string.\"","        },","        sep: {","          \"!type\": \"string\",","          \"!url\": \"https://nodejs.org/api/path.html#path_path_sep\",","          \"!doc\": \"The platform-specific file separator. '\\\\\\\\' or '/'.\"","        },","        delimiter: {","          \"!type\": \"string\",","          \"!url\": \"https://nodejs.org/api/path.html#path_path_delimiter\",","          \"!doc\": \"The platform-specific path delimiter, ; or ':'.\"","        }","      },","      string_decoder: {","        \"!url\": \"https://nodejs.org/api/string_decoder.html\",","        \"!doc\": \"StringDecoder decodes a buffer to a string. It is a simple interface to buffer.toString() but provides additional support for utf8.\",","        StringDecoder: {","          \"!type\": \"fn(encoding?: string)\",","          prototype: {","            write: {","              \"!type\": \"fn(buffer: +Buffer) -> string\",","              \"!url\": \"https://nodejs.org/api/string_decoder.html#string_decoder_decoder_write_buffer\",","              \"!doc\": \"Returns a decoded string.\"","            },","            end: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/string_decoder.html#string_decoder_decoder_end\",","              \"!doc\": \"Returns any trailing bytes that were left in the buffer.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/string_decoder.html#string_decoder_class_stringdecoder\",","          \"!doc\": \"Accepts a single argument, encoding which defaults to utf8.\"","        }","      },","      tls: {","        \"!url\": \"https://nodejs.org/api/tls.html\",","        \"!doc\": \"The tls module uses OpenSSL to provide Transport Layer Security and/or Secure Socket Layer: encrypted stream communication.\",","        CLIENT_RENEG_LIMIT: \"number\",","        CLIENT_RENEG_WINDOW: \"number\",","        SLAB_BUFFER_SIZE: \"number\",","        getCiphers: {","          \"!type\": \"fn() -> [string]\",","          \"!url\": \"https://nodejs.org/api/tls.html#tls_tls_getciphers\",","          \"!doc\": \"Returns an array with the names of the supported SSL ciphers.\"","        },","        Server: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"net.Server.prototype\",","            listen: {","              \"!type\": \"fn(port: number, host?: string, callback?: fn())\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_server_listen_port_host_callback\",","              \"!doc\": \"Begin accepting connections on the specified port and host. If the host is omitted, the server will accept connections directed to any IPv4 address (INADDR_ANY).\"","            },","            close: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_server_close\",","              \"!doc\": \"Stops the server from accepting new connections. This function is asynchronous, the server is finally closed when the server emits a 'close' event.\"","            },","            addContext: {","              \"!type\": \"fn(hostName: string, credentials: tls.Server.credentials)\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_server_addcontext_hostname_credentials\",","              \"!doc\": \"Add secure context that will be used if client request's SNI hostname is matching passed hostname (wildcards can be used). credentials can contain key, cert and ca.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/tls.html#tls_class_tls_server\",","          \"!doc\": \"This class is a subclass of net.Server and has the same methods on it. Instead of accepting just raw TCP connections, this accepts encrypted connections using TLS or SSL.\"","        },","        createServer: {","          \"!type\": \"fn(options?: ?, connectionListener?: fn(stream: +tls.CleartextStream)) -> +tls.Server\",","          \"!url\": \"https://nodejs.org/api/tls.html#tls_tls_createserver_options_secureconnectionlistener\",","          \"!doc\": \"Creates a new tls.Server. The connectionListener argument is automatically set as a listener for the secureConnection event.\"","        },","        CleartextStream: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Duplex.prototype\",","            authorized: {","              \"!type\": \"bool\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_cleartextstream_authorized\",","              \"!doc\": \"A boolean that is true if the peer certificate was signed by one of the specified CAs, otherwise false\"","            },","            authorizationError: {","              \"!type\": \"+Error\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_cleartextstream_authorizationerror\",","              \"!doc\": \"The reason why the peer's certificate has not been verified. This property becomes available only when cleartextStream.authorized === false.\"","            },","            getPeerCertificate: {","              \"!type\": \"fn() -> ?\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_cleartextstream_getpeercertificate\",","              \"!doc\": \"Returns an object representing the peer's certificate. The returned object has some properties corresponding to the field of the certificate.\"","            },","            getCipher: {","              \"!type\": \"fn() -> tls.cipher\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_cleartextstream_getcipher\",","              \"!doc\": \"Returns an object representing the cipher name and the SSL/TLS protocol version of the current connection.\"","            },","            address: {","              \"!type\": \"net.address\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_cleartextstream_address\",","              \"!doc\": \"Returns the bound address, the address family name and port of the underlying socket as reported by the operating system. Returns an object with three properties, e.g. { port: 12346, family: 'IPv4', address: '127.0.0.1' }\"","            },","            remoteAddress: {","              \"!type\": \"string\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_cleartextstream_remoteaddress\",","              \"!doc\": \"The string representation of the remote IP address. For example, '74.125.127.100' or '2001:4860:a005::68'.\"","            },","            remotePort: {","              \"!type\": \"number\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_cleartextstream_remoteport\",","              \"!doc\": \"The numeric representation of the remote port. For example, 443.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/tls.html#tls_class_tls_cleartextstream\",","          \"!doc\": \"This is a stream on top of the Encrypted stream that makes it possible to read/write an encrypted data as a cleartext data.\"","        },","        connect: {","          \"!type\": \"fn(port: number, host?: string, options: ?, listener: fn()) -> +tls.CleartextStream\",","          \"!url\": \"https://nodejs.org/api/tls.html#tls_tls_connect_options_callback\",","          \"!doc\": \"Creates a new client connection to the given port and host (old API) or options.port and options.host. (If host is omitted, it defaults to localhost.)\"","        },","        createSecurePair: {","          \"!type\": \"fn(credentials?: crypto.credentials, isServer?: bool, requestCert?: bool, rejectUnauthorized?: bool) -> +tls.SecurePair\",","          \"!url\": \"https://nodejs.org/api/tls.html#tls_tls_createsecurepair_credentials_isserver_requestcert_rejectunauthorized\",","          \"!doc\": \"Creates a new secure pair object with two streams, one of which reads/writes encrypted data, and one reads/writes cleartext data. Generally the encrypted one is piped to/from an incoming encrypted data stream, and the cleartext one is used as a replacement for the initial encrypted stream.\"","        },","        SecurePair: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"events.EventEmitter.prototype\",","            cleartext: {","              \"!type\": \"+tls.CleartextStream\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_class_securepair\",","              \"!doc\": \"Returned by tls.createSecurePair.\"","            },","            encrypted: {","              \"!type\": \"+stream.Duplex\",","              \"!url\": \"https://nodejs.org/api/tls.html#tls_class_securepair\",","              \"!doc\": \"Returned by tls.createSecurePair.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/tls.html#tls_class_securepair\",","          \"!doc\": \"Returned by tls.createSecurePair.\"","        }","      },","      crypto: {","        \"!url\": \"https://nodejs.org/api/crypto.html\",","        \"!doc\": \"The crypto module offers a way of encapsulating secure credentials to be used as part of a secure HTTPS net or http connection.\\nIt also offers a set of wrappers for OpenSSL's hash, hmac, cipher, decipher, sign and verify methods.\",","        getCiphers: {","          \"!type\": \"fn() -> [string]\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_getciphers\",","          \"!doc\": \"Returns an array with the names of the supported ciphers.\"","        },","        getHashes: {","          \"!type\": \"fn() -> [string]\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_gethashes\",","          \"!doc\": \"Returns an array with the names of the supported hash algorithms.\"","        },","        createCredentials: {","          \"!type\": \"fn(details?: ?) -> crypto.credentials\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_createcredentials_details\",","          \"!doc\": \"Creates a credentials object.\"","        },","        createHash: {","          \"!type\": \"fn(algorithm: string) -> +crypto.Hash\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm\",","          \"!doc\": \"Creates and returns a hash object, a cryptographic hash with the given algorithm which can be used to generate hash digests.\"","        },","        Hash: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Duplex.prototype\",","            update: {","              \"!type\": \"fn(data: +Buffer, encoding?: string)\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_hash_update_data_input_encoding\",","              \"!doc\": \"Updates the hash content with the given data, the encoding of which is given in input_encoding and can be 'utf8', 'ascii' or 'binary'. If no encoding is provided, then a buffer is expected.\"","            },","            digest: {","              \"!type\": \"fn(encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding\",","              \"!doc\": \"Calculates the digest of all of the passed data to be hashed. The encoding can be 'hex', 'binary' or 'base64'. If no encoding is provided, then a buffer is returned.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_class_hash\",","          \"!doc\": \"The class for creating hash digests of data.\"","        },","        createHmac: {","          \"!type\": \"fn(algorithm: string, key: string) -> +crypto.Hmac\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_createhmac_algorithm_key\",","          \"!doc\": \"Creates and returns a hmac object, a cryptographic hmac with the given algorithm and key.\"","        },","        Hmac: {","          \"!type\": \"fn()\",","          prototype: {","            update: {","              \"!type\": \"fn(data: +Buffer)\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_hmac_update_data\",","              \"!doc\": \"Update the hmac content with the given data. This can be called many times with new data as it is streamed.\"","            },","            digest: {","              \"!type\": \"fn(encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_hmac_digest_encoding\",","              \"!doc\": \"Calculates the digest of all of the passed data to the hmac. The encoding can be 'hex', 'binary' or 'base64'. If no encoding is provided, then a buffer is returned.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_class_hmac\",","          \"!doc\": \"Class for creating cryptographic hmac content.\"","        },","        createCipher: {","          \"!type\": \"fn(algorithm: string, password: string) -> +crypto.Cipher\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_createcipher_algorithm_password\",","          \"!doc\": \"Creates and returns a cipher object, with the given algorithm and password.\"","        },","        createCipheriv: {","          \"!type\": \"fn(algorithm: string, password: string, iv: string) -> +crypto.Cipher\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_createcipheriv_algorithm_key_iv\",","          \"!doc\": \"Creates and returns a cipher object, with the given algorithm, key and iv.\"","        },","        Cipher: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Duplex.prototype\",","            update: {","              \"!type\": \"fn(data: +Buffer, input_encoding?: string, output_encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_cipher_update_data_input_encoding_output_encoding\",","              \"!doc\": \"Updates the cipher with data, the encoding of which is given in input_encoding and can be 'utf8', 'ascii' or 'binary'. If no encoding is provided, then a buffer is expected.\"","            },","            \"final\": {","              \"!type\": \"fn(output_encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_cipher_final_output_encoding\",","              \"!doc\": \"Returns any remaining enciphered contents, with output_encoding being one of: 'binary', 'base64' or 'hex'. If no encoding is provided, then a buffer is returned.\"","            },","            setAutoPadding: {","              \"!type\": \"fn(auto_padding: bool)\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_cipher_setautopadding_auto_padding_true\",","              \"!doc\": \"You can disable automatic padding of the input data to block size. If auto_padding is false, the length of the entire input data must be a multiple of the cipher's block size or final will fail. Useful for non-standard padding, e.g. using 0x0 instead of PKCS padding. You must call this before cipher.final.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_class_cipher\",","          \"!doc\": \"Class for encrypting data.\"","        },","        createDecipher: {","          \"!type\": \"fn(algorithm: string, password: string) -> +crypto.Decipher\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_createdecipher_algorithm_password\",","          \"!doc\": \"Creates and returns a decipher object, with the given algorithm and key. This is the mirror of the createCipher() above.\"","        },","        createDecipheriv: {","          \"!type\": \"fn(algorithm: string, key: string, iv: string) -> +crypto.Decipher\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_createdecipheriv_algorithm_key_iv\",","          \"!doc\": \"Creates and returns a decipher object, with the given algorithm, key and iv. This is the mirror of the createCipheriv() above.\"","        },","        Decipher: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Duplex.prototype\",","            update: {","              \"!type\": \"fn(data: +Buffer, input_encoding?: string, output_encoding?: string)\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_decipher_update_data_input_encoding_output_encoding\",","              \"!doc\": \"Updates the decipher with data, which is encoded in 'binary', 'base64' or 'hex'. If no encoding is provided, then a buffer is expected.\"","            },","            \"final\": {","              \"!type\": \"fn(output_encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_decipher_final_output_encoding\",","              \"!doc\": \"Returns any remaining plaintext which is deciphered, with output_encoding being one of: 'binary', 'ascii' or 'utf8'. If no encoding is provided, then a buffer is returned.\"","            },","            setAutoPadding: {","              \"!type\": \"fn(auto_padding: bool)\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_decipher_setautopadding_auto_padding_true\",","              \"!doc\": \"You can disable auto padding if the data has been encrypted without standard block padding to prevent decipher.final from checking and removing it. Can only work if the input data's length is a multiple of the ciphers block size. You must call this before streaming data to decipher.update.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_class_decipher\",","          \"!doc\": \"Class for decrypting data.\"","        },","        createSign: {","          \"!type\": \"fn(algorithm: string) -> +crypto.Sign\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_createsign_algorithm\",","          \"!doc\": \"Creates and returns a signing object, with the given algorithm. On recent OpenSSL releases, openssl list-public-key-algorithms will display the available signing algorithms. Examples are 'RSA-SHA256'.\"","        },","        Sign: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Writable.prototype\",","            update: {","              \"!type\": \"fn(data: +Buffer)\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_sign_update_data\",","              \"!doc\": \"Updates the sign object with data. This can be called many times with new data as it is streamed.\"","            },","            sign: {","              \"!type\": \"fn(private_key: string, output_format: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_sign_sign_private_key_output_format\",","              \"!doc\": \"Calculates the signature on all the updated data passed through the sign. private_key is a string containing the PEM encoded private key for signing.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_class_sign\",","          \"!doc\": \"Class for generating signatures.\"","        },","        createVerify: {","          \"!type\": \"fn(algorith: string) -> +crypto.Verify\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_createverify_algorithm\",","          \"!doc\": \"Creates and returns a verification object, with the given algorithm. This is the mirror of the signing object above.\"","        },","        Verify: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"stream.Writable.prototype\",","            update: {","              \"!type\": \"fn(data: +Buffer)\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_verifier_update_data\",","              \"!doc\": \"Updates the verifier object with data. This can be called many times with new data as it is streamed.\"","            },","            verify: {","              \"!type\": \"fn(object: string, signature: string, signature_format?: string) -> bool\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_verifier_verify_object_signature_signature_format\",","              \"!doc\": \"Verifies the signed data by using the object and signature. object is a string containing a PEM encoded object, which can be one of RSA public key, DSA public key, or X.509 certificate. signature is the previously calculated signature for the data, in the signature_format which can be 'binary', 'hex' or 'base64'. If no encoding is specified, then a buffer is expected.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_class_verify\",","          \"!doc\": \"Class for verifying signatures.\"","        },","        createDiffieHellman: {","          \"!type\": \"fn(prime: number, encoding?: string) -> +crypto.DiffieHellman\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_creatediffiehellman_prime_length\",","          \"!doc\": \"Creates a Diffie-Hellman key exchange object and generates a prime of the given bit length. The generator used is 2.\"","        },","        DiffieHellman: {","          \"!type\": \"fn()\",","          prototype: {","            generateKeys: {","              \"!type\": \"fn(encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_diffiehellman_generatekeys_encoding\",","              \"!doc\": \"Generates private and public Diffie-Hellman key values, and returns the public key in the specified encoding. This key should be transferred to the other party. Encoding can be 'binary', 'hex', or 'base64'. If no encoding is provided, then a buffer is returned.\"","            },","            computeSecret: {","              \"!type\": \"fn(other_public_key: +Buffer, input_encoding?: string, output_encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_diffiehellman_computesecret_other_public_key_input_encoding_output_encoding\",","              \"!doc\": \"Computes the shared secret using other_public_key as the other party's public key and returns the computed shared secret. Supplied key is interpreted using specified input_encoding, and secret is encoded using specified output_encoding. Encodings can be 'binary', 'hex', or 'base64'. If the input encoding is not provided, then a buffer is expected.\"","            },","            getPrime: {","              \"!type\": \"fn(encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_diffiehellman_getprime_encoding\",","              \"!doc\": \"Returns the Diffie-Hellman prime in the specified encoding, which can be 'binary', 'hex', or 'base64'. If no encoding is provided, then a buffer is returned.\"","            },","            getGenerator: {","              \"!type\": \"fn(encoding: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_diffiehellman_getgenerator_encoding\",","              \"!doc\": \"Returns the Diffie-Hellman prime in the specified encoding, which can be 'binary', 'hex', or 'base64'. If no encoding is provided, then a buffer is returned.\"","            },","            getPublicKey: {","              \"!type\": \"fn(encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_diffiehellman_getpublickey_encoding\",","              \"!doc\": \"Returns the Diffie-Hellman public key in the specified encoding, which can be 'binary', 'hex', or 'base64'. If no encoding is provided, then a buffer is returned.\"","            },","            getPrivateKey: {","              \"!type\": \"fn(encoding?: string) -> +Buffer\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_diffiehellman_getprivatekey_encoding\",","              \"!doc\": \"Returns the Diffie-Hellman private key in the specified encoding, which can be 'binary', 'hex', or 'base64'. If no encoding is provided, then a buffer is returned.\"","            },","            setPublicKey: {","              \"!type\": \"fn(public_key: +Buffer, encoding?: string)\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_diffiehellman_setpublickey_public_key_encoding\",","              \"!doc\": \"Sets the Diffie-Hellman public key. Key encoding can be 'binary', 'hex' or 'base64'. If no encoding is provided, then a buffer is expected.\"","            },","            setPrivateKey: {","              \"!type\": \"fn(public_key: +Buffer, encoding?: string)\",","              \"!url\": \"https://nodejs.org/api/crypto.html#crypto_diffiehellman_setprivatekey_private_key_encoding\",","              \"!doc\": \"Sets the Diffie-Hellman private key. Key encoding can be 'binary', 'hex' or 'base64'. If no encoding is provided, then a buffer is expected.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_class_diffiehellman\",","          \"!doc\": \"The class for creating Diffie-Hellman key exchanges.\"","        },","        getDiffieHellman: {","          \"!type\": \"fn(group_name: string) -> +crypto.DiffieHellman\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_getdiffiehellman_group_name\",","          \"!doc\": \"Creates a predefined Diffie-Hellman key exchange object. The supported groups are: 'modp1', 'modp2', 'modp5' (defined in RFC 2412) and 'modp14', 'modp15', 'modp16', 'modp17', 'modp18' (defined in RFC 3526). The returned object mimics the interface of objects created by crypto.createDiffieHellman() above, but will not allow to change the keys (with diffieHellman.setPublicKey() for example). The advantage of using this routine is that the parties don't have to generate nor exchange group modulus beforehand, saving both processor and communication time.\"","        },","        pbkdf2: {","          \"!type\": \"fn(password: string, salt: string, iterations: number, keylen: number, callback: fn(err: +Error, derivedKey: string))\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2_password_salt_iterations_keylen_callback\",","          \"!doc\": \"Asynchronous PBKDF2 applies pseudorandom function HMAC-SHA1 to derive a key of given length from the given password, salt and iterations. The callback gets two arguments (err, derivedKey).\"","        },","        pbkdf2Sync: {","          \"!type\": \"fn(password: string, salt: string, iterations: number, keylen: number) -> string\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_pbkdf2sync_password_salt_iterations_keylen\",","          \"!doc\": \"Synchronous PBKDF2 function. Returns derivedKey or throws error.\"","        },","        randomBytes: {","          \"!type\": \"fn(size: number, callback?: fn(err: +Error, buf: +Buffer))\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback\",","          \"!doc\": \"Generates cryptographically strong pseudo-random data.\"","        },","        pseudoRandomBytes: {","          \"!type\": \"fn(size: number, callback?: fn(err: +Error, buf: +Buffer))\",","          \"!url\": \"https://nodejs.org/api/crypto.html#crypto_crypto_pseudorandombytes_size_callback\",","          \"!doc\": \"Generates non-cryptographically strong pseudo-random data. The data returned will be unique if it is sufficiently long, but is not necessarily unpredictable. For this reason, the output of this function should never be used where unpredictability is important, such as in the generation of encryption keys.\"","        },","        DEFAULT_ENCODING: \"string\"","      },","      util: {","        \"!url\": \"https://nodejs.org/api/util.html\",","        \"!doc\": \"The util module is primarily designed to support the needs of Node's internal APIs. Many of these utilities are useful for your own programs. If you find that these functions are lacking for your purposes, however, you are encouraged to write your own utilities. We are not interested in any future additions to the util module that are unnecessary for Node's internal functionality.\",","        format: {","          \"!type\": \"fn(format: string) -> string\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_format_format\",","          \"!doc\": \"Returns a formatted string using the first argument as a printf-like format.\"","        },","        debug: {","          \"!type\": \"fn(msg: string)\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_debug_string\",","          \"!doc\": \"A synchronous output function. Will block the process and output string immediately to stderr.\"","        },","        error: {","          \"!type\": \"fn(msg: string, ...string: string)\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_error\",","          \"!doc\": \"Same as util.debug() except this will output all arguments immediately to stderr.\"","        },","        puts: {","          \"!type\": \"fn(data: string)\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_puts\",","          \"!doc\": \"A synchronous output function. Will block the process and output all arguments to stdout with newlines after each argument.\"","        },","        print: {","          \"!type\": \"fn(data: string)\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_print\",","          \"!doc\": \"A synchronous output function. Will block the process, cast each argument to a string then output to stdout. Does not place newlines after each argument.\"","        },","        log: {","          \"!type\": \"fn(string: string)\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_log_string\",","          \"!doc\": \"Output with timestamp on stdout.\"","        },","        inspect: {","          \"!type\": \"fn(object: ?, options: {showHidden: bool, depth: number, colors: bool, customInspect: bool, showProxy: bool, maxArrayLength: number, breakLength: number}) -> string\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_inspect_object_options\",","          \"!doc\": \"Return a string representation of object, which is useful for debugging.\"","        },","        isArray: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isarray_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is an Array. false otherwise.\"","        },","        isRegExp: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isregexp_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is a RegExp. false otherwise.\"","        },","        isDate: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isdate_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is a Date. false otherwise.\"","        },","        isError: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_iserror_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is an Error. false otherwise.\"","        },","        isBoolean: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isboolean_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is a Boolean. false otherwise.\"","        },","        isNull: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isnull_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is strictly null. false otherwise.\"","        },","        isNullOrUndefined: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isnullorundefined_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is null or undefined. false otherwise.\"","        },","        isNumber: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isnumber_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is a Number. false otherwise.\"","        },","        isString: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isstring_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is a String. false otherwise.\"","        },","        isSymbol: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_issymbol_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is a Symbol. false otherwise.\"","        },","        isUndefined: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isundefined_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is undefined. false otherwise.\"","        },","        isObject: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isobject_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is strictly an Object and not a Function. false otherwise.\"","        },","        isFunction: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isfunction_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is a Function. false otherwise.\"","        },","        isPrimitive: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isprimitive_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is a primitive type. false otherwise.\"","        },","        isBuffer: {","          \"!type\": \"fn(object: ?) -> bool\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_isbuffer_object\",","          \"!doc\": \"Returns true if the given \\\"object\\\" is a Buffer. false otherwise.\"","        },","        inherits: {","          \"!type\": \"fn(constructor: ?, superConstructor: ?)\",","          \"!url\": \"https://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor\",","          \"!doc\": \"Inherit the prototype methods from one constructor into another. The prototype of constructor will be set to a new object created from superConstructor.\"","        }","      },","      assert: {","        \"!url\": \"https://nodejs.org/api/assert.html\",","        \"!doc\": \"The assert module provides a simple set of assertion tests that can be used to test invariants. The module is intended for internal use by Node.js, but can be used in application code via require('assert'). However, assert is not a testing framework, and is not intended to be used as a general purpose assertion library.\",","        \"!type\": \"fn(value: ?, message?: string)\",","        ok: {","          \"!type\": \"fn(value: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_value_message_assert_ok_value_message\",","          \"!doc\": \"Tests if value is truthy. It is equivalent to assert.equal(!!value, true, message).\"","        },","        deepEqual: {","          \"!type\": \"fn(actual: ?, expected: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_deepequal_actual_expected_message\",","          \"!doc\": \"Tests for deep equality between the actual and expected parameters. Primitive values are compared with the equal comparison operator ( == ).\"","        },","        deepStrictEqual: {","          \"!type\": \"fn(actual: ?, expected: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_deepstrictequal_actual_expected_message\",","          \"!doc\": \"Generally identical to assert.deepEqual with the exception that primitive values are compared using the strict equality operator ( === ).\"","        },","        doesNotThrow: {","          \"!type\": \"fn(block: fn(), error?: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_doesnotthrow_block_error_message\",","          \"!doc\": \"Asserts that the function block does not throw an error. See assert.throws() for more details.\"","        },","        equal: {","          \"!type\": \"fn(actual: ?, expected: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_equal_actual_expected_message\",","          \"!doc\": \"Tests shallow, coercive equality between the actual and expected parameters using the equal comparison operator ( == ).\"","        },","        fail: {","          \"!type\": \"fn(actual: ?, expected: ?, message: string, operator: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_fail_actual_expected_message_operator\",","          \"!doc\": \"Throws an AssertionError. If message is falsy, the error message is set as the values of actual and expected separated by the provided operator. Otherwise, the error message is the value of message.\"","        },","        ifError: {","          \"!type\": \"fn(value: ?)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_iferror_value\",","          \"!doc\": \"Throws value if value is truthy. This is useful when testing the error argument in callbacks.\"","        },","        notDeepEqual: {","          \"!type\": \"fn(actual: ?, expected: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_notdeepequal_actual_expected_message\",","          \"!doc\": \"Tests for any deep inequality. Opposite of assert.deepEqual.\"","        },","        notDeepStrictEqual: {","          \"!type\": \"fn(actual: ?, expected: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_notdeepstrictequal_actual_expected_message\",","          \"!doc\": \"Tests for deep strict inequality. Opposite of assert.deepStrictEqual.\"","        },","        notEqual: {","          \"!type\": \"fn(actual: ?, expected: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_notequal_actual_expected_message\",","          \"!doc\": \"Tests shallow, coercive inequality with the not equal comparison operator ( != ).\"","        },","        notStrictEqual: {","          \"!type\": \"fn(actual: ?, expected: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_notstrictequal_actual_expected_message\",","          \"!doc\": \"Tests strict inequality as determined by the strict not equal operator ( !== ).\"","        },","        strictEqual: {","          \"!type\": \"fn(actual: ?, expected: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_strictequal_actual_expected_message\",","          \"!doc\": \"Tests strict equality as determined by the strict equality operator ( === ).\"","        },","        throws: {","          \"!type\": \"fn(block: fn(), error?: ?, message?: string)\",","          \"!url\": \"https://nodejs.org/api/assert.html#assert_assert_throws_block_error_message\",","          \"!doc\": \"Expects the function block to throw an error. If specified, error can be a constructor, RegExp, or validation function.\"","        }","      },","      tty: {","        \"!url\": \"https://nodejs.org/api/tty.html\",","        \"!doc\": \"The tty module houses the tty.ReadStream and tty.WriteStream classes. In most cases, you will not need to use this module directly.\",","        isatty: {","          \"!type\": \"fn(fd: number) -> bool\",","          \"!url\": \"https://nodejs.org/api/tty.html#tty_tty_isatty_fd\",","          \"!doc\": \"Returns true or false depending on if the fd is associated with a terminal.\"","        }","      },","      domain: {","        \"!url\": \"https://nodejs.org/api/domain.html\",","        \"!doc\": \"Domains provide a way to handle multiple different IO operations as a single group. If any of the event emitters or callbacks registered to a domain emit an error event, or throw an error, then the domain object will be notified, rather than losing the context of the error in the process.on('uncaughtException') handler, or causing the program to exit immediately with an error code.\",","        create: {","          \"!type\": \"fn() -> +events.EventEmitter\",","          \"!url\": \"https://nodejs.org/api/domain.html#domain_domain_create\",","          \"!doc\": \"Returns a new Domain object.\"","        },","        Domain: {","          \"!type\": \"fn()\",","          prototype: {","            \"!proto\": \"events.EventEmitter.prototype\",","            run: {","              \"!type\": \"fn(fn: fn())\",","              \"!url\": \"https://nodejs.org/api/domain.html#domain_domain_run_fn\",","              \"!doc\": \"Run the supplied function in the context of the domain, implicitly binding all event emitters, timers, and lowlevel requests that are created in that context.\"","            },","            members: {","              \"!type\": \"[+events.EventEmitter]\",","              \"!url\": \"https://nodejs.org/api/domain.html#domain_domain_members\",","              \"!doc\": \"An array of timers and event emitters that have been explicitly added to the domain.\"","            },","            add: {","              \"!type\": \"fn(emitter: +events.EventEmitter)\",","              \"!url\": \"https://nodejs.org/api/domain.html#domain_domain_add_emitter\",","              \"!doc\": \"Explicitly adds an emitter to the domain. If any event handlers called by the emitter throw an error, or if the emitter emits an error event, it will be routed to the domain's error event, just like with implicit binding.\"","            },","            remove: {","              \"!type\": \"fn(emitter: +events.EventEmitter)\",","              \"!url\": \"https://nodejs.org/api/domain.html#domain_domain_remove_emitter\",","              \"!doc\": \"The opposite of domain.add(emitter). Removes domain handling from the specified emitter.\"","            },","            bind: {","              \"!type\": \"fn(callback: fn(err: +Error, data: ?)) -> !0\",","              \"!url\": \"https://nodejs.org/api/domain.html#domain_domain_bind_callback\",","              \"!doc\": \"The returned function will be a wrapper around the supplied callback function. When the returned function is called, any errors that are thrown will be routed to the domain's error event.\"","            },","            intercept: {","              \"!type\": \"fn(cb: fn(data: ?)) -> !0\",","              \"!url\": \"https://nodejs.org/api/domain.html#domain_domain_intercept_callback\",","              \"!doc\": \"This method is almost identical to domain.bind(callback). However, in addition to catching thrown errors, it will also intercept Error objects sent as the first argument to the function.\"","            },","            dispose: {","              \"!type\": \"fn()\",","              \"!url\": \"https://nodejs.org/api/domain.html#domain_domain_dispose\",","              \"!doc\": \"The dispose method destroys a domain, and makes a best effort attempt to clean up any and all IO that is associated with the domain. Streams are aborted, ended, closed, and/or destroyed. Timers are cleared. Explicitly bound callbacks are no longer called. Any error events that are raised as a result of this are ignored.\"","            }","          },","          \"!url\": \"https://nodejs.org/api/domain.html#domain_class_domain\",","          \"!doc\": \"The Domain class encapsulates the functionality of routing errors and uncaught exceptions to the active Domain object.\"","        }","      },","      \"os.cpuSpec\": {","        model: \"string\",","        speed: \"number\",","        times: {","          user: \"number\",","          nice: \"number\",","          sys: \"number\",","          idle: \"number\",","          irq: \"number\"","        }","      },","      \"process.memoryUsage.type\": {","        rss: \"number\",","        heapTotal: \"?\",","        number: \"?\",","        heapUsed: \"number\"","      },","      \"net.address\": {","        port: \"number\",","        family: \"string\",","        address: \"string\"","      },","      \"url.type\": {","        href: \"string\",","        protocol: \"string\",","        auth: \"string\",","        hostname: \"string\",","        port: \"string\",","        host: \"string\",","        pathname: \"string\",","        search: \"string\",","        query: \"string\",","        slashes: \"bool\",","        hash: \"string\"","      },","      \"tls.Server.credentials\": {","        key: \"string\",","        cert: \"string\",","        ca: \"string\"","      },","      \"tls.cipher\": {","        name: \"string\",","        version: \"string\"","      },","      \"crypto.credentials\": {","        pfx: \"string\",","        key: \"string\",","        passphrase: \"string\",","        cert: \"string\",","        ca: \"string\",","        crl: \"string\",","        ciphers: \"string\"","      },","      buffer: {","        \"!url\": \"https://nodejs.org/api/buffer.html\",","        \"!doc\": \"Prior to the introduction of TypedArray in ECMAScript 2015 (ES6), the JavaScript language had no mechanism for reading or manipulating streams of binary data. The Buffer class was introduced as part of the Node.js API to make it possible to interact with octet streams in the context of things like TCP streams and file system operations.\",","        Buffer: \"Buffer\",","        SlowBuffer: \"Buffer\",","        INSPECT_MAX_BYTES: {","          \"!type\": \"number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buffer_inspect_max_bytes\",","          \"!doc\": \"Returns the maximum number of bytes that will be returned when buf.inspect() is called. This can be overridden by user modules. See util.inspect() for more details on buf.inspect() behavior.\"","        },","        kMaxLength: {","          \"!type\": \"number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buffer_kmaxlength\",","          \"!doc\": \"On 32-bit architectures, this value is (2^30)-1 (~1GB). On 64-bit architectures, this value is (2^31)-1 (~2GB).\"","        }","      },","      module: {},","      timers: {","        clearImmediate: {","          \"!type\": \"fn(immediateObject: ?)\",","          \"!url\": \"https://nodejs.org/api/timers.html#timers_clearimmediate_immediateobject\",","          \"!doc\": \"Stops an immediate from triggering.\"","        },","        clearInterval: {","          \"!type\": \"fn(intervalObject: timers.Timer)\",","          \"!url\": \"https://nodejs.org/api/timers.html#timers_clearinterval_intervalobject\",","          \"!doc\": \"Stops an interval from triggering.\"","        },","        clearTimeout: {","          \"!type\": \"fn(timeoutObject: timers.Timer)\",","          \"!url\": \"https://nodejs.org/api/timers.html#timers_cleartimeout_timeoutobject\",","          \"!doc\": \"Prevents a timeout from triggering.\"","        },","        setImmediate: {","          \"!type\": \"fn(callback: fn(), args?: ?) -> ?\",","          \"!url\": \"https://nodejs.org/api/timers.html#timers_setimmediate_callback_arg\",","          \"!doc\": \"To schedule the \\\"immediate\\\" execution of callback after I/O events callbacks and before setTimeout and setInterval. Returns an immediateObject for possible use with clearImmediate(). Optionally you can also pass arguments to the callback.\"","        },","        setInterval: {","          \"!type\": \"fn(callback: fn(), delay: number, args?: ?) -> timers.Timer\",","          \"!url\": \"https://nodejs.org/api/timers.html#timers_setinterval_callback_delay_arg\",","          \"!doc\": \"To schedule the repeated execution of callback every delay milliseconds. Returns a intervalObject for possible use with clearInterval(). Optionally you can also pass arguments to the callback.\"","        },","        setTimeout: {","          \"!type\": \"fn(callback: fn(), delay: number, args?: ?) -> timers.Timer\",","          \"!url\": \"https://nodejs.org/api/timers.html#timers_settimeout_callback_delay_arg\",","          \"!doc\": \"To schedule execution of a one-time callback after delay milliseconds. Returns a timeoutObject for possible use with clearTimeout(). Optionally you can also pass arguments to the callback.\"","        },","        Timer: {","          ref: {","            \"!type\": \"fn() -> timers.Timer\",","            \"!url\": \"https://nodejs.org/api/timers.html#timers_ref\",","            \"!doc\": \"If you had previously unref()d a timer you can call ref() to explicitly request the timer hold the program open. If the timer is already refd calling ref again will have no effect.\"","          },","          unref: {","            \"!type\": \"fn() -> timers.Timer\",","            \"!url\": \"https://nodejs.org/api/timers.html#timers_unref\",","            \"!doc\": \"The opaque value returned by setTimeout and setInterval also has the method timer.unref() which will allow you to create a timer that is active but if it is the only item left in the event loop, it won't keep the program running. If the timer is already unrefd calling unref again will have no effect.\"","          }","        }","      }","    },","    process: {","      stdout: {","        \"!type\": \"+stream.Writable\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_stdout\",","        \"!doc\": \"A Writable Stream to stdout.\"","      },","      stderr: {","        \"!type\": \"+stream.Writable\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_stderr\",","        \"!doc\": \"A writable stream to stderr.\"","      },","      stdin: {","        \"!type\": \"+stream.Readable\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_stdin\",","        \"!doc\": \"A Readable Stream for stdin. The stdin stream is paused by default, so one must call process.stdin.resume() to read from it.\"","      },","      argv: {","        \"!type\": \"[string]\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_argv\",","        \"!doc\": \"An array containing the command line arguments. The first element will be 'node', the second element will be the name of the JavaScript file. The next elements will be any additional command line arguments.\"","      },","      execPath: {","        \"!type\": \"string\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_execpath\",","        \"!doc\": \"This is the absolute pathname of the executable that started the process.\"","      },","      abort: {","        \"!type\": \"fn()\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_abort\",","        \"!doc\": \"This causes node to emit an abort. This will cause node to exit and generate a core file.\"","      },","      chdir: {","        \"!type\": \"fn(directory: string)\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_chdir_directory\",","        \"!doc\": \"Changes the current working directory of the process or throws an exception if that fails.\"","      },","      cwd: {","        \"!type\": \"fn()\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_cwd\",","        \"!doc\": \"Returns the current working directory of the process.\"","      },","      env: {","        \"!url\": \"https://nodejs.org/api/process.html#process_process_env\",","        \"!doc\": \"An object containing the user environment.\"","      },","      exit: {","        \"!type\": \"fn(code?: number)\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_exit_code\",","        \"!doc\": \"Ends the process with the specified code. If omitted, exit uses the 'success' code 0.\"","      },","      getgid: {","        \"!type\": \"fn() -> number\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_getgid\",","        \"!doc\": \"Gets the group identity of the process. This is the numerical group id, not the group name.\"","      },","      setgid: {","        \"!type\": \"fn(id: number)\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_setgid_id\",","        \"!doc\": \"Sets the group identity of the process. This accepts either a numerical ID or a groupname string. If a groupname is specified, this method blocks while resolving it to a numerical ID.\"","      },","      getuid: {","        \"!type\": \"fn() -> number\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_getuid\",","        \"!doc\": \"Gets the user identity of the process. This is the numerical userid, not the username.\"","      },","      setuid: {","        \"!type\": \"fn(id: number)\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_setuid_id\",","        \"!doc\": \"Sets the user identity of the process. This accepts either a numerical ID or a username string. If a username is specified, this method blocks while resolving it to a numerical ID.\"","      },","      version: {","        \"!type\": \"string\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_version\",","        \"!doc\": \"A compiled-in property that exposes NODE_VERSION.\"","      },","      versions: {","        http_parser: \"string\",","        node: \"string\",","        v8: \"string\",","        ares: \"string\",","        uv: \"string\",","        zlib: \"string\",","        openssl: \"string\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_versions\",","        \"!doc\": \"A property exposing version strings of node and its dependencies.\"","      },","      config: {","        target_defaults: {","          cflags: \"[?]\",","          default_configuration: \"string\",","          defines: \"[string]\",","          include_dirs: \"[string]\",","          libraries: \"[string]\"","        },","        variables: {","          clang: \"number\",","          host_arch: \"string\",","          node_install_npm: \"bool\",","          node_install_waf: \"bool\",","          node_prefix: \"string\",","          node_shared_openssl: \"bool\",","          node_shared_v8: \"bool\",","          node_shared_zlib: \"bool\",","          node_use_dtrace: \"bool\",","          node_use_etw: \"bool\",","          node_use_openssl: \"bool\",","          target_arch: \"string\",","          v8_no_strict_aliasing: \"number\",","          v8_use_snapshot: \"bool\",","          visibility: \"string\"","        },","        \"!url\": \"https://nodejs.org/api/process.html#process_process_config\",","        \"!doc\": \"An Object containing the JavaScript representation of the configure options that were used to compile the current node executable. This is the same as the \\\"config.gypi\\\" file that was produced when running the ./configure script.\"","      },","      kill: {","        \"!type\": \"fn(pid: number, signal?: string)\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_kill_pid_signal\",","        \"!doc\": \"Send a signal to a process. pid is the process id and signal is the string describing the signal to send. Signal names are strings like 'SIGINT' or 'SIGUSR1'. If omitted, the signal will be 'SIGTERM'.\"","      },","      pid: {","        \"!type\": \"number\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_pid\",","        \"!doc\": \"The PID of the process.\"","      },","      title: {","        \"!type\": \"string\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_title\",","        \"!doc\": \"Getter/setter to set what is displayed in 'ps'.\"","      },","      arch: {","        \"!type\": \"string\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_arch\",","        \"!doc\": \"What processor architecture you're running on: 'arm', 'ia32', or 'x64'.\"","      },","      platform: {","        \"!type\": \"string\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_platform\",","        \"!doc\": \"What platform you're running on: 'darwin', 'freebsd', 'linux', 'sunos' or 'win32'\"","      },","      memoryUsage: {","        \"!type\": \"fn() -> process.memoryUsage.type\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_memoryusage\",","        \"!doc\": \"Returns an object describing the memory usage of the Node process measured in bytes.\"","      },","      nextTick: {","        \"!type\": \"fn(callback: fn())\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_nexttick_callback\",","        \"!doc\": \"On the next loop around the event loop call this callback. This is not a simple alias to setTimeout(fn, 0), it's much more efficient. It typically runs before any other I/O events fire, but there are some exceptions.\"","      },","      maxTickDepth: {","        \"!type\": \"number\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_maxtickdepth\",","        \"!doc\": \"The maximum depth of nextTick-calling nextTick-callbacks that will be evaluated before allowing other forms of I/O to occur.\"","      },","      umask: {","        \"!type\": \"fn(mask?: number) -> number\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_umask_mask\",","        \"!doc\": \"Sets or reads the process's file mode creation mask. Child processes inherit the mask from the parent process. Returns the old mask if mask argument is given, otherwise returns the current mask.\"","      },","      uptime: {","        \"!type\": \"fn() -> number\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_uptime\",","        \"!doc\": \"Number of seconds Node has been running.\"","      },","      hrtime: {","        \"!type\": \"fn() -> [number]\",","        \"!url\": \"https://nodejs.org/api/process.html#process_process_hrtime\",","        \"!doc\": \"Returns the current high-resolution real time in a [seconds, nanoseconds] tuple Array. It is relative to an arbitrary time in the past. It is not related to the time of day and therefore not subject to clock drift. The primary use is for measuring performance between intervals.\"","      },","      \"!url\": \"https://nodejs.org/api/globals.html#globals_process\",","      \"!doc\": \"The process object.\"","    },","    global: {","      \"!type\": \"<top>\",","      \"!url\": \"https://nodejs.org/api/globals.html#globals_global\",","      \"!doc\": \"In browsers, the top-level scope is the global scope. That means that in browsers if you're in the global scope var something will define a global variable. In Node this is different. The top-level scope is not the global scope; var something inside a Node module will be local to that module.\"","    },","    console: {","      log: {","        \"!type\": \"fn(text: string)\",","        \"!url\": \"https://nodejs.org/api/console.html#console_console_log_data\",","        \"!doc\": \"Prints to stdout with newline. This function can take multiple arguments in a printf()-like way.\"","      },","      info: {","        \"!type\": \"fn(text: string)\",","        \"!url\": \"https://nodejs.org/api/console.html#console_console_info_data\",","        \"!doc\": \"Same as console.log.\"","      },","      error: {","        \"!type\": \"fn(text: string)\",","        \"!url\": \"https://nodejs.org/api/console.html#console_console_error_data\",","        \"!doc\": \"Same as console.log but prints to stderr.\"","      },","      warn: {","        \"!type\": \"fn(text: string)\",","        \"!url\": \"https://nodejs.org/api/console.html#console_console_warn_data\",","        \"!doc\": \"Same as console.error.\"","      },","      dir: {","        \"!type\": \"fn(obj: ?)\",","        \"!url\": \"https://nodejs.org/api/console.html#console_console_dir_obj_options\",","        \"!doc\": \"Uses util.inspect on obj and prints resulting string to stdout.\"","      },","      time: {","        \"!type\": \"fn(label: string)\",","        \"!url\": \"https://nodejs.org/api/console.html#console_console_time_label\",","        \"!doc\": \"Mark a time.\"","      },","      timeEnd: {","        \"!type\": \"fn(label: string)\",","        \"!url\": \"https://nodejs.org/api/console.html#console_console_timeend_label\",","        \"!doc\": \"Finish timer, record output.\"","      },","      trace: {","        \"!type\": \"fn(label: string)\",","        \"!url\": \"https://nodejs.org/api/console.html#console_console_trace_message\",","        \"!doc\": \"Print a stack trace to stderr of the current position.\"","      },","      assert: {","        \"!type\": \"fn(expression: bool)\",","        \"!url\": \"https://nodejs.org/api/console.html#console_console_assert_value_message\",","        \"!doc\": \"Same as assert.ok() where if the expression evaluates as false throw an AssertionError with message.\"","      },","      \"!url\": \"https://nodejs.org/api/globals.html#globals_console\",","      \"!doc\": \"Used to print to stdout and stderr.\"","    },","    __filename: {","      \"!type\": \"string\",","      \"!url\": \"https://nodejs.org/api/globals.html#globals_filename\",","      \"!doc\": \"The filename of the code being executed. This is the resolved absolute path of this code file. For a main program this is not necessarily the same filename used in the command line. The value inside a module is the path to that module file.\"","    },","    __dirname: {","      \"!type\": \"string\",","      \"!url\": \"https://nodejs.org/api/globals.html#globals_dirname\",","      \"!doc\": \"The name of the directory that the currently executing script resides in.\"","    },","    clearImmediate: \"timers.clearImmediate\",","    clearInterval: \"timers.clearInterval\",","    clearTimeout: \"timers.clearTimeout\",","    setImmediate: \"timers.setImmediate\",","    setInterval: \"timers.setInterval\",","    setTimeout: \"timers.setTimeout\",","    Buffer: {","      \"!type\": \"fn(sizeOrSource: number|[number]|+ArrayBuffer|+Buffer|string, byteOffsetOrEncoding?: number|string, length?: number) -> +Buffer\",","      \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_buffer\",","      \"!doc\": \"The Buffer class is a global type for dealing with binary data directly. It can be constructed in a variety of ways.\",","      prototype: {","        length: {","          \"!type\": \"number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_length\",","          \"!doc\": \"Returns the amount of memory allocated for buf in bytes. Note that this does not necessarily reflect the amount of \\\"usable\\\" data within buf.\"","        },","        compare: {","          \"!type\": \"fn(target: +Buffer, targetStart?: number, targetEnd?: number, sourceStart?: number, sourceEnd?: number) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend\",","          \"!doc\": \"Compares buf with target and returns a number indicating whether buf comes before, after, or is the same as target in sort order. Comparison is based on the actual sequence of bytes in each Buffer.\"","        },","        copy: {","          \"!type\": \"fn(target: +Buffer, targetStart?: number, sourceStart?: number, sourceEnd?: number) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_copy_target_targetstart_sourcestart_sourceend\",","          \"!doc\": \"Copies data from a region of buf to a region in target even if the target memory region overlaps with buf.\"","        },","        entries: {","          \"!type\": \"fn() -> +iter[:t=[number, number]]\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_entries\",","          \"!doc\": \"Creates and returns an iterator of [index, byte] pairs from the contents of buf.\"","        },","        equals: {","          \"!type\": \"fn(otherBuffer: +Buffer) -> bool\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_equals_otherbuffer\",","          \"!doc\": \"Returns true if both buf and otherBuffer have exactly the same bytes, false otherwise.\"","        },","        fill: {","          \"!type\": \"fn(value: string|+Buffer|number, offset?: number, end?: number, encoding?: string) -> +Buffer\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_fill_value_offset_end_encoding\",","          \"!doc\": \"Fills buf with the specified value. If the offset and end are not given, the entire buf will be filled. This is meant to be a small simplification to allow the creation and filling of a Buffer to be done on a single line.\"","        },","        indexOf: {","          \"!type\": \"fn(value: string|+Buffer|number, byteOffset?: number, encoding?: string) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_indexof_value_byteoffset_encoding\",","          \"!doc\": \"If value is:\"","        },","        includes: {","          \"!type\": \"fn(value: string|+Buffer|number, byteOffset?: number, encoding?: string) -> bool\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_includes_value_byteoffset_encoding\",","          \"!doc\": \"Equivalent to buf.indexOf() !== -1.\"","        },","        keys: {","          \"!type\": \"fn() -> +iter[:t=number]\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_keys\",","          \"!doc\": \"Creates and returns an iterator of buf keys (indices).\"","        },","        lastIndexOf: {","          \"!type\": \"fn(value: string|+Buffer|number, byteOffset?: number, encoding?: string) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_lastindexof_value_byteoffset_encoding\",","          \"!doc\": \"Identical to buf.indexOf(), except buf is searched from back to front instead of front to back.\"","        },","        readDoubleBE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readdoublebe_offset_noassert\",","          \"!doc\": \"Reads a 64-bit double from buf at the specified offset with specified endian format (readDoubleBE() returns big endian, readDoubleLE() returns little endian).\"","        },","        readDoubleLE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readdoublele_offset_noassert\",","          \"!doc\": \"Reads a 64-bit double from buf at the specified offset with specified endian format (readDoubleBE() returns big endian, readDoubleLE() returns little endian).\"","        },","        readFloatBE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readfloatbe_offset_noassert\",","          \"!doc\": \"Reads a 32-bit float from buf at the specified offset with specified endian format (readFloatBE() returns big endian, readFloatLE() returns little endian).\"","        },","        readFloatLE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readfloatle_offset_noassert\",","          \"!doc\": \"Reads a 32-bit float from buf at the specified offset with specified endian format (readFloatBE() returns big endian, readFloatLE() returns little endian).\"","        },","        readInt8: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readint8_offset_noassert\",","          \"!doc\": \"Reads a signed 8-bit integer from buf at the specified offset.\"","        },","        readInt16BE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readint16be_offset_noassert\",","          \"!doc\": \"Reads a signed 16-bit integer from buf at the specified offset with the specified endian format (readInt16BE() returns big endian, readInt16LE() returns little endian).\"","        },","        readInt16LE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readint16le_offset_noassert\",","          \"!doc\": \"Reads a signed 16-bit integer from buf at the specified offset with the specified endian format (readInt16BE() returns big endian, readInt16LE() returns little endian).\"","        },","        readInt32BE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readint32be_offset_noassert\",","          \"!doc\": \"Reads a signed 32-bit integer from buf at the specified offset with the specified endian format (readInt32BE() returns big endian, readInt32LE() returns little endian).\"","        },","        readInt32LE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readint32le_offset_noassert\",","          \"!doc\": \"Reads a signed 32-bit integer from buf at the specified offset with the specified endian format (readInt32BE() returns big endian, readInt32LE() returns little endian).\"","        },","        readIntBE: {","          \"!type\": \"fn(offset: number, byteLength: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readintbe_offset_bytelength_noassert\",","          \"!doc\": \"Reads byteLength number of bytes from buf at the specified offset and interprets the result as a two's complement signed value. Supports up to 48 bits of accuracy.\"","        },","        readIntLE: {","          \"!type\": \"fn(offset: number, byteLength: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readintle_offset_bytelength_noassert\",","          \"!doc\": \"Reads byteLength number of bytes from buf at the specified offset and interprets the result as a two's complement signed value. Supports up to 48 bits of accuracy.\"","        },","        readUInt8: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readuint8_offset_noassert\",","          \"!doc\": \"Reads an unsigned 8-bit integer from buf at the specified offset.\"","        },","        readUInt16BE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readuint16be_offset_noassert\",","          \"!doc\": \"Reads an unsigned 16-bit integer from buf at the specified offset with specified endian format (readUInt16BE() returns big endian, readUInt16LE() returns little endian).\"","        },","        readUInt16LE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readuint16le_offset_noassert\",","          \"!doc\": \"Reads an unsigned 16-bit integer from buf at the specified offset with specified endian format (readUInt16BE() returns big endian, readUInt16LE() returns little endian).\"","        },","        readUInt32BE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readuint32be_offset_noassert\",","          \"!doc\": \"Reads an unsigned 32-bit integer from buf at the specified offset with specified endian format (readUInt32BE() returns big endian, readUInt32LE() returns little endian).\"","        },","        readUInt32LE: {","          \"!type\": \"fn(offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readuint32le_offset_noassert\",","          \"!doc\": \"Reads an unsigned 32-bit integer from buf at the specified offset with specified endian format (readUInt32BE() returns big endian, readUInt32LE() returns little endian).\"","        },","        readUIntBE: {","          \"!type\": \"fn(offset: number, byteLength: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readuintbe_offset_bytelength_noassert\",","          \"!doc\": \"Reads byteLength number of bytes from buf at the specified offset and interprets the result as an unsigned integer. Supports up to 48 bits of accuracy.\"","        },","        readUIntLE: {","          \"!type\": \"fn(offset: number, byteLength: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_readuintle_offset_bytelength_noassert\",","          \"!doc\": \"Reads byteLength number of bytes from buf at the specified offset and interprets the result as an unsigned integer. Supports up to 48 bits of accuracy.\"","        },","        slice: {","          \"!type\": \"fn(start?: number, end?: number) -> +Buffer\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_slice_start_end\",","          \"!doc\": \"Returns a new Buffer that references the same memory as the original, but offset and cropped by the start and end indices.\"","        },","        swap16: {","          \"!type\": \"fn() -> +Buffer\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_swap16\",","          \"!doc\": \"Interprets buf as an array of unsigned 16-bit integers and swaps the byte-order in-place. Throws a RangeError if buf.length is not a multiple of 2.\"","        },","        swap32: {","          \"!type\": \"fn() -> +Buffer\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_swap32\",","          \"!doc\": \"Interprets buf as an array of unsigned 32-bit integers and swaps the byte-order in-place. Throws a RangeError if buf.length is not a multiple of 4.\"","        },","        swap64: {","          \"!type\": \"fn() -> +Buffer\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_swap64\",","          \"!doc\": \"Interprets buf as an array of 64-bit numbers and swaps the byte-order in-place. Throws a RangeError if buf.length is not a multiple of 8.\"","        },","        toString: {","          \"!type\": \"fn(encoding?: string, start?: number, end?: number) -> string\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_tostring_encoding_start_end\",","          \"!doc\": \"Decodes buf to a string according to the specified character encoding in encoding. start and end may be passed to decode only a subset of buf.\"","        },","        toJSON: {","          \"!type\": \"fn()\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_tojson\",","          \"!doc\": \"Returns a JSON representation of buf. JSON.stringify() implicitly calls this function when stringifying a Buffer instance.\"","        },","        values: {","          \"!type\": \"fn() -> +iter[:t=number]\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_values\",","          \"!doc\": \"Creates and returns an iterator for buf values (bytes). This function is called automatically when a Buffer is used in a for..of statement.\"","        },","        write: {","          \"!type\": \"fn(string: string, offset?: number, length?: number, encoding?: string) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_write_string_offset_length_encoding\",","          \"!doc\": \"Writes string to buf at offset according to the character encoding in encoding. The length parameter is the number of bytes to write. If buf did not contain enough space to fit the entire string, only a partial amount of string will be written. However, partially encoded characters will not be written.\"","        },","        writeDoubleBE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writedoublebe_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeDoubleBE() writes big endian, writeDoubleLE() writes little endian). value should be a valid 64-bit double. Behavior is undefined when value is anything other than a 64-bit double.\"","        },","        writeDoubleLE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writedoublele_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeDoubleBE() writes big endian, writeDoubleLE() writes little endian). value should be a valid 64-bit double. Behavior is undefined when value is anything other than a 64-bit double.\"","        },","        writeFloatBE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writefloatbe_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeFloatBE() writes big endian, writeFloatLE() writes little endian). value should be a valid 32-bit float. Behavior is undefined when value is anything other than a 32-bit float.\"","        },","        writeFloatLE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writefloatle_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeFloatBE() writes big endian, writeFloatLE() writes little endian). value should be a valid 32-bit float. Behavior is undefined when value is anything other than a 32-bit float.\"","        },","        writeInt8: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeint8_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset. value should be a valid signed 8-bit integer. Behavior is undefined when value is anything other than a signed 8-bit integer.\"","        },","        writeInt16BE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeint16be_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeInt16BE() writes big endian, writeInt16LE() writes little endian). value should be a valid signed 16-bit integer. Behavior is undefined when value is anything other than a signed 16-bit integer.\"","        },","        writeInt16LE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeint16le_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeInt16BE() writes big endian, writeInt16LE() writes little endian). value should be a valid signed 16-bit integer. Behavior is undefined when value is anything other than a signed 16-bit integer.\"","        },","        writeInt32BE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeint32be_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeInt32BE() writes big endian, writeInt32LE() writes little endian). value should be a valid signed 32-bit integer. Behavior is undefined when value is anything other than a signed 32-bit integer.\"","        },","        writeInt32LE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeint32le_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeInt32BE() writes big endian, writeInt32LE() writes little endian). value should be a valid signed 32-bit integer. Behavior is undefined when value is anything other than a signed 32-bit integer.\"","        },","        writeIntBE: {","          \"!type\": \"fn(value: number, offset: number, byteLength: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeintbe_value_offset_bytelength_noassert\",","          \"!doc\": \"Writes byteLength bytes of value to buf at the specified offset. Supports up to 48 bits of accuracy. Behavior is undefined when value is anything other than a signed integer.\"","        },","        writeIntLE: {","          \"!type\": \"fn(value: number, offset: number, byteLength: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeintle_value_offset_bytelength_noassert\",","          \"!doc\": \"Writes byteLength bytes of value to buf at the specified offset. Supports up to 48 bits of accuracy. Behavior is undefined when value is anything other than a signed integer.\"","        },","        writeUInt8: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeuint8_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset. value should be a valid unsigned 8-bit integer. Behavior is undefined when value is anything other than an unsigned 8-bit integer.\"","        },","        writeUInt16BE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeuint16be_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeUInt16BE() writes big endian, writeUInt16LE() writes little endian). value should be a valid unsigned 16-bit integer. Behavior is undefined when value is anything other than an unsigned 16-bit integer.\"","        },","        writeUInt16LE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeuint16le_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeUInt16BE() writes big endian, writeUInt16LE() writes little endian). value should be a valid unsigned 16-bit integer. Behavior is undefined when value is anything other than an unsigned 16-bit integer.\"","        },","        writeUInt32BE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeuint32be_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeUInt32BE() writes big endian, writeUInt32LE() writes little endian). value should be a valid unsigned 32-bit integer. Behavior is undefined when value is anything other than an unsigned 32-bit integer.\"","        },","        writeUInt32LE: {","          \"!type\": \"fn(value: number, offset: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeuint32le_value_offset_noassert\",","          \"!doc\": \"Writes value to buf at the specified offset with specified endian format (writeUInt32BE() writes big endian, writeUInt32LE() writes little endian). value should be a valid unsigned 32-bit integer. Behavior is undefined when value is anything other than an unsigned 32-bit integer.\"","        },","        writeUIntBE: {","          \"!type\": \"fn(value: number, offset: number, byteLength: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeuintbe_value_offset_bytelength_noassert\",","          \"!doc\": \"Writes byteLength bytes of value to buf at the specified offset. Supports up to 48 bits of accuracy. Behavior is undefined when value is anything other than an unsigned integer.\"","        },","        writeUIntLE: {","          \"!type\": \"fn(value: number, offset: number, byteLength: number, noAssert?: bool) -> number\",","          \"!url\": \"https://nodejs.org/api/buffer.html#buffer_buf_writeuintle_value_offset_bytelength_noassert\",","          \"!doc\": \"Writes byteLength bytes of value to buf at the specified offset. Supports up to 48 bits of accuracy. Behavior is undefined when value is anything other than an unsigned integer.\"","        },","        \"!proto\": \"Uint8Array.prototype\"","      },","      alloc: {","        \"!type\": \"fn(size: number, fill?: string|+Buffer|number, encoding?: string)\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_alloc_size_fill_encoding\",","        \"!doc\": \"Allocates a new Buffer of size bytes. If fill is undefined, the Buffer will be zero-filled.\"","      },","      allocUnsafe: {","        \"!type\": \"fn(size: number)\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_allocunsafe_size\",","        \"!doc\": \"Allocates a new non-zero-filled Buffer of size bytes. The size must be less than or equal to the value of buffer.kMaxLength. Otherwise, a RangeError is thrown. A zero-length Buffer will be created if size <= 0.\"","      },","      allocUnsafeSlow: {","        \"!type\": \"fn(size: number)\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_allocunsafeslow_size\",","        \"!doc\": \"Allocates a new non-zero-filled and non-pooled Buffer of size bytes. The size must be less than or equal to the value of buffer.kMaxLength. Otherwise, a RangeError is thrown. A zero-length Buffer will be created if size <= 0.\"","      },","      byteLength: {","        \"!type\": \"fn(string: ?, encoding?: string) -> number\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_bytelength_string_encoding\",","        \"!doc\": \"Returns the actual byte length of a string. This is not the same as String.prototype.length since that returns the number of characters in a string.\"","      },","      compare: {","        \"!type\": \"fn(buf1: +Buffer, buf2: +Buffer) -> number\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_compare_buf1_buf2\",","        \"!doc\": \"Compares buf1 to buf2 typically for the purpose of sorting arrays of Buffer instances. This is equivalent to calling buf1.compare(buf2).\"","      },","      concat: {","        \"!type\": \"fn(list: ?, totalLength?: number) -> +Buffer\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_concat_list_totallength\",","        \"!doc\": \"Returns a new Buffer which is the result of concatenating all the Buffer instances in the list together.\"","      },","      from: {","        \"!type\": \"fn(source: [number]|+ArrayBuffer|+Buffer|string, byteOffsetOrEncoding?: number|string, length?: number) -> +Buffer\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_string_encoding\",","        \"!doc\": \"Creates a new Buffer from existing array, ArrayBuffer, Buffer, or string.\"","      },","      isBuffer: {","        \"!type\": \"fn(obj: ?) -> bool\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_isbuffer_obj\",","        \"!doc\": \"Returns true if obj is a Buffer, false otherwise.\"","      },","      isEncoding: {","        \"!type\": \"fn(encoding: string) -> bool\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_isencoding_encoding\",","        \"!doc\": \"Returns true if encoding contains a supported character encoding, or false otherwise.\"","      },","      poolSize: {","        \"!type\": \"number\",","        \"!url\": \"https://nodejs.org/api/buffer.html#buffer_class_property_buffer_poolsize\",","        \"!doc\": \"This is the number of bytes used to determine the size of pre-allocated, internal Buffer instances used for pooling. This value may be modified.\"","      }","    }","  };","});",""],"l":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/node_resolve.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/node_resolve.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":15}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":37}}},"3":{"name":"resolve","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":37}}},"4":{"name":"findDeclaredDeps","line":15,"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":30}}},"5":{"name":"(anonymous_5)","line":18,"loc":{"start":{"line":18,"column":16},"end":{"line":18,"column":27}}},"6":{"name":"(anonymous_6)","line":21,"loc":{"start":{"line":21,"column":20},"end":{"line":21,"column":47}}},"7":{"name":"findPackageFile","line":39,"loc":{"start":{"line":39,"column":4},"end":{"line":39,"column":34}}},"8":{"name":"(anonymous_8)","line":50,"loc":{"start":{"line":50,"column":23},"end":{"line":50,"column":52}}},"9":{"name":"add","line":54,"loc":{"start":{"line":54,"column":6},"end":{"line":54,"column":24}}},"10":{"name":"(anonymous_10)","line":62,"loc":{"start":{"line":62,"column":14},"end":{"line":62,"column":25}}},"11":{"name":"resolvePath","line":63,"loc":{"start":{"line":63,"column":4},"end":{"line":63,"column":37}}},"12":{"name":"(anonymous_12)","line":72,"loc":{"start":{"line":72,"column":20},"end":{"line":72,"column":47}}},"13":{"name":"(anonymous_13)","line":77,"loc":{"start":{"line":77,"column":38},"end":{"line":77,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":82,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":3,"column":95}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":95}},"4":{"start":{"line":4,"column":2},"end":{"line":5,"column":69}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":69}},"6":{"start":{"line":6,"column":2},"end":{"line":6,"column":17}},"7":{"start":{"line":10,"column":2},"end":{"line":13,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":50}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":68}},"10":{"start":{"line":15,"column":2},"end":{"line":15,"column":32}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":19}},"12":{"start":{"line":18,"column":2},"end":{"line":75,"column":6}},"13":{"start":{"line":18,"column":15},"end":{"line":62,"column":7}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":79}},"15":{"start":{"line":21,"column":4},"end":{"line":37,"column":5}},"16":{"start":{"line":22,"column":6},"end":{"line":22,"column":51}},"17":{"start":{"line":23,"column":6},"end":{"line":23,"column":59}},"18":{"start":{"line":24,"column":6},"end":{"line":24,"column":46}},"19":{"start":{"line":25,"column":6},"end":{"line":26,"column":56}},"20":{"start":{"line":26,"column":8},"end":{"line":26,"column":56}},"21":{"start":{"line":28,"column":6},"end":{"line":31,"column":7}},"22":{"start":{"line":32,"column":6},"end":{"line":36,"column":7}},"23":{"start":{"line":33,"column":8},"end":{"line":33,"column":59}},"24":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"25":{"start":{"line":39,"column":4},"end":{"line":48,"column":5}},"26":{"start":{"line":40,"column":6},"end":{"line":47,"column":7}},"27":{"start":{"line":41,"column":8},"end":{"line":43,"column":21}},"28":{"start":{"line":42,"column":10},"end":{"line":42,"column":79}},"29":{"start":{"line":44,"column":8},"end":{"line":44,"column":39}},"30":{"start":{"line":45,"column":8},"end":{"line":45,"column":39}},"31":{"start":{"line":45,"column":28},"end":{"line":45,"column":39}},"32":{"start":{"line":46,"column":8},"end":{"line":46,"column":21}},"33":{"start":{"line":50,"column":4},"end":{"line":60,"column":5}},"34":{"start":{"line":51,"column":6},"end":{"line":51,"column":45}},"35":{"start":{"line":52,"column":6},"end":{"line":52,"column":35}},"36":{"start":{"line":52,"column":24},"end":{"line":52,"column":35}},"37":{"start":{"line":54,"column":6},"end":{"line":56,"column":7}},"38":{"start":{"line":55,"column":8},"end":{"line":55,"column":84}},"39":{"start":{"line":55,"column":30},"end":{"line":55,"column":84}},"40":{"start":{"line":55,"column":59},"end":{"line":55,"column":84}},"41":{"start":{"line":57,"column":6},"end":{"line":57,"column":35}},"42":{"start":{"line":58,"column":6},"end":{"line":58,"column":38}},"43":{"start":{"line":59,"column":6},"end":{"line":59,"column":39}},"44":{"start":{"line":62,"column":13},"end":{"line":75,"column":6}},"45":{"start":{"line":63,"column":4},"end":{"line":70,"column":5}},"46":{"start":{"line":64,"column":6},"end":{"line":64,"column":38}},"47":{"start":{"line":64,"column":26},"end":{"line":64,"column":38}},"48":{"start":{"line":65,"column":6},"end":{"line":65,"column":43}},"49":{"start":{"line":66,"column":6},"end":{"line":66,"column":61}},"50":{"start":{"line":66,"column":22},"end":{"line":66,"column":61}},"51":{"start":{"line":67,"column":6},"end":{"line":68,"column":74}},"52":{"start":{"line":68,"column":8},"end":{"line":68,"column":74}},"53":{"start":{"line":69,"column":6},"end":{"line":69,"column":50}},"54":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"55":{"start":{"line":73,"column":6},"end":{"line":73,"column":73}},"56":{"start":{"line":77,"column":2},"end":{"line":81,"column":4}},"57":{"start":{"line":78,"column":4},"end":{"line":78,"column":33}},"58":{"start":{"line":79,"column":4},"end":{"line":79,"column":46}},"59":{"start":{"line":80,"column":4},"end":{"line":80,"column":72}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":61}}]},"3":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":6},"end":{"line":4,"column":33}},{"start":{"line":4,"column":37},"end":{"line":4,"column":47}}]},"5":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":11},"end":{"line":12,"column":19}},{"start":{"line":12,"column":23},"end":{"line":12,"column":68}}]},"6":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"7":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":6}},{"start":{"line":25,"column":6},"end":{"line":25,"column":6}}]},"8":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"9":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":6}},{"start":{"line":52,"column":6},"end":{"line":52,"column":6}}]},"10":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":30},"end":{"line":55,"column":30}},{"start":{"line":55,"column":30},"end":{"line":55,"column":30}}]},"11":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":6}},{"start":{"line":64,"column":6},"end":{"line":64,"column":6}}]},"12":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":6},"end":{"line":66,"column":6}},{"start":{"line":66,"column":6},"end":{"line":66,"column":6}}]},"13":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":37},"end":{"line":73,"column":66}},{"start":{"line":73,"column":69},"end":{"line":73,"column":73}}]}},"code":["(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(require(\"../lib/infer\"), require(\"../lib/tern\"), require(\"./commonjs\"), require)","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"../lib/infer\", \"../lib/tern\", \"./commonjs\"], mod)","  mod(tern, tern)","})(function(infer, tern, _, require) {","  \"use strict\"","","  function resolve(name, parentFile) {","    var resolved = resolveToFile(name, parentFile)","    return resolved && infer.cx().parent.normalizeFilename(resolved)","  }","","  function findDeclaredDeps() {}","","  var resolveToFile","  if (require) (function() {","    var module_ = require(\"module\"), path = require(\"path\"), fs = require(\"fs\")","","    resolveToFile = function(name, parentFile) {","      var projectDir = infer.cx().parent.projectDir","      var fullParent = path.resolve(projectDir, parentFile)","      var parentDir = path.dirname(fullParent)","      if (/^\\.\\.?\\//.test(name))","        name = path.resolve(projectDir, parentDir, name)","","      var parentModule = {","        id: fullParent,","        paths: module_._nodeModulePaths(parentDir).concat(module_.globalPaths)","      }","      try {","        return module_._resolveFilename(name, parentModule)","      } catch(e) {","        return null","      }","    }","","    function findPackageFile(dir) {","      for (;;) {","        try {","          return JSON.parse(fs.readFileSync(path.resolve(dir, \"package.json\")))","        } catch(e) {}","        var shorter = path.dirname(dir)","        if (shorter == dir) return null","        dir = shorter","      }","    }","","    findDeclaredDeps = function(path, knownModules) {","      var packageFile = findPackageFile(path)","      if (!packageFile) return null","","      function add(obj) {","        for (var name in obj) if (!(name in knownModules)) knownModules[name] = null","      }","      add(packageFile.dependencies)","      add(packageFile.devDependencies)","      add(packageFile.peerDependencies)","    }","","  })(); else (function() {","    function resolvePath(base, path) {","      if (path[0] == \"/\") return path;","      var slash = base.lastIndexOf(\"/\"), m;","      if (slash >= 0) path = base.slice(0, slash + 1) + path;","      while (m = /[^\\/]*[^\\/\\.][^\\/]*\\/\\.\\.\\//.exec(path))","        path = path.slice(0, m.index) + path.slice(m.index + m[0].length);","      return path.replace(/(^|[^\\.])\\.\\//g, \"$1\");","    }","","    resolveToFile = function(name, parentFile) {","      return /^\\.\\.?\\//.test(name) ? resolvePath(parentFile, name) : name","    }","  })()","","  tern.registerPlugin(\"node_resolve\", function(server) {","    server.loadPlugin(\"commonjs\")","    server.mod.modules.resolvers.push(resolve)","    findDeclaredDeps(server.projectDir, server.mod.modules.knownModules)","  })","})",""],"l":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"10":1,"11":0,"12":0,"15":1,"17":1,"18":1,"19":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"28":0,"32":0,"33":0,"35":0,"39":1,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"50":1,"51":0,"52":0,"54":1,"55":0,"57":0,"58":0,"59":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"72":0,"73":0,"77":1,"78":0,"79":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/requirejs.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/requirejs.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":1,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0,0,0],"85":[0,0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0,0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0],"105":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":15}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":25}}},"3":{"name":"flattenPath","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":29}}},"4":{"name":"resolveName","line":20,"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":35}}},"5":{"name":"getRequire","line":43,"loc":{"start":{"line":43,"column":2},"end":{"line":43,"column":28}}},"6":{"name":"(anonymous_6)","line":46,"loc":{"start":{"line":46,"column":32},"end":{"line":46,"column":65}}},"7":{"name":"getModuleInterface","line":55,"loc":{"start":{"line":55,"column":2},"end":{"line":55,"column":45}}},"8":{"name":"getExports","line":63,"loc":{"start":{"line":63,"column":2},"end":{"line":63,"column":28}}},"9":{"name":"getInterface","line":69,"loc":{"start":{"line":69,"column":2},"end":{"line":69,"column":36}}},"10":{"name":"getKnownModule","line":96,"loc":{"start":{"line":96,"column":2},"end":{"line":96,"column":38}}},"11":{"name":"getModule","line":100,"loc":{"start":{"line":100,"column":2},"end":{"line":100,"column":33}}},"12":{"name":"stripJSExt","line":111,"loc":{"start":{"line":111,"column":2},"end":{"line":111,"column":25}}},"13":{"name":"(anonymous_13)","line":116,"loc":{"start":{"line":116,"column":13},"end":{"line":116,"column":28}}},"14":{"name":"(anonymous_14)","line":120,"loc":{"start":{"line":120,"column":14},"end":{"line":120,"column":33}}},"15":{"name":"(anonymous_15)","line":124,"loc":{"start":{"line":124,"column":10},"end":{"line":124,"column":25}}},"16":{"name":"runModule","line":131,"loc":{"start":{"line":131,"column":2},"end":{"line":131,"column":50}}},"17":{"name":"interf","line":135,"loc":{"start":{"line":135,"column":4},"end":{"line":135,"column":26}}},"18":{"name":"(anonymous_18)","line":178,"loc":{"start":{"line":178,"column":45},"end":{"line":178,"column":77}}},"19":{"name":"(anonymous_19)","line":185,"loc":{"start":{"line":185,"column":46},"end":{"line":185,"column":78}}},"20":{"name":"parseExprNode","line":191,"loc":{"start":{"line":191,"column":2},"end":{"line":191,"column":31}}},"21":{"name":"(anonymous_21)","line":199,"loc":{"start":{"line":199,"column":30},"end":{"line":199,"column":45}}},"22":{"name":"(anonymous_22)","line":207,"loc":{"start":{"line":207,"column":45},"end":{"line":207,"column":78}}},"23":{"name":"preCondenseReach","line":224,"loc":{"start":{"line":224,"column":2},"end":{"line":224,"column":35}}},"24":{"name":"postLoadDef","line":234,"loc":{"start":{"line":234,"column":2},"end":{"line":234,"column":29}}},"25":{"name":"(anonymous_25)","line":242,"loc":{"start":{"line":242,"column":35},"end":{"line":242,"column":61}}},"26":{"name":"(anonymous_26)","line":250,"loc":{"start":{"line":250,"column":28},"end":{"line":250,"column":43}}},"27":{"name":"(anonymous_27)","line":253,"loc":{"start":{"line":253,"column":23},"end":{"line":253,"column":34}}},"28":{"name":"findTypeAt","line":266,"loc":{"start":{"line":266,"column":2},"end":{"line":266,"column":47}}},"29":{"name":"findCompletions","line":285,"loc":{"start":{"line":285,"column":2},"end":{"line":285,"column":40}}},"30":{"name":"(anonymous_30)","line":306,"loc":{"start":{"line":306,"column":35},"end":{"line":306,"column":49}}},"31":{"name":"findRequireModule","line":318,"loc":{"start":{"line":318,"column":2},"end":{"line":318,"column":48}}},"32":{"name":"completeModuleName","line":326,"loc":{"start":{"line":326,"column":2},"end":{"line":326,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":476,"column":3}},"2":{"start":{"line":2,"column":2},"end":{"line":3,"column":64}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":64}},"4":{"start":{"line":4,"column":2},"end":{"line":5,"column":56}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":56}},"6":{"start":{"line":6,"column":2},"end":{"line":6,"column":18}},"7":{"start":{"line":10,"column":2},"end":{"line":18,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":63}},"9":{"start":{"line":11,"column":51},"end":{"line":11,"column":63}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":32}},"11":{"start":{"line":13,"column":4},"end":{"line":16,"column":5}},"12":{"start":{"line":14,"column":6},"end":{"line":15,"column":73}},"13":{"start":{"line":14,"column":40},"end":{"line":14,"column":61}},"14":{"start":{"line":15,"column":11},"end":{"line":15,"column":73}},"15":{"start":{"line":15,"column":40},"end":{"line":15,"column":63}},"16":{"start":{"line":15,"column":64},"end":{"line":15,"column":71}},"17":{"start":{"line":17,"column":4},"end":{"line":17,"column":27}},"18":{"start":{"line":20,"column":2},"end":{"line":41,"column":3}},"19":{"start":{"line":21,"column":4},"end":{"line":21,"column":33}},"20":{"start":{"line":22,"column":4},"end":{"line":22,"column":46}},"21":{"start":{"line":22,"column":19},"end":{"line":22,"column":46}},"22":{"start":{"line":24,"column":4},"end":{"line":24,"column":28}},"23":{"start":{"line":25,"column":4},"end":{"line":25,"column":36}},"24":{"start":{"line":26,"column":4},"end":{"line":27,"column":42}},"25":{"start":{"line":27,"column":6},"end":{"line":27,"column":42}},"26":{"start":{"line":29,"column":4},"end":{"line":29,"column":34}},"27":{"start":{"line":30,"column":4},"end":{"line":30,"column":65}},"28":{"start":{"line":30,"column":53},"end":{"line":30,"column":65}},"29":{"start":{"line":31,"column":4},"end":{"line":39,"column":5}},"30":{"start":{"line":32,"column":6},"end":{"line":32,"column":35}},"31":{"start":{"line":33,"column":6},"end":{"line":33,"column":58}},"32":{"start":{"line":33,"column":17},"end":{"line":33,"column":58}},"33":{"start":{"line":34,"column":6},"end":{"line":34,"column":47}},"34":{"start":{"line":35,"column":6},"end":{"line":38,"column":7}},"35":{"start":{"line":36,"column":8},"end":{"line":36,"column":39}},"36":{"start":{"line":37,"column":8},"end":{"line":37,"column":69}},"37":{"start":{"line":37,"column":19},"end":{"line":37,"column":69}},"38":{"start":{"line":40,"column":4},"end":{"line":40,"column":44}},"39":{"start":{"line":43,"column":2},"end":{"line":53,"column":3}},"40":{"start":{"line":44,"column":4},"end":{"line":51,"column":5}},"41":{"start":{"line":45,"column":6},"end":{"line":45,"column":104}},"42":{"start":{"line":46,"column":6},"end":{"line":50,"column":8}},"43":{"start":{"line":47,"column":8},"end":{"line":48,"column":98}},"44":{"start":{"line":48,"column":10},"end":{"line":48,"column":98}},"45":{"start":{"line":49,"column":8},"end":{"line":49,"column":27}},"46":{"start":{"line":52,"column":4},"end":{"line":52,"column":24}},"47":{"start":{"line":55,"column":2},"end":{"line":61,"column":3}},"48":{"start":{"line":56,"column":4},"end":{"line":56,"column":79}},"49":{"start":{"line":57,"column":4},"end":{"line":57,"column":41}},"50":{"start":{"line":58,"column":4},"end":{"line":58,"column":57}},"51":{"start":{"line":59,"column":4},"end":{"line":59,"column":50}},"52":{"start":{"line":60,"column":4},"end":{"line":60,"column":15}},"53":{"start":{"line":63,"column":2},"end":{"line":67,"column":3}},"54":{"start":{"line":64,"column":4},"end":{"line":64,"column":49}},"55":{"start":{"line":65,"column":4},"end":{"line":65,"column":74}},"56":{"start":{"line":66,"column":4},"end":{"line":66,"column":19}},"57":{"start":{"line":69,"column":2},"end":{"line":94,"column":3}},"58":{"start":{"line":70,"column":4},"end":{"line":81,"column":5}},"59":{"start":{"line":71,"column":6},"end":{"line":71,"column":45}},"60":{"start":{"line":72,"column":6},"end":{"line":72,"column":102}},"61":{"start":{"line":72,"column":60},"end":{"line":72,"column":102}},"62":{"start":{"line":73,"column":6},"end":{"line":79,"column":7}},"63":{"start":{"line":74,"column":8},"end":{"line":74,"column":47}},"64":{"start":{"line":75,"column":8},"end":{"line":75,"column":32}},"65":{"start":{"line":75,"column":19},"end":{"line":75,"column":32}},"66":{"start":{"line":76,"column":8},"end":{"line":76,"column":94}},"67":{"start":{"line":77,"column":8},"end":{"line":77,"column":36}},"68":{"start":{"line":78,"column":8},"end":{"line":78,"column":21}},"69":{"start":{"line":80,"column":6},"end":{"line":80,"column":18}},"70":{"start":{"line":83,"column":4},"end":{"line":84,"column":37}},"71":{"start":{"line":84,"column":6},"end":{"line":84,"column":37}},"72":{"start":{"line":85,"column":4},"end":{"line":85,"column":29}},"73":{"start":{"line":87,"column":4},"end":{"line":87,"column":43}},"74":{"start":{"line":89,"column":4},"end":{"line":92,"column":5}},"75":{"start":{"line":90,"column":6},"end":{"line":90,"column":36}},"76":{"start":{"line":91,"column":6},"end":{"line":91,"column":56}},"77":{"start":{"line":93,"column":4},"end":{"line":93,"column":17}},"78":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"79":{"start":{"line":97,"column":4},"end":{"line":97,"column":45}},"80":{"start":{"line":100,"column":2},"end":{"line":107,"column":3}},"81":{"start":{"line":101,"column":4},"end":{"line":101,"column":43}},"82":{"start":{"line":102,"column":4},"end":{"line":105,"column":5}},"83":{"start":{"line":103,"column":6},"end":{"line":103,"column":65}},"84":{"start":{"line":104,"column":6},"end":{"line":104,"column":26}},"85":{"start":{"line":106,"column":4},"end":{"line":106,"column":17}},"86":{"start":{"line":109,"column":2},"end":{"line":109,"column":29}},"87":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"88":{"start":{"line":112,"column":4},"end":{"line":112,"column":34}},"89":{"start":{"line":115,"column":2},"end":{"line":129,"column":4}},"90":{"start":{"line":117,"column":6},"end":{"line":117,"column":42}},"91":{"start":{"line":118,"column":6},"end":{"line":118,"column":57}},"92":{"start":{"line":121,"column":6},"end":{"line":122,"column":21}},"93":{"start":{"line":121,"column":33},"end":{"line":121,"column":62}},"94":{"start":{"line":122,"column":11},"end":{"line":122,"column":21}},"95":{"start":{"line":125,"column":6},"end":{"line":125,"column":44}},"96":{"start":{"line":125,"column":35},"end":{"line":125,"column":44}},"97":{"start":{"line":126,"column":6},"end":{"line":127,"column":40}},"98":{"start":{"line":126,"column":18},"end":{"line":126,"column":37}},"99":{"start":{"line":127,"column":11},"end":{"line":127,"column":40}},"100":{"start":{"line":131,"column":2},"end":{"line":176,"column":3}},"101":{"start":{"line":132,"column":4},"end":{"line":132,"column":36}},"102":{"start":{"line":133,"column":4},"end":{"line":133,"column":36}},"103":{"start":{"line":135,"column":4},"end":{"line":140,"column":5}},"104":{"start":{"line":136,"column":6},"end":{"line":136,"column":53}},"105":{"start":{"line":136,"column":29},"end":{"line":136,"column":53}},"106":{"start":{"line":137,"column":6},"end":{"line":137,"column":76}},"107":{"start":{"line":137,"column":29},"end":{"line":137,"column":76}},"108":{"start":{"line":138,"column":6},"end":{"line":138,"column":116}},"109":{"start":{"line":138,"column":28},"end":{"line":138,"column":116}},"110":{"start":{"line":139,"column":6},"end":{"line":139,"column":38}},"111":{"start":{"line":142,"column":4},"end":{"line":161,"column":5}},"112":{"start":{"line":143,"column":6},"end":{"line":143,"column":52}},"113":{"start":{"line":144,"column":6},"end":{"line":144,"column":86}},"114":{"start":{"line":145,"column":6},"end":{"line":154,"column":7}},"115":{"start":{"line":146,"column":8},"end":{"line":146,"column":66}},"116":{"start":{"line":147,"column":8},"end":{"line":147,"column":33}},"117":{"start":{"line":148,"column":13},"end":{"line":154,"column":7}},"118":{"start":{"line":148,"column":49},"end":{"line":154,"column":7}},"119":{"start":{"line":149,"column":8},"end":{"line":149,"column":35}},"120":{"start":{"line":150,"column":8},"end":{"line":153,"column":9}},"121":{"start":{"line":151,"column":10},"end":{"line":151,"column":66}},"122":{"start":{"line":152,"column":10},"end":{"line":152,"column":34}},"123":{"start":{"line":155,"column":11},"end":{"line":161,"column":5}},"124":{"start":{"line":159,"column":6},"end":{"line":159,"column":90}},"125":{"start":{"line":160,"column":6},"end":{"line":160,"column":19}},"126":{"start":{"line":163,"column":4},"end":{"line":166,"column":5}},"127":{"start":{"line":164,"column":6},"end":{"line":164,"column":46}},"128":{"start":{"line":165,"column":6},"end":{"line":165,"column":60}},"129":{"start":{"line":165,"column":50},"end":{"line":165,"column":60}},"130":{"start":{"line":168,"column":4},"end":{"line":173,"column":5}},"131":{"start":{"line":169,"column":6},"end":{"line":169,"column":84}},"132":{"start":{"line":170,"column":6},"end":{"line":170,"column":46}},"133":{"start":{"line":170,"column":15},"end":{"line":170,"column":46}},"134":{"start":{"line":171,"column":11},"end":{"line":173,"column":5}},"135":{"start":{"line":172,"column":6},"end":{"line":172,"column":28}},"136":{"start":{"line":175,"column":4},"end":{"line":175,"column":23}},"137":{"start":{"line":178,"column":2},"end":{"line":183,"column":5}},"138":{"start":{"line":179,"column":4},"end":{"line":179,"column":40}},"139":{"start":{"line":179,"column":22},"end":{"line":179,"column":40}},"140":{"start":{"line":181,"column":4},"end":{"line":181,"column":63}},"141":{"start":{"line":182,"column":4},"end":{"line":182,"column":79}},"142":{"start":{"line":185,"column":2},"end":{"line":188,"column":5}},"143":{"start":{"line":186,"column":4},"end":{"line":186,"column":40}},"144":{"start":{"line":186,"column":22},"end":{"line":186,"column":40}},"145":{"start":{"line":187,"column":4},"end":{"line":187,"column":55}},"146":{"start":{"line":191,"column":2},"end":{"line":205,"column":3}},"147":{"start":{"line":192,"column":4},"end":{"line":204,"column":5}},"148":{"start":{"line":194,"column":6},"end":{"line":194,"column":46}},"149":{"start":{"line":196,"column":6},"end":{"line":196,"column":24}},"150":{"start":{"line":198,"column":6},"end":{"line":198,"column":19}},"151":{"start":{"line":199,"column":6},"end":{"line":202,"column":9}},"152":{"start":{"line":200,"column":8},"end":{"line":200,"column":50}},"153":{"start":{"line":201,"column":8},"end":{"line":201,"column":45}},"154":{"start":{"line":203,"column":6},"end":{"line":203,"column":17}},"155":{"start":{"line":207,"column":2},"end":{"line":222,"column":5}},"156":{"start":{"line":208,"column":4},"end":{"line":208,"column":74}},"157":{"start":{"line":209,"column":4},"end":{"line":220,"column":5}},"158":{"start":{"line":210,"column":6},"end":{"line":210,"column":46}},"159":{"start":{"line":211,"column":6},"end":{"line":219,"column":7}},"160":{"start":{"line":211,"column":30},"end":{"line":219,"column":7}},"161":{"start":{"line":212,"column":8},"end":{"line":212,"column":60}},"162":{"start":{"line":213,"column":8},"end":{"line":218,"column":9}},"163":{"start":{"line":214,"column":10},"end":{"line":214,"column":36}},"164":{"start":{"line":215,"column":15},"end":{"line":218,"column":9}},"165":{"start":{"line":216,"column":10},"end":{"line":217,"column":51}},"166":{"start":{"line":216,"column":34},"end":{"line":217,"column":51}},"167":{"start":{"line":217,"column":12},"end":{"line":217,"column":51}},"168":{"start":{"line":221,"column":4},"end":{"line":221,"column":23}},"169":{"start":{"line":224,"column":2},"end":{"line":232,"column":3}},"170":{"start":{"line":225,"column":4},"end":{"line":225,"column":64}},"171":{"start":{"line":226,"column":4},"end":{"line":226,"column":62}},"172":{"start":{"line":227,"column":4},"end":{"line":231,"column":5}},"173":{"start":{"line":228,"column":6},"end":{"line":228,"column":55}},"174":{"start":{"line":229,"column":6},"end":{"line":229,"column":39}},"175":{"start":{"line":230,"column":6},"end":{"line":230,"column":44}},"176":{"start":{"line":234,"column":2},"end":{"line":240,"column":3}},"177":{"start":{"line":235,"column":4},"end":{"line":235,"column":82}},"178":{"start":{"line":236,"column":4},"end":{"line":236,"column":39}},"179":{"start":{"line":237,"column":4},"end":{"line":239,"column":5}},"180":{"start":{"line":237,"column":20},"end":{"line":239,"column":5}},"181":{"start":{"line":238,"column":6},"end":{"line":238,"column":65}},"182":{"start":{"line":242,"column":2},"end":{"line":264,"column":5}},"183":{"start":{"line":243,"column":4},"end":{"line":248,"column":6}},"184":{"start":{"line":250,"column":4},"end":{"line":252,"column":7}},"185":{"start":{"line":251,"column":6},"end":{"line":251,"column":49}},"186":{"start":{"line":253,"column":4},"end":{"line":256,"column":7}},"187":{"start":{"line":254,"column":6},"end":{"line":254,"column":58}},"188":{"start":{"line":255,"column":6},"end":{"line":255,"column":40}},"189":{"start":{"line":258,"column":4},"end":{"line":258,"column":51}},"190":{"start":{"line":259,"column":4},"end":{"line":259,"column":41}},"191":{"start":{"line":260,"column":4},"end":{"line":260,"column":35}},"192":{"start":{"line":261,"column":4},"end":{"line":261,"column":44}},"193":{"start":{"line":263,"column":4},"end":{"line":263,"column":24}},"194":{"start":{"line":266,"column":2},"end":{"line":283,"column":3}},"195":{"start":{"line":267,"column":4},"end":{"line":269,"column":18}},"196":{"start":{"line":269,"column":6},"end":{"line":269,"column":18}},"197":{"start":{"line":274,"column":4},"end":{"line":274,"column":31}},"198":{"start":{"line":277,"column":4},"end":{"line":277,"column":42}},"199":{"start":{"line":278,"column":4},"end":{"line":278,"column":38}},"200":{"start":{"line":279,"column":4},"end":{"line":279,"column":46}},"201":{"start":{"line":280,"column":4},"end":{"line":280,"column":53}},"202":{"start":{"line":280,"column":26},"end":{"line":280,"column":53}},"203":{"start":{"line":281,"column":4},"end":{"line":281,"column":53}},"204":{"start":{"line":281,"column":26},"end":{"line":281,"column":53}},"205":{"start":{"line":282,"column":4},"end":{"line":282,"column":16}},"206":{"start":{"line":285,"column":2},"end":{"line":316,"column":3}},"207":{"start":{"line":286,"column":4},"end":{"line":286,"column":51}},"208":{"start":{"line":287,"column":4},"end":{"line":287,"column":101}},"209":{"start":{"line":288,"column":4},"end":{"line":288,"column":26}},"210":{"start":{"line":288,"column":19},"end":{"line":288,"column":26}},"211":{"start":{"line":289,"column":4},"end":{"line":289,"column":33}},"212":{"start":{"line":290,"column":4},"end":{"line":292,"column":97}},"213":{"start":{"line":292,"column":90},"end":{"line":292,"column":97}},"214":{"start":{"line":293,"column":4},"end":{"line":293,"column":77}},"215":{"start":{"line":294,"column":4},"end":{"line":294,"column":25}},"216":{"start":{"line":294,"column":18},"end":{"line":294,"column":25}},"217":{"start":{"line":295,"column":4},"end":{"line":295,"column":92}},"218":{"start":{"line":296,"column":4},"end":{"line":297,"column":44}},"219":{"start":{"line":297,"column":6},"end":{"line":297,"column":44}},"220":{"start":{"line":298,"column":4},"end":{"line":298,"column":65}},"221":{"start":{"line":299,"column":4},"end":{"line":300,"column":16}},"222":{"start":{"line":300,"column":6},"end":{"line":300,"column":16}},"223":{"start":{"line":301,"column":4},"end":{"line":315,"column":6}},"224":{"start":{"line":307,"column":8},"end":{"line":307,"column":59}},"225":{"start":{"line":308,"column":8},"end":{"line":308,"column":42}},"226":{"start":{"line":309,"column":8},"end":{"line":309,"column":106}},"227":{"start":{"line":309,"column":26},"end":{"line":309,"column":106}},"228":{"start":{"line":310,"column":8},"end":{"line":310,"column":50}},"229":{"start":{"line":310,"column":36},"end":{"line":310,"column":50}},"230":{"start":{"line":311,"column":8},"end":{"line":311,"column":31}},"231":{"start":{"line":312,"column":8},"end":{"line":312,"column":26}},"232":{"start":{"line":313,"column":8},"end":{"line":313,"column":19}},"233":{"start":{"line":318,"column":2},"end":{"line":324,"column":3}},"234":{"start":{"line":319,"column":4},"end":{"line":323,"column":5}},"235":{"start":{"line":320,"column":6},"end":{"line":320,"column":32}},"236":{"start":{"line":321,"column":6},"end":{"line":322,"column":75}},"237":{"start":{"line":322,"column":60},"end":{"line":322,"column":75}},"238":{"start":{"line":326,"column":2},"end":{"line":345,"column":3}},"239":{"start":{"line":327,"column":4},"end":{"line":327,"column":73}},"240":{"start":{"line":328,"column":4},"end":{"line":328,"column":45}},"241":{"start":{"line":329,"column":4},"end":{"line":329,"column":42}},"242":{"start":{"line":330,"column":4},"end":{"line":330,"column":65}},"243":{"start":{"line":330,"column":53},"end":{"line":330,"column":65}},"244":{"start":{"line":332,"column":4},"end":{"line":332,"column":57}},"245":{"start":{"line":332,"column":31},"end":{"line":332,"column":57}},"246":{"start":{"line":334,"column":4},"end":{"line":334,"column":52}},"247":{"start":{"line":335,"column":4},"end":{"line":343,"column":5}},"248":{"start":{"line":336,"column":6},"end":{"line":336,"column":68}},"249":{"start":{"line":336,"column":59},"end":{"line":336,"column":68}},"250":{"start":{"line":338,"column":6},"end":{"line":338,"column":64}},"251":{"start":{"line":339,"column":6},"end":{"line":342,"column":74}},"252":{"start":{"line":342,"column":8},"end":{"line":342,"column":74}},"253":{"start":{"line":344,"column":4},"end":{"line":344,"column":23}},"254":{"start":{"line":347,"column":2},"end":{"line":475,"column":4}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":61}}]},"3":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":2}},{"start":{"line":4,"column":2},"end":{"line":4,"column":2}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":6},"end":{"line":4,"column":33}},{"start":{"line":4,"column":37},"end":{"line":4,"column":47}}]},"5":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"6":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":6}},{"start":{"line":14,"column":6},"end":{"line":14,"column":6}}]},"7":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":10},"end":{"line":14,"column":25}},{"start":{"line":14,"column":29},"end":{"line":14,"column":38}}]},"8":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":11},"end":{"line":15,"column":11}},{"start":{"line":15,"column":11},"end":{"line":15,"column":11}}]},"9":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":15},"end":{"line":15,"column":16}},{"start":{"line":15,"column":20},"end":{"line":15,"column":36}}]},"10":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"11":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"12":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":14}},{"start":{"line":26,"column":18},"end":{"line":26,"column":43}}]},"13":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":30},"end":{"line":27,"column":32}},{"start":{"line":27,"column":35},"end":{"line":27,"column":40}}]},"14":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":27}},{"start":{"line":29,"column":31},"end":{"line":29,"column":33}}]},"15":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"16":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":12}},{"start":{"line":30,"column":16},"end":{"line":30,"column":51}}]},"17":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"18":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":6}},{"start":{"line":33,"column":6},"end":{"line":33,"column":6}}]},"19":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"20":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"21":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"22":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"23":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":27}},{"start":{"line":47,"column":31},"end":{"line":47,"column":60}},{"start":{"line":47,"column":64},"end":{"line":47,"column":100}}]},"24":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"25":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":29}},{"start":{"line":70,"column":33},"end":{"line":70,"column":98}}]},"26":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":6}},{"start":{"line":72,"column":6},"end":{"line":72,"column":6}}]},"27":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":10},"end":{"line":72,"column":33}},{"start":{"line":72,"column":37},"end":{"line":72,"column":58}}]},"28":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"29":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"30":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"31":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"32":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"33":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":29},"end":{"line":118,"column":31}},{"start":{"line":118,"column":34},"end":{"line":118,"column":56}}]},"34":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"35":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":6},"end":{"line":125,"column":6}},{"start":{"line":125,"column":6},"end":{"line":125,"column":6}}]},"36":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":10},"end":{"line":125,"column":11}},{"start":{"line":125,"column":15},"end":{"line":125,"column":33}}]},"37":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":6}},{"start":{"line":126,"column":6},"end":{"line":126,"column":6}}]},"38":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":10},"end":{"line":126,"column":11}},{"start":{"line":126,"column":15},"end":{"line":126,"column":16}}]},"39":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":19},"end":{"line":127,"column":20}},{"start":{"line":127,"column":24},"end":{"line":127,"column":26}}]},"40":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":31},"end":{"line":127,"column":32}},{"start":{"line":127,"column":36},"end":{"line":127,"column":38}}]},"41":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"42":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":6},"end":{"line":137,"column":6}},{"start":{"line":137,"column":6},"end":{"line":137,"column":6}}]},"43":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":36},"end":{"line":137,"column":43}},{"start":{"line":137,"column":48},"end":{"line":137,"column":74}}]},"44":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"45":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":35},"end":{"line":138,"column":38}},{"start":{"line":138,"column":43},"end":{"line":138,"column":114}}]},"46":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":74},"end":{"line":138,"column":81}},{"start":{"line":138,"column":86},"end":{"line":138,"column":112}}]},"47":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"48":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":16}},{"start":{"line":142,"column":20},"end":{"line":142,"column":35}}]},"49":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":45},"end":{"line":143,"column":46}},{"start":{"line":143,"column":49},"end":{"line":143,"column":50}}]},"50":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":6}},{"start":{"line":145,"column":6},"end":{"line":145,"column":6}}]},"51":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":10},"end":{"line":145,"column":32}},{"start":{"line":145,"column":36},"end":{"line":145,"column":65}}]},"52":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":13},"end":{"line":148,"column":13}},{"start":{"line":148,"column":13},"end":{"line":148,"column":13}}]},"53":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]},"54":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":12},"end":{"line":150,"column":33}},{"start":{"line":150,"column":37},"end":{"line":150,"column":65}}]},"55":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":11},"end":{"line":155,"column":11}},{"start":{"line":155,"column":11},"end":{"line":155,"column":11}}]},"56":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":15},"end":{"line":155,"column":23}},{"start":{"line":155,"column":27},"end":{"line":155,"column":43}},{"start":{"line":156,"column":15},"end":{"line":156,"column":58}},{"start":{"line":157,"column":15},"end":{"line":157,"column":40}}]},"57":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"58":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":6},"end":{"line":165,"column":6}},{"start":{"line":165,"column":6},"end":{"line":165,"column":6}}]},"59":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":10},"end":{"line":165,"column":23}},{"start":{"line":165,"column":27},"end":{"line":165,"column":48}}]},"60":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"61":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":63},"end":{"line":169,"column":66}},{"start":{"line":169,"column":70},"end":{"line":169,"column":81}}]},"62":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":6},"end":{"line":170,"column":6}},{"start":{"line":170,"column":6},"end":{"line":170,"column":6}}]},"63":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":11},"end":{"line":171,"column":11}},{"start":{"line":171,"column":11},"end":{"line":171,"column":11}}]},"64":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"65":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"66":{"line":192,"type":"switch","locations":[{"start":{"line":193,"column":4},"end":{"line":194,"column":46}},{"start":{"line":195,"column":4},"end":{"line":196,"column":24}},{"start":{"line":197,"column":4},"end":{"line":203,"column":17}}]},"67":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":18},"end":{"line":200,"column":31}},{"start":{"line":200,"column":35},"end":{"line":200,"column":49}}]},"68":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":43},"end":{"line":208,"column":49}},{"start":{"line":208,"column":53},"end":{"line":208,"column":73}}]},"69":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"70":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":12}},{"start":{"line":209,"column":16},"end":{"line":209,"column":24}},{"start":{"line":209,"column":28},"end":{"line":209,"column":43}},{"start":{"line":209,"column":47},"end":{"line":209,"column":85}}]},"71":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":30},"end":{"line":211,"column":30}},{"start":{"line":211,"column":30},"end":{"line":211,"column":30}}]},"72":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":8}},{"start":{"line":213,"column":8},"end":{"line":213,"column":8}}]},"73":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":15},"end":{"line":215,"column":15}},{"start":{"line":215,"column":15},"end":{"line":215,"column":15}}]},"74":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":34},"end":{"line":216,"column":34}},{"start":{"line":216,"column":34},"end":{"line":216,"column":34}}]},"75":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":38},"end":{"line":216,"column":64}},{"start":{"line":216,"column":68},"end":{"line":216,"column":93}}]},"76":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"77":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":15},"end":{"line":245,"column":22}},{"start":{"line":245,"column":26},"end":{"line":245,"column":28}}]},"78":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":4},"end":{"line":267,"column":4}},{"start":{"line":267,"column":4},"end":{"line":267,"column":4}}]},"79":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":8},"end":{"line":267,"column":13}},{"start":{"line":267,"column":17},"end":{"line":267,"column":44}},{"start":{"line":268,"column":8},"end":{"line":268,"column":42}},{"start":{"line":268,"column":46},"end":{"line":268,"column":65}}]},"80":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":4}},{"start":{"line":280,"column":4},"end":{"line":280,"column":4}}]},"81":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":4},"end":{"line":281,"column":4}},{"start":{"line":281,"column":4},"end":{"line":281,"column":4}}]},"82":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"83":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"84":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":8},"end":{"line":290,"column":44}},{"start":{"line":291,"column":8},"end":{"line":291,"column":119}},{"start":{"line":292,"column":8},"end":{"line":292,"column":37}},{"start":{"line":292,"column":41},"end":{"line":292,"column":88}}]},"85":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":10},"end":{"line":291,"column":42}},{"start":{"line":291,"column":46},"end":{"line":291,"column":79}},{"start":{"line":291,"column":83},"end":{"line":291,"column":118}}]},"86":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":294,"column":4}},{"start":{"line":294,"column":4},"end":{"line":294,"column":4}}]},"87":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"88":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":8},"end":{"line":296,"column":12}},{"start":{"line":296,"column":16},"end":{"line":296,"column":53}}]},"89":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"90":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":34}},{"start":{"line":299,"column":38},"end":{"line":299,"column":72}}]},"91":{"line":307,"type":"cond-expr","locations":[{"start":{"line":307,"column":44},"end":{"line":307,"column":47}},{"start":{"line":307,"column":50},"end":{"line":307,"column":58}}]},"92":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8}},{"start":{"line":309,"column":8},"end":{"line":309,"column":8}}]},"93":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8}},{"start":{"line":310,"column":8},"end":{"line":310,"column":8}}]},"94":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":6},"end":{"line":321,"column":6}},{"start":{"line":321,"column":6},"end":{"line":321,"column":6}}]},"95":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":10},"end":{"line":321,"column":35}},{"start":{"line":321,"column":39},"end":{"line":321,"column":71}},{"start":{"line":322,"column":10},"end":{"line":322,"column":33}},{"start":{"line":322,"column":37},"end":{"line":322,"column":58}}]},"96":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":15},"end":{"line":329,"column":35}},{"start":{"line":329,"column":39},"end":{"line":329,"column":41}}]},"97":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":330,"column":4}},{"start":{"line":330,"column":4},"end":{"line":330,"column":4}}]},"98":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":8},"end":{"line":330,"column":12}},{"start":{"line":330,"column":16},"end":{"line":330,"column":51}}]},"99":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":4},"end":{"line":332,"column":4}},{"start":{"line":332,"column":4},"end":{"line":332,"column":4}}]},"100":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":6},"end":{"line":336,"column":6}},{"start":{"line":336,"column":6},"end":{"line":336,"column":6}}]},"101":{"line":336,"type":"binary-expr","locations":[{"start":{"line":336,"column":10},"end":{"line":336,"column":29}},{"start":{"line":336,"column":33},"end":{"line":336,"column":57}}]},"102":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":6},"end":{"line":339,"column":6}},{"start":{"line":339,"column":6},"end":{"line":339,"column":6}}]},"103":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":10},"end":{"line":339,"column":20}},{"start":{"line":340,"column":10},"end":{"line":341,"column":96}}]},"104":{"line":340,"type":"binary-expr","locations":[{"start":{"line":340,"column":12},"end":{"line":340,"column":34}},{"start":{"line":340,"column":38},"end":{"line":340,"column":42}},{"start":{"line":341,"column":12},"end":{"line":341,"column":95}}]},"105":{"line":341,"type":"cond-expr","locations":[{"start":{"line":341,"column":37},"end":{"line":341,"column":61}},{"start":{"line":341,"column":64},"end":{"line":341,"column":74}}]}},"code":["(function(mod) {","  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS","    return mod(require(\"../lib/infer\"), require(\"../lib/tern\"));","  if (typeof define == \"function\" && define.amd) // AMD","    return define([\"../lib/infer\", \"../lib/tern\"], mod);","  mod(tern, tern);","})(function(infer, tern) {","  \"use strict\";","","  function flattenPath(path) {","    if (!/(^|\\/)(\\.\\/|[^\\/]+\\/\\.\\.\\/)/.test(path)) return path;","    var parts = path.split(\"/\");","    for (var i = 0; i < parts.length; ++i) {","      if (parts[i] == \".\" || !parts[i]) parts.splice(i--, 1);","      else if (i && parts[i] == \"..\") { parts.splice(i - 1, 2); i -= 2; }","    }","    return parts.join(\"/\");","  }","","  function resolveName(name, data) {","    var excl = name.indexOf(\"!\");","    if (excl > -1) name = name.slice(0, excl);","","    var opts = data.options;","    var hasExt = /\\.js$/.test(name);","    if (hasExt || /^(?:\\w+:|\\/)/.test(name))","      return name + (hasExt ? \"\" : \".js\");","","    var base = opts.baseURL || \"\";","    if (base && base.charAt(base.length - 1) != \"/\") base += \"/\";","    if (opts.paths) {","      var known = opts.paths[name];","      if (known) return flattenPath(base + known + \".js\");","      var dir = name.match(/^([^\\/]+)(\\/.*)$/);","      if (dir) {","        var known = opts.paths[dir[1]];","        if (known) return flattenPath(base + known + dir[2] + \".js\");","      }","    }","    return flattenPath(base + name + \".js\");","  }","","  function getRequire(data) {","    if (!data.require) {","      data.require = new infer.Fn(\"require\", infer.ANull, [infer.cx().str], [\"module\"], new infer.AVal);","      data.require.computeRet = function(_self, _args, argNodes) {","        if (argNodes.length && argNodes[0].type == \"Literal\" && typeof argNodes[0].value == \"string\")","          return getInterface(path.join(path.dirname(data.currentFile), argNodes[0].value), data);","        return infer.ANull;","      };","    }","    return data.require;","  }","","  function getModuleInterface(data, exports) {","    var mod = new infer.Obj(infer.cx().definitions.requirejs.module, \"module\");","    var expProp = mod.defProp(\"exports\");","    expProp.propagate(getModule(data.currentFile, data));","    exports.propagate(expProp, EXPORT_OBJ_WEIGHT);","    return mod;","  }","","  function getExports(data) {","    var exports = new infer.Obj(true, \"exports\");","    getModule(data.currentFile, data).addType(exports, EXPORT_OBJ_WEIGHT);","    return exports;","  }","","  function getInterface(name, data) {","    if (data.options.override && Object.prototype.hasOwnProperty.call(data.options.override, name)) {","      var over = data.options.override[name];","      if (typeof over == \"string\" && over.charAt(0) == \"=\") return infer.def.parsePath(over.slice(1));","      if (typeof over == \"object\") {","        var known = getKnownModule(name, data);","        if (known) return known;","        var scope = data.interfaces[stripJSExt(name)] = new infer.Obj(null, stripJSExt(name));","        infer.def.load(over, scope);","        return scope;","      }","      name = over;","    }","","    if (!/^(https?:|\\/)|\\.js$/.test(name))","      name = resolveName(name, data);","    name = flattenPath(name);","","    var known = getKnownModule(name, data);","","    if (!known) {","      known = getModule(name, data);","      data.server.addFile(name, null, data.currentFile);","    }","    return known;","  }","","  function getKnownModule(name, data) {","    return data.interfaces[stripJSExt(name)];","  }","","  function getModule(name, data) {","    var known = getKnownModule(name, data);","    if (!known) {","      known = data.interfaces[stripJSExt(name)] = new infer.AVal;","      known.origin = name;","    }","    return known;","  }","","  var EXPORT_OBJ_WEIGHT = 50;","","  function stripJSExt(f) {","    return f.replace(/\\.js$/, '');","  }","","  var path = {","    dirname: function(path) {","      var lastSep = path.lastIndexOf(\"/\");","      return lastSep == -1 ? \"\" : path.slice(0, lastSep);","    },","    relative: function(from, to) {","      if (to.indexOf(from) == 0) return to.slice(from.length);","      else return to;","    },","    join: function(a, b) {","      if (b && b.charAt(0) != \".\") return b;","      if (a && b) return a + \"/\" + b;","      else return (a || \"\") + (b || \"\");","    }","  };","","  function runModule(server, args, argNodes, out) {","    var data = server.mod.requireJS;","    var deps = [], fn, exports, mod;","","    function interf(name) {","      if (name == \"require\") return getRequire(data);","      if (name == \"exports\") return exports || (exports = getExports(data));","      if (name == \"module\") return mod || (mod = getModuleInterface(data, exports || (exports = getExports(data))));","      return getInterface(name, data);","    }","","    if (argNodes && args.length > 1) {","      var node = argNodes[args.length == 2 ? 0 : 1];","      var base = path.relative(server.projectDir, path.dirname(node.sourceFile.name));","      if (node.type == \"Literal\" && typeof node.value == \"string\") {","        node.required = interf(path.join(base, node.value), data);","        deps.push(node.required);","      } else if (node.type == \"ArrayExpression\") for (var i = 0; i < node.elements.length; ++i) {","        var elt = node.elements[i];","        if (elt.type == \"Literal\" && typeof elt.value == \"string\") {","          elt.required = interf(path.join(base, elt.value), data);","          deps.push(elt.required);","        }","      }","    } else if (argNodes && args.length == 1 &&","               /FunctionExpression/.test(argNodes[0].type) &&","               argNodes[0].params.length) {","      // Simplified CommonJS call","      deps.push(interf(\"require\", data), interf(\"exports\", data), interf(\"module\", data));","      fn = args[0];","    }","","    if (!fn) {","      fn = args[Math.min(args.length - 1, 2)];","      if (!fn.isEmpty() && !fn.getFunctionType()) fn = null;","    }","","    if (fn) {","      fn.propagate(new infer.IsCallee(infer.ANull, deps, null, out || infer.ANull));","      if (out) out.originNode = fn.originNode;","    } else if (out) {","      args[0].propagate(out)","    }","","    return infer.ANull;","  }","","  infer.registerFunction(\"requirejs_define\", function(_self, args, argNodes) {","    if (!args.length) return infer.ANull","","    var server = infer.cx().parent, data = server.mod.requireJS","    return runModule(server, args, argNodes, getModule(data.currentFile, data))","  });","","  infer.registerFunction(\"requirejs_require\", function(_self, args, argNodes) {","    if (!args.length) return infer.ANull","    return runModule(infer.cx().parent, args, argNodes)","  });","","  // Parse simple ObjectExpression AST nodes to their corresponding JavaScript objects.","  function parseExprNode(node) {","    switch (node.type) {","    case \"ArrayExpression\":","      return node.elements.map(parseExprNode);","    case \"Literal\":","      return node.value;","    case \"ObjectExpression\":","      var obj = {};","      node.properties.forEach(function(prop) {","        var key = prop.key.name || prop.key.value;","        obj[key] = parseExprNode(prop.value);","      });","      return obj;","    }","  }","","  infer.registerFunction(\"requirejs_config\", function(_self, _args, argNodes) {","    var server = infer.cx().parent, data = server && server.mod.requireJS;","    if (data && argNodes && argNodes.length && argNodes[0].type == \"ObjectExpression\") {","      var config = parseExprNode(argNodes[0]);","      for (var key in config) if (config.hasOwnProperty(key)) {","        var value = config[key], exists = data.options[key];","        if (!exists) {","          data.options[key] = value;","        } else if (key == \"paths\") {","          for (var path in value) if (value.hasOwnProperty(path) && !data.options.paths[path])","            data.options.paths[path] = value[path];","        }","      }","    }","    return infer.ANull;","  });","","  function preCondenseReach(state) {","    var interfaces = infer.cx().parent.mod.requireJS.interfaces;","    var rjs = state.roots[\"!requirejs\"] = new infer.Obj(null);","    for (var name in interfaces) {","      var prop = rjs.defProp(name.replace(/\\./g, \"`\"));","      interfaces[name].propagate(prop);","      prop.origin = interfaces[name].origin;","    }","  }","","  function postLoadDef(data) {","    var cx = infer.cx(), interfaces = cx.definitions[data[\"!name\"]][\"!requirejs\"];","    var data = cx.parent.mod.requireJS;","    if (interfaces) for (var name in interfaces.props) {","      interfaces.props[name].propagate(getInterface(name, data));","    }","  }","","  tern.registerPlugin(\"requirejs\", function(server, options) {","    server.mod.requireJS = {","      interfaces: Object.create(null),","      options: options || {},","      currentFile: null,","      server: server","    };","","    server.on(\"beforeLoad\", function(file) {","      this.mod.requireJS.currentFile = file.name;","    });","    server.on(\"reset\", function() {","      this.mod.requireJS.interfaces = Object.create(null);","      this.mod.requireJS.require = null;","    });","","    server.on(\"preCondenseReach\", preCondenseReach)","    server.on(\"postLoadDef\", postLoadDef)","    server.on(\"typeAt\", findTypeAt)","    server.on(\"completion\", findCompletions)","","    server.addDefs(defs)","  });","","  function findTypeAt(_file, _pos, expr, type) {","    if (!expr || expr.node.type != \"Literal\" ||","        typeof expr.node.value != \"string\" || !expr.node.required)","      return type;","","    // The `type` is a value shared for all string literals.","    // We must create a copy before modifying `origin` and `originNode`.","    // Otherwise all string literals would point to the last jump location","    type = Object.create(type);","","    // Provide a custom origin location pointing to the require()d file","    var exportedType = expr.node.required;","    type.origin = exportedType.origin;","    type.originNode = exportedType.originNode;","    if (exportedType.doc) type.doc = exportedType.doc","    if (exportedType.url) type.url = exportedType.url","    return type;","  }","","  function findCompletions(file, query) {","    var wordEnd = tern.resolvePos(file, query.end);","    var callExpr = infer.findExpressionAround(file.ast, null, wordEnd, file.scope, \"CallExpression\");","    if (!callExpr) return;","    var callNode = callExpr.node;","    if (callNode.callee.type != \"Identifier\" ||","        !(callNode.callee.name == \"define\" || callNode.callee.name == \"require\" || callNode.callee.name == \"requirejs\")||","        callNode.arguments.length < 1 || callNode.arguments[0].type != \"ArrayExpression\") return;","    var argNode = findRequireModule(callNode.arguments[0].elements, wordEnd);","    if (!argNode) return;","    var word = argNode.raw.slice(1, wordEnd - argNode.start), quote = argNode.raw.charAt(0);","    if (word && word.charAt(word.length - 1) == quote)","      word = word.slice(0, word.length - 1);","    var completions = completeModuleName(query, word, file.name);","    if (argNode.end == wordEnd + 1 && file.text.charAt(wordEnd) == quote)","      ++wordEnd;","    return {","      start: tern.outputPos(query, file, argNode.start),","      end: tern.outputPos(query, file, wordEnd),","      isProperty: false,","      isObjectKey: false,","      completions: completions.map(function(rec) {","        var name = typeof rec == \"string\" ? rec : rec.name;","        var string = JSON.stringify(name);","        if (quote == \"'\") string = quote + string.slice(1, string.length -1).replace(/'/g, \"\\\\'\") + quote;","        if (typeof rec == \"string\") return string;","        rec.displayName = name;","        rec.name = string;","        return rec;","      })","    };","  }","","  function findRequireModule(argsNode, wordEnd) {","    for (var i = 0; i < argsNode.length; i++) {","      var argNode = argsNode[i];","      if (argNode.type == \"Literal\" && typeof argNode.value == \"string\" &&","          argNode.start < wordEnd && argNode.end > wordEnd) return argNode;","    }","  }","","  function completeModuleName(query, word, parentFile) {","    var cx = infer.cx(), server = cx.parent, data = server.mod.requireJS;","    var currentName = stripJSExt(parentFile);","    var base = data.options.baseURL || \"\";","    if (base && base.charAt(base.length - 1) != \"/\") base += \"/\";","","    if (query.caseInsensitive) word = word.toLowerCase();","","    var completions = [], modules = data.interfaces;","    for (var name in modules) {","      if (name == currentName || !modules[name].getType()) continue;","","      var moduleName = name.substring(base.length, name.length);","      if (moduleName &&","          !(query.filter !== false && word &&","            (query.caseInsensitive ? moduleName.toLowerCase() : moduleName).indexOf(word) !== 0))","        tern.addCompletion(query, completions, moduleName, modules[name]);","    }","    return completions;","  }","","  var defs = {","    \"!name\": \"requirejs\",","    \"!define\": {","      module: {","        id: \"string\",","        uri: \"string\",","        config: \"fn() -> ?\"","      },","      config: {","        \"!url\": \"http://requirejs.org/docs/api.html#config\",","        baseUrl: {","          \"!type\": \"string\",","          \"!doc\": \"the root path to use for all module lookups\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-baseUrl\"","        },","        paths: {","          \"!type\": \"?\",","          \"!doc\": \"path mappings for module names not found directly under baseUrl. The path settings are assumed to be relative to baseUrl, unless the paths setting starts with a '/' or has a URL protocol in it ('like http:').\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-paths\"","        },","        shim: {","          \"!type\": \"?\",","          \"!doc\": \"Configure the dependencies, exports, and custom initialization for older, traditional 'browser globals' scripts that do not use define() to declare the dependencies and set a module value.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-shim\"","        },","        map: {","          \"!type\": \"?\",","          \"!doc\": \"For the given module prefix, instead of loading the module with the given ID, substitute a different module ID.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-map\"","        },","        config: {","          \"!type\": \"?\",","          \"!doc\": \"There is a common need to pass configuration info to a module. That configuration info is usually known as part of the application, and there needs to be a way to pass that down to a module. In RequireJS, that is done with the config option for requirejs.config(). Modules can then read that info by asking for the special dependency 'module' and calling module.config().\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-moduleconfig\"","        },","        packages: {","          \"!type\": \"?\",","          \"!doc\": \"configures loading modules from CommonJS packages. See the packages topic for more information.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-packages\"","        },","        nodeIdCompat: {","          \"!type\": \"?\",","          \"!doc\": \"Node treats module ID example.js and example the same. By default these are two different IDs in RequireJS. If you end up using modules installed from npm, then you may need to set this config value to true to avoid resolution issues.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-nodeIdCompat\"","        },","        waitSeconds: {","          \"!type\": \"number\",","          \"!doc\": \"The number of seconds to wait before giving up on loading a script. Setting it to 0 disables the timeout. The default is 7 seconds.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-waitSeconds\"","        },","        context: {","          \"!type\": \"number\",","          \"!doc\": \"A name to give to a loading context. This allows require.js to load multiple versions of modules in a page, as long as each top-level require call specifies a unique context string. To use it correctly, see the Multiversion Support section.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-context\"","        },","        deps: {","          \"!type\": \"?\",","          \"!doc\": \"An array of dependencies to load. Useful when require is defined as a config object before require.js is loaded, and you want to specify dependencies to load as soon as require() is defined. Using deps is just like doing a require([]) call, but done as soon as the loader has processed the configuration. It does not block any other require() calls from starting their requests for modules, it is just a way to specify some modules to load asynchronously as part of a config block.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-deps\"","        },","        callback: {","          \"!type\": \"fn()\",","          \"!doc\": \"A function to execute after deps have been loaded. Useful when require is defined as a config object before require.js is loaded, and you want to specify a function to require after the configuration's deps array has been loaded.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-callback\"","        },","        enforceDefine: {","          \"!type\": \"bool\",","          \"!doc\": \"If set to true, an error will be thrown if a script loads that does not call define() or have a shim exports string value that can be checked. See Catching load failures in IE for more information.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-enforceDefine\"","        },","        xhtml: {","          \"!type\": \"bool\",","          \"!doc\": \"If set to true, document.createElementNS() will be used to create script elements.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-xhtml\"","        },","        urlArgs: {","          \"!type\": \"string\",","          \"!doc\": \"Extra query string arguments appended to URLs that RequireJS uses to fetch resources. Most useful to cache bust when the browser or server is not configured correctly.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-urlArgs\"","        },","        scriptType: {","          \"!type\": \"string\",","          \"!doc\": \"Specify the value for the type='' attribute used for script tags inserted into the document by RequireJS. Default is 'text/javascript'. To use Firefox's JavaScript 1.8 features, use 'text/javascript;version=1.8'.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-scriptType\"","        },","        skipDataMain: {","          \"!type\": \"bool\",","          \"!doc\": \"Introduced in RequireJS 2.1.9: If set to true, skips the data-main attribute scanning done to start module loading. Useful if RequireJS is embedded in a utility library that may interact with other RequireJS library on the page, and the embedded version should not do data-main loading.\",","          \"!url\": \"http://requirejs.org/docs/api.html#config-skipDataMain\"","        }","      },","      RequireJSError: {","        \"prototype\" : {","          \"!proto\": \"Error.prototype\",","          \"requireType\": {","            \"!type\": \"string\",","            \"!doc\": \"A string value with a general classification, like 'timeout', 'nodefine', 'scripterror'.\",","            \"!url\": \"http://requirejs.org/docs/api.html#errors\"","          },","          \"requireModules\": {","            \"!type\": \"[string]\",","            \"!doc\": \"An array of module names/URLs that timed out.\",","            \"!url\": \"http://requirejs.org/docs/api.html#errors\"","          }","        }","      }","    },","    requirejs: {","      \"!type\": \"fn(deps: [string], callback: fn(), errback?: fn(err: +RequireJSError)) -> !custom:requirejs_require\",","      onError: {","        \"!type\": \"fn(err: +RequireJSError)\",","        \"!doc\": \"To detect errors that are not caught by local errbacks, you can override requirejs.onError()\",","        \"!url\": \"http://requirejs.org/docs/api.html#requirejsonerror\"","      },","      load: {","        \"!type\": \"fn(context: ?, moduleName: string, url: string)\"","      },","      config: \"fn(config: config) -> !custom:requirejs_config\",","      version: \"string\",","      isBrowser: \"bool\"","    },","    require: \"requirejs\",","    define: {","      \"!type\": \"fn(deps: [string], callback: fn()) -> !custom:requirejs_define\",","      amd: {","        jQuery: \"bool\"","      }","    }","  };","});",""],"l":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"17":0,"20":1,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"40":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"63":1,"64":0,"65":0,"66":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"80":0,"83":0,"84":0,"85":0,"87":0,"89":0,"90":0,"91":0,"93":0,"96":1,"97":0,"100":1,"101":0,"102":0,"103":0,"104":0,"106":0,"109":1,"111":1,"112":0,"115":1,"117":0,"118":0,"121":0,"122":0,"125":0,"126":0,"127":0,"131":1,"132":0,"133":0,"135":1,"136":0,"137":0,"138":0,"139":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"155":0,"159":0,"160":0,"163":0,"164":0,"165":0,"168":0,"169":0,"170":0,"171":0,"172":0,"175":0,"178":1,"179":0,"181":0,"182":0,"185":1,"186":0,"187":0,"191":1,"192":0,"194":0,"196":0,"198":0,"199":0,"200":0,"201":0,"203":0,"207":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"221":0,"224":1,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"234":1,"235":0,"236":0,"237":0,"238":0,"242":1,"243":0,"250":0,"251":0,"253":0,"254":0,"255":0,"258":0,"259":0,"260":0,"261":0,"263":0,"266":1,"267":0,"269":0,"274":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"318":1,"319":0,"320":0,"321":0,"322":0,"326":1,"327":0,"328":0,"329":0,"330":0,"332":0,"334":0,"335":0,"336":0,"338":0,"339":0,"342":0,"344":0,"347":1}},"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/webpack.js":{"path":"/home/travis/build/npmtest/node-npmtest-tern/node_modules/tern/plugin/webpack.js","s":{"1":1,"2":0,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"isArray","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":20}}},"2":{"name":"getResolver","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":39},"end":{"line":33,"column":54}}},"4":{"name":"resolveToFile","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":51}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":31},"end":{"line":72,"column":57}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":36},"end":{"line":79,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":69}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":69}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}},"7":{"start":{"line":9,"column":0},"end":{"line":11,"column":1}},"8":{"start":{"line":10,"column":2},"end":{"line":10,"column":63}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":23}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":66}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":90}},"13":{"start":{"line":18,"column":0},"end":{"line":59,"column":1}},"14":{"start":{"line":19,"column":2},"end":{"line":26,"column":3}},"15":{"start":{"line":27,"column":2},"end":{"line":27,"column":92}},"16":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":35}},"18":{"start":{"line":31,"column":2},"end":{"line":31,"column":60}},"19":{"start":{"line":32,"column":2},"end":{"line":56,"column":3}},"20":{"start":{"line":33,"column":4},"end":{"line":55,"column":6}},"21":{"start":{"line":34,"column":6},"end":{"line":54,"column":7}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":46}},"23":{"start":{"line":36,"column":13},"end":{"line":54,"column":7}},"24":{"start":{"line":37,"column":8},"end":{"line":37,"column":38}},"25":{"start":{"line":38,"column":8},"end":{"line":42,"column":9}},"26":{"start":{"line":39,"column":10},"end":{"line":39,"column":55}},"27":{"start":{"line":41,"column":10},"end":{"line":41,"column":39}},"28":{"start":{"line":43,"column":13},"end":{"line":54,"column":7}},"29":{"start":{"line":44,"column":8},"end":{"line":44,"column":41}},"30":{"start":{"line":45,"column":8},"end":{"line":49,"column":9}},"31":{"start":{"line":46,"column":10},"end":{"line":46,"column":58}},"32":{"start":{"line":48,"column":10},"end":{"line":48,"column":39}},"33":{"start":{"line":50,"column":13},"end":{"line":54,"column":7}},"34":{"start":{"line":51,"column":8},"end":{"line":51,"column":66}},"35":{"start":{"line":53,"column":8},"end":{"line":53,"column":40}},"36":{"start":{"line":58,"column":2},"end":{"line":58,"column":48}},"37":{"start":{"line":61,"column":0},"end":{"line":70,"column":1}},"38":{"start":{"line":62,"column":4},"end":{"line":62,"column":50}},"39":{"start":{"line":63,"column":4},"end":{"line":63,"column":58}},"40":{"start":{"line":64,"column":4},"end":{"line":69,"column":5}},"41":{"start":{"line":65,"column":6},"end":{"line":65,"column":70}},"42":{"start":{"line":67,"column":6},"end":{"line":67,"column":26}},"43":{"start":{"line":68,"column":6},"end":{"line":68,"column":15}},"44":{"start":{"line":72,"column":0},"end":{"line":83,"column":2}},"45":{"start":{"line":73,"column":2},"end":{"line":73,"column":62}},"46":{"start":{"line":74,"column":2},"end":{"line":74,"column":51}},"47":{"start":{"line":75,"column":2},"end":{"line":75,"column":66}},"48":{"start":{"line":76,"column":2},"end":{"line":76,"column":49}},"49":{"start":{"line":77,"column":2},"end":{"line":77,"column":31}},"50":{"start":{"line":78,"column":2},"end":{"line":78,"column":33}},"51":{"start":{"line":79,"column":2},"end":{"line":82,"column":4}},"52":{"start":{"line":80,"column":4},"end":{"line":80,"column":60}},"53":{"start":{"line":81,"column":4},"end":{"line":81,"column":68}}},"branchMap":{"1":{"line":1,"type":"if","locations":[{"start":{"line":1,"column":0},"end":{"line":1,"column":0}},{"start":{"line":1,"column":0},"end":{"line":1,"column":0}}]},"2":{"line":1,"type":"binary-expr","locations":[{"start":{"line":1,"column":4},"end":{"line":1,"column":30}},{"start":{"line":1,"column":34},"end":{"line":1,"column":59}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":20}},{"start":{"line":21,"column":24},"end":{"line":21,"column":40}}]},"4":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":66},"end":{"line":27,"column":85}},{"start":{"line":27,"column":88},"end":{"line":27,"column":92}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":23},"end":{"line":27,"column":33}},{"start":{"line":27,"column":37},"end":{"line":27,"column":62}}]},"6":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"7":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":35}},{"start":{"line":31,"column":39},"end":{"line":31,"column":60}}]},"8":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"9":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"10":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":13},"end":{"line":36,"column":13}},{"start":{"line":36,"column":13},"end":{"line":36,"column":13}}]},"11":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"12":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":13},"end":{"line":43,"column":13}},{"start":{"line":43,"column":13},"end":{"line":43,"column":13}}]},"13":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"14":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":13},"end":{"line":50,"column":13}},{"start":{"line":50,"column":13},"end":{"line":50,"column":13}}]},"15":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":19},"end":{"line":73,"column":37}},{"start":{"line":73,"column":41},"end":{"line":73,"column":62}}]},"16":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":16},"end":{"line":74,"column":31}},{"start":{"line":74,"column":35},"end":{"line":74,"column":51}}]},"17":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":11},"end":{"line":81,"column":19}},{"start":{"line":81,"column":23},"end":{"line":81,"column":68}}]}},"code":["if (typeof exports != \"object\" || typeof module != \"object\")","  throw new Error(\"This plugin works only in a CommonJS environment\")","","var infer = require(\"../lib/infer\");","var tern = require(\"../lib/tern\");","require(\"./commonjs\");","require(\"./es_modules\");","","function isArray(v) {","  return Object.prototype.toString.call(v) == \"[object Array]\";","};","","var fs = require('fs');","var path = require(\"path\");","var ResolverFactory = require(\"enhanced-resolve\").ResolverFactory;","var SyncNodeJsInputFileSystem = require(\"enhanced-resolve/lib/SyncNodeJsInputFileSystem\");","","function getResolver(modules, configPath) {","  var config = {","    unsafeCache: true,","    modules: modules || [\"node_modules\"],","    extensions: [\".js\", \".jsx\", \".json\"],","    aliasFields: [\"browser\"],","    mainFields: [\"browser\", \"web\", \"browserify\", \"main\"],","    fileSystem: new SyncNodeJsInputFileSystem()","  }","  var webpackConfig = (configPath && fs.existsSync(configPath)) ? require(configPath) : null","  if (typeof webpackConfig === 'function') {","    webpackConfig = webpackConfig()","  }","  var resolveConfig = webpackConfig && webpackConfig.resolve","  if (resolveConfig) {","    Object.keys(resolveConfig).forEach(function (key) {","      if (key === 'packageMains') {","        config.mainFields = resolveConfig[key]","      } else if (key === 'root') {","        var roots = resolveConfig[key]","        if (isArray(roots)) {","          config.modules = roots.concat(config.modules)","        } else {","          config.modules.unshift(roots)","        }","      } else if (key === 'fallback') {","        var fallback = resolveConfig[key]","        if (isArray(fallback)) {","          config.modules = config.modules.concat(fallback)","        } else {","          config.modules.push(fallback)","        }","      } else if (key === 'modules') {","        config.modules = config.modules.concat(resolveConfig[key])","      } else {","        config[key] = resolveConfig[key]","      }","    })","  }","","  return ResolverFactory.createResolver(config);","}","","function resolveToFile(resolver, name, parentFile) {","    var projectDir = infer.cx().parent.projectDir;","    var fullParent = path.resolve(projectDir, parentFile);","    try {","      return resolver.resolveSync({}, path.dirname(fullParent), name);","    } catch(e) {","      console.log(e.stack)","      return ''","    }","}","","tern.registerPlugin(\"webpack\", function(server, options) {","  var configPath = options.configPath || './webpack.config.js'","  var modules = options.modules || ['node_modules']","  configPath = path.resolve(server.options.projectDir, configPath)","  var resolver = getResolver(modules, configPath)","  server.loadPlugin(\"commonjs\")","  server.loadPlugin(\"es_modules\")","  server.mod.modules.resolvers.push(function (name, parentFile) {","    var resolved = resolveToFile(resolver, name, parentFile)","    return resolved && infer.cx().parent.normalizeFilename(resolved)","  })","})",""],"l":{"1":1,"2":0,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"13":1,"14":1,"15":1,"16":1,"18":1,"19":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"43":0,"44":0,"45":0,"46":0,"48":0,"50":0,"51":0,"53":0,"58":0,"61":1,"62":0,"63":0,"64":0,"65":0,"67":0,"68":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0}}}